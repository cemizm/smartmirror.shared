var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["ad","angular","angular/cor","angular/ion","angular/platform","app.compon","appcompon","applic","appmodul","basoglu","bootstrap","browser","browsermodul","cem","cemizm/smartmirror","class","compon","console.log(err","constructor(priv","contain","declar","direct","document","err","export","found","gener","getal","github","here","https://sm","import","index","instal","librari","licens","match","mirror","mirrorservic","mit","ngmodul","npm","onc","page","pipe","project","provid","readm","result","run","savedocument","servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","this.mirror","this.mirrorservice.getall().subscribe(mirror","us","usag","via","webapi.azurewebsites.net/api"],"overview.html":["1","10","19","bootstrap","cluster_smartmirrormodul","cluster_smartmirrormodule_import","commonmodul","declar","depend","export","httpmodul","inject","interfac","legend","match","modul","out","overview","provid","reset","result","smartmirrormodul","zoom"],"modules.html":["brows","browser","match","modul","result","smartmirrormodul","support","svg"],"modules/SmartMirrorModule.html":["angular","angular/common","angular/cor","angular/http","appcompon","appmodul","authservic","baseservic","bootstrap","browsermodul","cemizm/smartmirror","class","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","commonmodul","const","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","declar","dep","depend","descript","exampl","export","file","forroot(opt","function","g","gsuite/index","gsuite/shared/base.servic","gsuite/tasks/task.servic","gsuite/tasks/tasklist.servic","httpmodul","https://sm","import","info","injectiontoken","injectiontoken(\"smartmirrormodule_opt","legend","match","mirror","mirrorservic","models/index","modul","modulewithprovid","new","ngmodul","option","out","project","provid","reset","result","return","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/ticket.servic","services/token.servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","src/index.t","static","storageservic","stuff","suit","tasklistservic","taskservic","ticketservic","tokenservic","usefactori","usevalu","utils/index","utils/module.config","utils/module.opt","webapi.azurewebsites.net/api","zoom"],"injectables/AuthService.html":["angular/cor","api","auth","authent","authservic","cemizm/smartmirror","class","console.log(err","console.log(r","constructor","constructor(priv","constructor(tokenservic","creat","default","defin","descript","detail","email","err","exampl","export","file","given","http","import","info","inject","interact","intern","link","localstorag","login","login(email","loginr","loginres.accesstoken","loginrespons","map(r","match","md5password\").subscribe(r","method","mirror","models/us","new","observ","param","paramet","password","perform","privat","profil","properti","public","reg","reg).map(r","regist","register(reg","registerrequest","registr","rel","request","res.json","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","save","servic","share","smart","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","store","string","this.authservice.login(\"cem@basoglu.d","this.service.get(this.api).map(r","this.service.post(this.api","this.tokenservice.token","token","token.servic","tokenservic","type","typescript","url","user","valu","verifi","void"],"injectables/BaseService.html":["add","angular","angular/cor","angular/http","api","argument","authent","baseservic","basic","bearer","bodi","class","client","config","configur","const","constructor","constructor(http","constructor(priv","creat","default","defin","delet","delete(url","descript","each","enhanc","export","extend","file","get(url","handl","head","head(url","header","http","https://www.googleapis.com","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","observ","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","properti","public","put","put(url","re","remot","remov","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set('author","requestoptions.url","requestoptionsarg","respons","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","sourc","src/gsuite/shared/base.service.t","src/gsuite/shared/base.service.ts:14","src/gsuite/shared/base.service.ts:28","src/gsuite/shared/base.service.ts:35","src/gsuite/shared/base.service.ts:42","src/gsuite/shared/base.service.ts:49","src/gsuite/shared/base.service.ts:56","src/gsuite/shared/base.service.ts:63","src/gsuite/shared/base.service.ts:70","src/gsuite/shared/base.service.ts:80","store","string","this.api","this.http.request(request","this.sendrequest({method","token","tokenservic","unauthor","url","us","valu","void"],"injectables/MirrorService.html":["angular/cor","api","authent","class","collect","constructor","constructor(priv","constructor(servic","creat","default","defin","delet","deletebyid","deletebyid(id","descript","export","file","get","getal","getbyid","getbyid(id","given","http","id","id).map","id).map(r","import","info","inject","interact","intern","match","method","mirror","mirror).map","mirrorservic","models/mirror","observ","param","paramet","privat","properti","public","rel","remot","request","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","string","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.put(this.api","type","updat","update(mirror","url","user","valu","void"],"injectables/SmartMirrorModuleConfig.html":["angular/cor","api","apiurl","class","configr","configur","constructor","constructor(opt","constructor(priv","creat","defin","descript","export","file","given","http","import","info","inject","match","mirror","modul","module.opt","option","options:smartmirrormoduleopt","param","paramet","properti","request","result","return","smart","smartmirrormoduleconfig","smartmirrormoduleopt","sourc","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","string","this.options.apiurl","type","url","us","void"],"injectables/SmartMirrorService.html":["401","add","angular","angular/cor","angular/http","api","argument","authent","basic","bearer","bodi","caller","catch(r","class","client","config","configur","constructor","constructor(config","constructor(priv","creat","defin","delet","delete(url","descript","each","enhanc","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","export","extend","file","get(url","handl","head","head(url","header","http","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","notifi","observ","observable.throw(errorrespons","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","public","put","put(url","re","remot","remov","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","smartmirrormoduleconfig","smartmirrorservic","sourc","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","store","string","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.sendrequest({method","this.tokenservice.invalid","this.tokenservice.token","token","token.servic","tokenservic","unauthor","url","us","utils/module.config","void"],"injectables/StorageService.html":["angular/cor","applic","class","clear","crud","defin","descript","exist","export","file","get","getitem","getitem(key","given","import","index","info","inject","item","key","key(index","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","match","method","null","number","oper","otherwis","param","paramet","remov","removeitem","removeitem(key","result","retriev","return","servic","set","setitem","setitem(key","sourc","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","storag","storageservic","string","valu","void","whole","wrapper"],"injectables/TaskListService.html":["100","angular/cor","api","authent","authtoken","baseservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","export","file","get(authtoken","googl","http","identifi","import","info","inject","interact","interfac","intern","list","list(authtoken","map(r","match","maximum","maxresult","method","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","sourc","specifi","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:29","src/gsuite/tasks/tasklist.service.ts:43","src/gsuite/tasks/tasklist.service.ts:55","string","task","tasklist","tasklist.model","tasklistqueryopt","tasklistservic","tasks/v1/users/@me/list","taskservic","this.service.get(this.api","token","type","type.model","url","user","user'","valu","void"],"injectables/TaskService.html":["100","angular/cor","api","authent","authtoken","baseservic","boolean","bound","class","complet","completedmax","completedmin","constructor","constructor(priv","constructor(servic","creat","date","default","defin","delet","due","duemax","duemin","export","fals","file","filter","flag","googl","hidden","http","identifi","import","indic","info","inject","interact","interfac","intern","last","list","list(authtoken","lower","map(r","match","maximum","maxresult","method","modif","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","showcomplet","showdelet","showhidden","sourc","specifi","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:62","src/gsuite/tasks/task.service.ts:78","string","task","task'","task.model","tasklist","taskqueryopt","tasks/v1/list","taskservic","this.service.get(this.api","time","token","true","type","type.model","updatedmin","upper","url","user","user'","valu","void","whether"],"injectables/TicketService.html":["angular/cor","api","authent","authservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","descript","export","file","get","get(id","get(id:str","given","http","id","id).map(r","import","info","inject","interact","intern","map(r","match","method","mirror","models/mirror","models/ticket","new","number","observ","param","paramet","privat","properti","public","regist","register(numb","registr","rel","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","set","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","string","this.service.get(this.api","this.service.post(this.api","ticket","ticketservic","type","url","user","valu","void"],"injectables/TokenService.html":["1","2","access","angular/cor","auth.token","authent","authenticatd","authenticationfailur","authservic","authupdatetyp","cemizm/smartmirror","class","console.log(\"authent","const","constructor","constructor(priv","constructor(storageservic","creat","defin","descript","enum","exampl","export","file","get","import","info","inject","invalid","jw","listen","localstorag","loginsucess","match","method","new","notif","observ","param","paramet","privat","properti","result","return","rxj","servic","set","share","sourc","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","storage.servic","storageservic","store","string","subject","subscrib","this.invalid","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","token","token(token","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","updat","user","void"],"interfaces/CalendarSettings.html":["boolean","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:104","src/models/widget.ts:99","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/LoginRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","string","subsequ","token","type","user","void"],"interfaces/LoginResponse.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:16","string","subsequ","token","type","user","void"],"interfaces/MailSettings.html":["boolean","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:80","src/models/widget.ts:85","src/models/widget.ts:90","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Mirror.html":["administr","array","belong","defin","descript","display","export","file","frontend","id","imag","import","info","interfac","match","mirror","name","oper","path","properti","result","sourc","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","string","type","us","user","void","widget"],"interfaces/NewsSetting.html":["boolean","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:67","src/models/widget.ts:72","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/RegisterRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","string","subsequ","token","type","user","void"],"interfaces/ResponseType.html":["array","collect","defin","etag","export","file","info","interfac","item","kind","match","next","nextpagetoken","page","properti","request","resourc","responsetyp","result","sourc","src/gsuite/shared/respons","string","token","type","type.model.t","type.model.ts:13","type.model.ts:17","type.model.ts:5","type.model.ts:9","us","void"],"interfaces/SmartMirrorModuleOptions.html":["10.06.17","apiurl","apiurl:str","cem","creat","defin","descript","export","file","info","interfac","match","properti","result","smartmirrormoduleopt","sourc","src/utils/module.options.t","src/utils/module.options.ts:6","type","void"],"interfaces/Task.html":["accord","alway","anoth","array","boolean","case","clear","collect","complet","correspond","date","default","defin","delet","describ","differ","due","etag","export","fals","field","file","flag","greater","hidden","id","identifi","import","indic","info","interfac","kind","last","level","lexicograph","link","link.model","list","mark","match","method","modif","move","needsact","note","omit","option","order","parent","point","posit","properti","read","resourc","result","retriev","same","selflink","sibl","sourc","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.model.ts:11","src/gsuite/tasks/task.model.ts:15","src/gsuite/tasks/task.model.ts:19","src/gsuite/tasks/task.model.ts:23","src/gsuite/tasks/task.model.ts:27","src/gsuite/tasks/task.model.ts:32","src/gsuite/tasks/task.model.ts:39","src/gsuite/tasks/task.model.ts:43","src/gsuite/tasks/task.model.ts:47","src/gsuite/tasks/task.model.ts:51","src/gsuite/tasks/task.model.ts:55","src/gsuite/tasks/task.model.ts:59","src/gsuite/tasks/task.model.ts:64","src/gsuite/tasks/task.model.ts:68","src/gsuite/tasks/task.model.ts:7","statu","string","task","task'","tasklink","tasks#task","time","titl","top","type","under","updat","url","us","void","whether"],"interfaces/TaskLink.html":["between","defin","descript","e.g","email","everyth","export","file","html","info","interfac","link","link.model.t","link.model.ts:13","link.model.ts:17","link.model.ts:9","match","properti","result","sourc","speak","src/gsuite/tasks/task","string","task","tasklink","type","url","void"],"interfaces/TaskListQueryOptions.html":["100","angular/cor","api","authent","authtoken","baseservic","class","constructor(priv","creat","default","defin","descript","export","file","get(authtoken","googl","http","identifi","import","info","inject","interact","interfac","intern","list","list(authtoken","map(r","match","maximum","maxresult","number","observ","on","option","page","pagetoken","param","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","sourc","specifi","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:16","src/gsuite/tasks/tasklist.service.ts:20","string","task","tasklist","tasklist.model","tasklistqueryopt","tasklistservic","tasks/v1/users/@me/list","taskservic","this.service.get(this.api","token","type","type.model","url","user","user'","void"],"interfaces/TaskQueryOptions.html":["100","angular/cor","api","authent","authtoken","baseservic","boolean","bound","class","complet","completedmax","completedmin","constructor(priv","creat","date","default","defin","delet","descript","due","duemax","duemin","export","fals","file","filter","flag","googl","hidden","http","identifi","import","indic","info","inject","interact","interfac","intern","last","list","list(authtoken","lower","map(r","match","maximum","maxresult","modif","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","showcomplet","showdelet","showhidden","sourc","specifi","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:16","src/gsuite/tasks/task.service.ts:20","src/gsuite/tasks/task.service.ts:24","src/gsuite/tasks/task.service.ts:28","src/gsuite/tasks/task.service.ts:32","src/gsuite/tasks/task.service.ts:36","src/gsuite/tasks/task.service.ts:40","src/gsuite/tasks/task.service.ts:44","src/gsuite/tasks/task.service.ts:48","src/gsuite/tasks/task.service.ts:52","string","task","task'","task.model","tasklist","taskqueryopt","tasks/v1/list","taskservic","this.service.get(this.api","time","token","true","type","type.model","updatedmin","upper","url","user","user'","void","whether"],"interfaces/TaskSetting.html":["boolean","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:53","src/models/widget.ts:57","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Tasklist.html":["alway","contain","date","defin","delet","descript","etag","export","file","id","identifi","info","interfac","kind","last","list","manag","match","modif","more","on","point","properti","resourc","result","retriev","selflink","sourc","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.model.ts:13","src/gsuite/tasks/tasklist.model.ts:17","src/gsuite/tasks/tasklist.model.ts:21","src/gsuite/tasks/tasklist.model.ts:25","src/gsuite/tasks/tasklist.model.ts:29","src/gsuite/tasks/tasklist.model.ts:9","string","task","tasklist","tasks#tasklist","time","titl","type","updat","url","us","user","void","want","way"],"interfaces/Ticket.html":["09.06.17","cem","creat","defin","descript","export","file","id","info","interfac","match","mirror","mirrorid","number","properti","regist","request","result","sourc","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","string","ticket","type","us","void"],"interfaces/User.html":["09.06.17","access","accesstoken","api","authent","cem","creat","defin","descript","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:6","src/models/user.ts:7","string","subsequ","token","type","user","void"],"interfaces/WeatherSetting.html":["boolean","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:37","src/models/widget.ts:42","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Widget.html":["boolean","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:11","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","string","task","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"miscellaneous.html":["0","09.06.17","1","2","3","4","5","auth.token","authenticationfailur","authupdatetyp","calend","cem","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","default","enumer","function","inact","left","loginsucess","mail","match","miscellan","new","note","result","right","smartmirrormodule_opt","src/index.t","src/models/enums.t","src/services/token.service.t","tokenkey","undefin","valu","variabl","weather","widgetsid","widgettyp"],"coverage.html":["1/2","1/3","1/4","10/11","100","11/11","16/16","25","3/3","3/4","33","4/4","4/5","5/5","50","6/6","7/7","75","80","90","authservic","baseservic","calendarset","coverag","document","file","identifi","inject","interfac","link.model.t","loginrequest","loginrespons","mailset","match","mirror","mirrorservic","newsset","registerrequest","responsetyp","result","smartmirrormoduleconfig","smartmirrormoduleopt","smartmirrorservic","src/gsuite/shared/base.service.t","src/gsuite/shared/respons","src/gsuite/tasks/task","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.service.t","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.service.t","src/models/mirror.t","src/models/ticket.t","src/models/user.t","src/models/widget.t","src/services/auth.service.t","src/services/mirror.service.t","src/services/smartmirror.service.t","src/services/storage.service.t","src/services/ticket.service.t","src/services/token.service.t","src/utils/module.config.t","src/utils/module.options.t","statement","storageservic","task","tasklink","tasklist","tasklistqueryopt","tasklistservic","taskqueryopt","taskservic","taskset","ticket","ticketservic","tokenservic","type","type.model.t","user","weatherset","widget"]},"length":35},"tokenStore":{"root":{"0":{"9":{"docs":{},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}},"1":{"0":{"0":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.12738853503184713}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776}},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"docs":{}},"docs":{}}},"6":{"docs":{},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}},"docs":{}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05084745762711865}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01910828025477707}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"2":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05084745762711865}}},"3":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01910828025477707}}},"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03821656050955414}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"4":{"0":{"1":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"docs":{}}},"6":{"docs":{},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03184713375796178}}},"docs":{}}},"7":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}},"docs":{}}},"8":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}},"9":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"docs":{}},"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037162162162162164},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.03056768558951965},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.03409090909090909},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024822695035460994},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.03409090909090909},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.027027027027027},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04391891891891892},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.026200873362445413},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.044642857142857144},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.07373271889400922},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03225806451612903},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.026785714285714284},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.02702702702702703},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0379746835443038},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.039473684210526314},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.02926829268292683},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":5.00398406374502},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}}},"d":{"docs":{},"i":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.03187250996015936},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.031189083820662766}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules.html":{"ref":"modules.html","tf":0.1}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"i":{"docs":{},"z":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.013100436681222707},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.056818181818181816},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}},"i":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.024390243902439025}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"u":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.045454545454545456},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}},"r":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03680981595092025},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.006369426751592}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.01951219512195122},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":5.0184049079754605},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}},"s":{"docs":{},"e":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.030120481927710843},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.014634146341463415}}}}}},"p":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.01951219512195122}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169}}}},"b":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.044444444444444446},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.026200873362445413},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.017341040462427744},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.05063291139240506},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0364963503649635},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.04411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.044444444444444446},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.017467248908296942},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0170316301703163},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.04294478527607362},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.04046242774566474},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.05405405405405406},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.041916167664670656},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.041916167664670656},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.04216867469879518},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.03684210526315789}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.04609929078014184},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.031630170316301706},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.07654320987654321},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}}}},"y":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}},"u":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.019753086419753086}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}},"i":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"o":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.04390243902439024},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03680981595092025},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.044444444444444446},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.031578947368421054}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.017964071856287425},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}},"e":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.06329113924050633},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}}}}},".":{"docs":{},"g":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.04938271604938271}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.024330900243309004}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}}}}}}}},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.017467248908296942},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.013100436681222707}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.026200873362445413},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04830917874396135},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612}}}}}},"s":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.023121387283236993},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.023952095808383235},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.049800796812749},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.050682261208576995},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.024390243902439025}}}}}}}}},"m":{"docs":{},"l":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537}}}}},"s":{"docs":{},"h":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0784313725490196},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.08292682926829269},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.030405405405405407},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.026200873362445413},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.015594541910331383},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024822695035460994},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03763440860215054},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.01728395061728395},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.033816425120772944}}}},"i":{"docs":{},"c":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0392156862745098}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.023648648648648},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":5.01792828685259},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":5.021834061135372},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":5.034090909090909},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":5.017543859649122},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.0144927536231885},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":5.022321428571429},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.0177304964539005},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":5.025510204081633},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":5.023041474654378},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.06369426751592357}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":5.042944785276074},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":5.0602409638554215},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":5.065789473684211},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":5.040462427745664},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":5.045045045045045},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":5.04191616766467},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":5.055555555555555},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":5.025316455696203},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":5.076923076923077},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":5.004866180048662},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":5.029411764705882},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":5.010752688172043},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":5.004938271604939},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":5.04191616766467},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":5.014814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":5.044444444444444},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.057471264367816},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":5.042168674698795},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":5.036842105263158},"coverage.html":{"ref":"coverage.html","tf":0.12101910828025478}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.017467248908296942},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"f":{"docs":{},"o":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.05240174672489083},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.030612244897959183},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}},"(":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.057971014492753624},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03067484662576687},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.029940119760479042},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.06329113924050633},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.029940119760479042},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.024096385542168676},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.021052631578947368}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0392156862745098}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"n":{"docs":{},"k":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}},".":{"docs":{},"t":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"7":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"docs":{}},"9":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"docs":{}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03571428571428571},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.08888888888888889}},"e":{"docs":{},"n":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.07729468599033816},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.033783783783783786}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":5.026315789473684},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":5.024096385542169},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}}}},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03680981595092025},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}},"u":{"docs":{},"m":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.04294478527607362},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.04046242774566474},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.041916167664670656},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.041916167664670656},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.04216867469879518},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}}}}}}}},"i":{"docs":{},"l":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.018404907975460124},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.017341040462427744},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":5.017341040462428},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"r":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}}},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.1091703056768559},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.056818181818181816},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.061224489795918366},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":5.117117117117117},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.021052631578947368},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":5.026200873362446},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.06666666666666667}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.016949152542374}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":10.1},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":5.019512195121951},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}},"v":{"docs":{},"e":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}},"r":{"docs":{},"e":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}},"d":{"5":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.029880478087649404},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.029239766081871343},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.01951219512195122}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}},"e":{"docs":{},"w":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.04081632653061224},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.018404907975460124},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.03614457831325301},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.039473684210526314},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.017341040462427744},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.017964071856287425},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.034482758620689655},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":5.017964071856287},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}},"x":{"docs":{},"t":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0379746835443038}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.018433179723502304}},"i":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"e":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03680981595092025},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.08888888888888889},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.031578947368421054}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.06896551724137931},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.027777777777779}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0697211155378486},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.06818181818181818},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.0682261208576998},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.04609929078014184},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.056790123456790124}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},":":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.037848605577689244},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.056768558951965066},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.03898635477582846},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.04608294930875576},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.023121387283236993},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.023952095808383235},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03067484662576687},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.029940119760479042},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.02631578947368421}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.017467248908296942},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.026785714285714284},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03225806451612903},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.017467248908296942},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.07228915662650602},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"h":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.04878048780487805}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02027027027027027},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.034934497816593885},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"a":{"docs":{},"d":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.05063291139240506},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":5.025316455696203},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.05063291139240506},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.02962962962962963}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04054054054054054},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.03386454183266932},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.05240174672489083},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.042884990253411304},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.043478260869565216},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.05357142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.030612244897959183},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.03209876543209877}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}}},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":5.022222222222222},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571}}}}}}},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.055776892430278883},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.05458089668615984},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"u":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.04183266932270916},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.04093567251461988}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}},"v":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454}},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"x":{"docs":{},"j":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02027027027027027},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.021834061135371178},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03067484662576687},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.042105263157894736}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}},"l":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.058823529411764705},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.014634146341463415},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.056818181818181816},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.16666666666666666},"modules.html":{"ref":"modules.html","tf":0.1},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":5.078048780487805}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.02926829268292683},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.02926829268292683},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":5.0227272727272725},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.014634146341463415},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":5.076923076923077},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.02926829268292683},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.013100436681222707},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":5.003898635477583},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}}}}},"i":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"3":{"4":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}},"docs":{}},"4":{"8":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"5":{"8":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"7":{"6":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"2":{"2":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471}}},"docs":{}},"3":{"5":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}},"docs":{}},"4":{"4":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}},"docs":{}},"5":{"3":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}},"docs":{}},"6":{"2":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"1":{"3":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"9":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"3":{"5":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"4":{"2":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"9":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"5":{"6":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"6":{"3":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"7":{"0":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"7":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"8":{"7":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"2":{"5":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"3":{"4":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"4":{"2":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"5":{"1":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"2":{"4":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306}}},"docs":{}},"3":{"8":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}},"docs":{}},"4":{"7":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"3":{"9":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}},"docs":{}},"5":{"4":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"6":{"2":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"8":{"4":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"4":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992}}},"docs":{}},"2":{"8":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"3":{"5":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"4":{"2":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"9":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"5":{"6":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"6":{"3":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"7":{"0":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"8":{"0":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.06329113924050633},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}},"docs":{}},"2":{"0":{"docs":{"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}},"9":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428}}},"docs":{}},"4":{"3":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714}}},"docs":{}},"5":{"5":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"7":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}},"2":{"1":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"5":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"9":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}},"9":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"coverage.html":{"ref":"coverage.html","tf":0.012738853503184714}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"2":{"0":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"4":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"8":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"3":{"2":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"6":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"4":{"0":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"4":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"8":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"5":{"2":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"6":{"2":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835}}},"docs":{}},"7":{"8":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"5":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"2":{"3":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"3":{"2":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"4":{"3":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"5":{"1":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"5":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"6":{"4":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"8":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"2":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}},"docs":{}},"2":{"6":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"6":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.03821656050955414}},"s":{"docs":{},":":{"1":{"0":{"4":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374}}},"docs":{}},"1":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}},"5":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}},"9":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}},"docs":{}},"2":{"3":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}},"7":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}},"docs":{}},"3":{"7":{"docs":{"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169}}},"docs":{}},"4":{"2":{"docs":{"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169}}},"docs":{}},"5":{"3":{"docs":{"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809}}},"7":{"docs":{"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809}}},"docs":{}},"6":{"7":{"docs":{"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809}}},"docs":{}},"7":{"2":{"docs":{"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.005988023952095809}}},"docs":{}},"8":{"0":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248}}},"5":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248}}},"docs":{}},"9":{"0":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248}}},"9":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374}}},"docs":{}},"docs":{}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.025477707006369428}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338}}},"2":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338}}},"6":{"docs":{"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105}}},"docs":{}},"2":{"0":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"1":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"2":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"docs":{}},"6":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}},"7":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"7":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"2":{"1":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"5":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"9":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"3":{"3":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"docs":{}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"6":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}}},"7":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}},"u":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.009661835748792},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.03686635944700461},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.029880478087649404},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.013100436681222707},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.043478260869565216},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03680981595092025},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.0963855421686747},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.10526315789473684},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03592814371257485},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.08888888888888889},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0379746835443038},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0364963503649635},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.04411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.09195402298850575},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03614457831325301},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.031578947368421054}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}}}},"a":{"docs":{},"k":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.018404907975460124},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.017341040462427744},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.017964071856287425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.03684210526315789}}}},"b":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"@":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},".":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.013944223107569721},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.05673758865248227},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.018404907975460124},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.017341040462427744},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":5.124087591240876},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.04197530864197531},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03592814371257485},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.0962962962962963},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.05357142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":5.014814814814815},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":5.008928571428571},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":5.016129032258065},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":5.029411764705882},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.01418439716312},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":5.017964071856287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}},"/":{"docs":{},"v":{"1":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"@":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}},"docs":{}}},"#":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}}}}}}}},"'":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":5.007407407407407},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.07142857142857142},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":5.088888888888889},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":5.020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}},"t":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02364864864864865},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.05976095617529881},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.08294930875576037},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.023121387283236993},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.017964071856287425},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.023952095808383235},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.018072289156626505},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.015789473684210527}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":5.0368663594470044},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}}}},"p":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.011363636363636364},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.023952095808383235},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0759493670886076},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0413625304136253},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.11764705882352941},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.027160493827160494},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.023952095808383235},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.05925925925925926},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.024096385542168676},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.05263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},".":{"docs":{},"t":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266}}},"7":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266}}},"docs":{}},"5":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266}}},"9":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.012658227848101266}}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.02531645569620253},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.01951219512195122}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05405405405405406},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.026200873362445413},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.1566265060240964},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.14473684210526316},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.12222222222222222},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.160919540229885},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"'":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03571428571428571},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.03409090909090909},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.006134969325153374},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005988023952095809},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.006024096385542169},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.005263157894736842}}}},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.028901734104046242},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.021834061135371178},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.06912442396313365},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471}}}}}}}}},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.004366812227074236},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1864406779661017}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.035856573705179286},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.008733624454148471},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.022727272727272728},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.05314009661835749},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.018433179723502304},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.024539877300613498},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03468208092485549},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.07207207207207207},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.023952095808383235},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0759493670886076},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0535279805352798},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.023952095808383235},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.07407407407407407},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.08888888888888889},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.024096385542168676},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.031578947368421054}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"a":{"docs":{},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.024096385542168676},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":5.018072289156627},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.010526315789473684},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.049079754601226995},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.046242774566473986},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.06306306306306306},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.05389221556886228},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.05389221556886228},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.05421686746987952},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":5.068421052631579},"coverage.html":{"ref":"coverage.html","tf":0.006369426751592357}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.021052631578947368},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.012269938650306749},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011976047904191617},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.011976047904191617},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.012048192771084338},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.021052631578947368},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}},"y":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.00975609756097561}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.12077294685990338}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.0379746835443038},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}}},"j":{"docs":{},"w":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}},"length":2112},"corpusTokens":["0","09.06.17","1","1/2","1/3","1/4","10","10.06.17","10/11","100","11/11","16/16","19","2","25","3","3/3","3/4","33","4","4/4","4/5","401","5","5/5","50","6/6","7/7","75","80","90","access","accesstoken","accord","ad","add","administr","alway","angular","angular/common","angular/cor","angular/http","angular/ion","angular/platform","anoth","api","apiurl","apiurl:str","app.compon","appcompon","applic","appmodul","argument","array","auth","auth.token","authent","authenticatd","authenticationfailur","authservic","authtoken","authupdatetyp","baseservic","basic","basoglu","bearer","belong","between","bodi","boolean","bootstrap","bound","brows","browser","browsermodul","calend","calendarset","caller","case","catch(r","cem","cemizm/smartmirror","citi","class","clear","client","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","collect","commonmodul","complet","completedmax","completedmin","compon","config","configr","configur","console.log(\"authent","console.log(err","console.log(r","const","constructor","constructor(config","constructor(http","constructor(opt","constructor(priv","constructor(servic","constructor(storageservic","constructor(tokenservic","contain","correspond","count","coverag","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","crud","date","day","declar","default","defin","delet","delete(url","deletebyid","deletebyid(id","dep","depend","describ","descript","detail","differ","direct","display","document","due","duemax","duemin","e.g","each","email","enhanc","enum","enumer","err","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","etag","everyth","exampl","exist","export","extend","fals","feed","feedurl","field","file","filter","flag","forecast","forroot(opt","found","frontend","function","g","gener","get","get(authtoken","get(id","get(id:str","get(url","getal","getbyid","getbyid(id","getitem","getitem(key","github","given","googl","greater","gsuite/index","gsuite/shared/base.servic","gsuite/tasks/task.servic","gsuite/tasks/tasklist.servic","handl","hash","head","head(url","header","here","hidden","html","http","httpmodul","https://sm","https://www.googleapis.com","id","id).map","id).map(r","identifi","imag","import","inact","index","indic","info","inject","injectiontoken","injectiontoken(\"smartmirrormodule_opt","insid","instal","interact","interfac","intern","invalid","item","jw","key","key(index","kind","last","left","legend","level","lexicograph","librari","licens","link","link.model","link.model.t","link.model.ts:13","link.model.ts:17","link.model.ts:9","list","list(authtoken","listen","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","login","login(email","loginr","loginrequest","loginres.accesstoken","loginrespons","loginsucess","lower","mail","mailset","manag","map(r","mark","match","maxcount","maxim","maximum","maxresult","md5","md5password\").subscribe(r","method","mirror","mirror).map","mirrorid","mirrorservic","miscellan","mit","models/index","models/mirror","models/ticket","models/us","modif","modul","module.opt","modulewithprovid","more","move","name","needsact","new","newsset","next","nextpagetoken","ngmodul","note","notif","notifi","npm","null","number","oauth","oauthtoken","observ","observable.throw(errorrespons","omit","on","onc","oper","option","options(url","options:smartmirrormoduleopt","order","otherwis","out","overview","page","pagetoken","param","paramet","parent","password","patch","patch(url","path","perform","pipe","point","posit","post","post(url","privat","profil","project","properti","provid","public","put","put(url","queri","re","read","readm","reg","reg).map(r","regist","register(numb","register(reg","registerrequest","registr","rel","remot","remov","removeitem","removeitem(key","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.headers.set('author","requestoptions.url","requestoptionsarg","res.item","res.json","reset","resourc","respons","responsetyp","result","retriev","return","right","rss","run","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","rxjs/observable/errorobserv","same","save","savedocument","selflink","send","sendrequest","sendrequest(requestoptionsarg","servic","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/ticket.servic","services/token.servic","set","setitem","setitem(key","share","shared/base.servic","shared/respons","show","showcomplet","showdelet","showhidden","sibl","side","smart","smartmirror","smartmirror.servic","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","speak","specifi","src/gsuite/shared/base.service.t","src/gsuite/shared/base.service.ts:14","src/gsuite/shared/base.service.ts:28","src/gsuite/shared/base.service.ts:35","src/gsuite/shared/base.service.ts:42","src/gsuite/shared/base.service.ts:49","src/gsuite/shared/base.service.ts:56","src/gsuite/shared/base.service.ts:63","src/gsuite/shared/base.service.ts:70","src/gsuite/shared/base.service.ts:80","src/gsuite/shared/respons","src/gsuite/tasks/task","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.model.ts:11","src/gsuite/tasks/task.model.ts:15","src/gsuite/tasks/task.model.ts:19","src/gsuite/tasks/task.model.ts:23","src/gsuite/tasks/task.model.ts:27","src/gsuite/tasks/task.model.ts:32","src/gsuite/tasks/task.model.ts:39","src/gsuite/tasks/task.model.ts:43","src/gsuite/tasks/task.model.ts:47","src/gsuite/tasks/task.model.ts:51","src/gsuite/tasks/task.model.ts:55","src/gsuite/tasks/task.model.ts:59","src/gsuite/tasks/task.model.ts:64","src/gsuite/tasks/task.model.ts:68","src/gsuite/tasks/task.model.ts:7","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:16","src/gsuite/tasks/task.service.ts:20","src/gsuite/tasks/task.service.ts:24","src/gsuite/tasks/task.service.ts:28","src/gsuite/tasks/task.service.ts:32","src/gsuite/tasks/task.service.ts:36","src/gsuite/tasks/task.service.ts:40","src/gsuite/tasks/task.service.ts:44","src/gsuite/tasks/task.service.ts:48","src/gsuite/tasks/task.service.ts:52","src/gsuite/tasks/task.service.ts:62","src/gsuite/tasks/task.service.ts:78","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.model.ts:13","src/gsuite/tasks/tasklist.model.ts:17","src/gsuite/tasks/tasklist.model.ts:21","src/gsuite/tasks/tasklist.model.ts:25","src/gsuite/tasks/tasklist.model.ts:29","src/gsuite/tasks/tasklist.model.ts:9","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:16","src/gsuite/tasks/tasklist.service.ts:20","src/gsuite/tasks/tasklist.service.ts:29","src/gsuite/tasks/tasklist.service.ts:43","src/gsuite/tasks/tasklist.service.ts:55","src/index.t","src/models/enums.t","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","src/models/user.ts:16","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","src/models/user.ts:6","src/models/user.ts:7","src/models/widget.t","src/models/widget.ts:104","src/models/widget.ts:11","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","src/models/widget.ts:37","src/models/widget.ts:42","src/models/widget.ts:53","src/models/widget.ts:57","src/models/widget.ts:67","src/models/widget.ts:72","src/models/widget.ts:80","src/models/widget.ts:85","src/models/widget.ts:90","src/models/widget.ts:99","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","src/utils/module.options.t","src/utils/module.options.ts:6","statement","static","statu","storag","storage.servic","storageservic","store","string","stuff","subject","subscrib","subsequ","suit","support","svg","task","task'","task.model","tasklink","tasklist","tasklist.model","tasklistqueryopt","tasklistservic","taskqueryopt","tasks#task","tasks#tasklist","tasks/v1/list","tasks/v1/users/@me/list","taskservic","taskset","this.api","this.authservice.login(\"cem@basoglu.d","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.invalid","this.mirror","this.mirrorservice.getall().subscribe(mirror","this.options.apiurl","this.sendrequest({method","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.post(this.api","this.service.put(this.api","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.tokenservice.invalid","this.tokenservice.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","ticket","ticketservic","time","titl","token","token(token","token.servic","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","top","true","type","type.model","type.model.t","type.model.ts:13","type.model.ts:17","type.model.ts:5","type.model.ts:9","typescript","unauthor","undefin","under","unread","updat","update(mirror","updatedmin","upper","url","us","usag","usefactori","user","user'","usevalu","utils/index","utils/module.config","utils/module.opt","valu","variabl","verifi","via","void","want","way","weather","weatherset","webapi.azurewebsites.net/api","whether","whole","widget","widgetsid","widgettyp","wrapper","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nShared library of the smart mirror project\nContains all shared components, directives, pipes and services, used by the smart mirror project.\nInstallation\nTo install this library, run:\n$ npm install @cemizm/smartmirror-shared --saveDocumentation\nA generated documentation of this project can be found here:\nGitHub Pages\nUsage\nAfter the Installation of the library via npm, you can import it into your Angular/Ionic application by adding the SmartMirrorModule to the AppModule:\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {AppComponent} from \"./app.component\";\nimport {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Once the shared library is imported, you can use its components, directives, pipes and services in your Angular application:\nimport {MirrorService} from \"@cemizm/smartmirror-shared\";\n\n... \n\n  constructor(private mirrorService: MirrorService) {\n\n  }\n\n  getAll() {\n    this.mirrorService.getAll().subscribe(mirrors => {\n      this.mirrors = mirrors;\n    }, err => {\n      console.log(err);\n    });\n  }License\nMIT © Cem Basoglu\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    SmartMirrorModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmartMirrorModule.html":{"url":"modules/SmartMirrorModule.html","title":"module - SmartMirrorModule","body":"\n                   \n\n\n  Modules\n  SmartMirrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\ncluster_SmartMirrorModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\nSmartMirrorModule -->\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }->SmartMirrorModule\n\n\n\n\n\nSmartMirrorService\n\nSmartMirrorService\n\nSmartMirrorModule -->\n\nSmartMirrorService->SmartMirrorModule\n\n\n\n\n\nBaseService\n\nBaseService\n\nSmartMirrorModule -->\n\nBaseService->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n            \n                Description\n            \n            \n                The shared Angular module for Smart Mirror project\n\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                SmartMirrorService\n                            \n                            \n                                BaseService\n                            \n                    \n                \n            \n        \n    \n    \n        import {NgModule, ModuleWithProviders, InjectionToken} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {MirrorService} from \"./services/mirror.service\";\nimport {StorageService} from \"./services/storage.service\";\nimport {TokenService} from \"./services/token.service\";\nimport {SmartMirrorModuleConfig} from \"./utils/module.config\";\nimport {SmartMirrorModuleOptions} from \"./utils/module.options\";\nimport {SmartMirrorService} from \"./services/smartmirror.service\";\nimport {AuthService} from \"./services/auth.service\";\nimport {TicketService} from \"./services/ticket.service\";\nimport {BaseService} from \"./gsuite/shared/base.service\";\nimport {TaskService} from \"./gsuite/tasks/task.service\";\nimport {TaskListService} from \"./gsuite/tasks/tasklist.service\";\n\nexport * from './models/index';\nexport * from './services/index';\nexport * from './utils/index'\nexport * from './gsuite/index'\n\nexport const SMARTMIRRORMODULE_OPTIONS = new InjectionToken(\"SMARTMIRRORMODULE_OPTIONS\");\n\n/**\n * The shared Angular module for Smart Mirror project\n *\n * @example\n *\n * import {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n *\n * @NgModule({\n *   declarations: [\n *     AppComponent\n *   ],\n *   imports: [\n *     BrowserModule,\n *     SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n *\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpModule\n    ],\n    declarations: [],\n    providers: [\n        {\n            provide: SmartMirrorModuleConfig,\n            useFactory: createSmartMirrorModuleConfig,\n            deps: [\n                SMARTMIRRORMODULE_OPTIONS\n            ]\n        },\n        SmartMirrorService,\n        BaseService\n    ]\n})\nexport class SmartMirrorModule {\n    static forRoot(options: SmartMirrorModuleOptions): ModuleWithProviders {\n        return {\n            ngModule: SmartMirrorModule,\n            providers: [\n                {provide: SMARTMIRRORMODULE_OPTIONS, useValue: options},\n                StorageService,\n                TokenService,\n                AuthService,\n                MirrorService,\n                TicketService,\n\n                //G-Suite stuff\n                TaskService,\n                TaskListService\n            ]\n        };\n    }\n}\n\nexport function createSmartMirrorModuleConfig(options: SmartMirrorModuleOptions): SmartMirrorModuleConfig {\n    return new SmartMirrorModuleConfig(options);\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthService class for authenticating and registering users on smart mirror api\nExample Authentication:\nimport {AuthService} from \"@cemizm/smartmirror-shared\";\n...\nlogin() {\n   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n     console.log(res);\n   }, err=> {\n     console.log(err);\n   })\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(tokenService: TokenService, service: SmartMirrorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected TokenService for storing authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        Verifies the authentication token and returns the linked user\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public login\n                                \n                            \n                            \n                                \n                                        \n                                    login(email: void, password: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:58\n                                        \n                                    \n            \n                            \n                                \n                                        Perform the login request and saves the authentication token in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                The Email of the user to login\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                The Password of the user to login\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(reg: RegisterRequest)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:76\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new User with the given registration details on the smart mirror api\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                reg\n                                                            \n                                                            \n                                                                The registration details of the new user to register.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /auth\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n                            \n                                \n                                    relative url for the authentication api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {User, LoginResponse, RegisterRequest} from \"../models/user\";\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {TokenService} from \"./token.service\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * AuthService class for authenticating and registering users on smart mirror api\n *\n * Example Authentication:\n * ```typescript\n * import {AuthService} from \"@cemizm/smartmirror-shared\";\n * ...\n * login() {\n *   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n *     console.log(res);\n *   }, err=> {\n *     console.log(err);\n *   })\n * }\n * ```\n */\n@Injectable()\nexport class AuthService {\n    /**\n     * relative url for the authentication api\n     * @type {string}\n     */\n    private api = \"/auth\";\n\n    /**\n     * Creates the AuthService\n     * @param tokenService Injected TokenService for storing authentication token\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private tokenService: TokenService, private service: SmartMirrorService) {\n    }\n\n    /**\n     * Verifies the authentication token and returns the linked user\n     * @return {Observable} The user linked with the authentication token.\n     */\n    public get(): Observable {\n        return this.service.get(this.api).map(res => res.json());\n    }\n\n    /**\n     * Perform the login request and saves the authentication token in the localStorage\n     * @param email The Email of the user to login\n     * @param password The Password of the user to login\n     * @return {Observable} Login response with the user profile\n     */\n    public login(email: string, password: string): Observable {\n        return this.service.post(this.api + '/', {\n            user: email,\n            password: password\n        }).map(res => {\n            let loginRes: LoginResponse = res.json();\n\n            this.tokenService.Token = loginRes.accessToken;\n\n            return loginRes;\n        });\n    }\n\n    /**\n     * Registers a new User with the given registration details on the smart mirror api\n     * @param reg The registration details of the new user to register.\n     * @return {Observable} void\n     */\n    public register(reg: RegisterRequest): Observable {\n        return this.service.post(this.api + '/register', reg).map(res => {\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/shared/base.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: Http)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public post\n                                \n                            \n                            \n                                \n                                        \n                                    post(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public put\n                                \n                            \n                            \n                                \n                                        \n                                    put(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public delete\n                                \n                            \n                            \n                                \n                                        \n                                    delete(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:49\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public patch\n                                \n                            \n                            \n                                \n                                        \n                                    patch(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public head\n                                \n                            \n                            \n                                \n                                        \n                                    head(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public options\n                                \n                            \n                            \n                                \n                                        \n                                    options(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:70\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                    sendRequest(requestOptionsArgs: RequestOptionsArgs, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:80\n                                        \n                                    \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : https://www.googleapis.com\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:14\n                                        \n                                    \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class BaseService {\n\n  private api = 'https://www.googleapis.com';\n\n  /**\n   * creates the internal smart mirror api service\n   * @param config Injected configuration for remote service\n   * @param tokenService Injected token service for invalidating the authentication token\n   * @param http Injected angular http client used for the remote requests\n   */\n  constructor(private http: Http) {\n  }\n\n  /**\n   * Performs a request with `get` http method.\n   */\n  public get(url: string, token: string, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, token, options);\n  }\n\n  /**\n   * Performs a request with `post` http method.\n   */\n  public post(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, token, options);\n  }\n\n  /**\n   * Performs a request with `put` http method.\n   */\n  public put(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, token, options);\n  }\n\n  /**\n   * Performs a request with `delete` http method.\n   */\n  public delete(url: string, token: string, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, token, options);\n  }\n\n  /**\n   * Performs a request with `patch` http method.\n   */\n  public patch(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, token, options);\n  }\n\n  /**\n   * Performs a request with `head` http method.\n   */\n  public head(url: string, token: string, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, token, options);\n  }\n\n  /**\n   * Performs a request with `options` http method.\n   */\n  public options(url: string, token: string, options?: RequestOptionsArgs): Observable {\n    return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, token, options);\n  }\n\n  /**\n   * extends the request options with stored authentication token and sends the request to the remove service\n   * @param requestOptionsArgs The basic request options arguments\n   * @param options Enhanced request options arguments\n   * @return {Observable} Observable to listen on http response\n   */\n  private sendRequest(requestOptionsArgs: RequestOptionsArgs, token: string, options?: RequestOptionsArgs): Observable {\n\n    const requestOptions = new RequestOptions(requestOptionsArgs);\n\n    requestOptions.url = this.api + requestOptions.url;\n\n    if (!requestOptions.headers) {\n      requestOptions.headers = new Headers();\n    }\n\n    requestOptions.headers.set('Authorization', 'Bearer ' + token);\n\n    const request = new Request(requestOptions);\n    return this.http.request(request, options)\n      .map(res => res);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorService.html":{"url":"injectables/MirrorService.html","title":"injectable - MirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/mirror.service.ts\n        \n\n            \n                Description\n            \n            \n                MirrorService class for interacting with the remote mirror collection.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the MirrorService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public getAll\n                                \n                            \n                            \n                                \n                                        \n                                    getAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Gets all Mirrors for authenticated User\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getById\n                                \n                            \n                            \n                                \n                                        \n                                    getById(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:44\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the mirror with the given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to request\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public update\n                                \n                            \n                            \n                                \n                                        \n                                    update(mirror: Mirror)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:53\n                                        \n                                    \n            \n                            \n                                \n                                        Updates the given mirror of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mirror\n                                                            \n                                                            \n                                                                The mirror to update\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public deleteById\n                                \n                            \n                            \n                                \n                                        \n                                    deleteById(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Deletes the mirror with the given id of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The mirror id to delete\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /mirrors\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:22\n                                        \n                                    \n                            \n                                \n                                    relative url to the mirrors api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Mirror} from '../models/mirror';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {SmartMirrorService} from \"./smartmirror.service\";\n\n/**\n * MirrorService class for interacting with the remote mirror collection.\n */\n@Injectable()\nexport class MirrorService  {\n    /**\n     * relative url to the mirrors api\n     * @type {string}\n     */\n    private api = '/mirrors';\n\n    /**\n     * Creates the MirrorService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets all Mirrors for authenticated User\n     * @return {Observable}\n     */\n    public getAll(): Observable> {\n        return this.service.get(this.api).map(res => >res.json());\n    }\n\n    /**\n     * Gets the mirror with the given id\n     * @param id The id of the mirror to request\n     * @return {Observable}\n     */\n    public getById(id: string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Updates the given mirror of the authenticated user\n     * @param mirror The mirror to update\n     * @return {Observable}\n     */\n    public update(mirror: Mirror): Observable {\n        return this.service.put(this.api, mirror).map(()=>{});\n    }\n\n    /**\n     * Deletes the mirror with the given id of the authenticated user\n     * @param id The mirror id to delete\n     * @return {Observable}\n     */\n    public deleteById(id: string): Observable {\n        return this.service.delete(this.api + '/' + id).map(()=>{});\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartMirrorModuleConfig.html":{"url":"injectables/SmartMirrorModuleConfig.html","title":"injectable - SmartMirrorModuleConfig","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorModuleConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration class for the smart mirror module\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: SmartMirrorModuleOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        creates the configration class with the given options\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                The options to use for configuration\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     ApiUrl\n                                \n                            \n                            \n                                \n                                    ApiUrl:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:26\n                                        \n                                    \n                            \n                                \n                                    The smart mirror api url for the http requests\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {SmartMirrorModuleOptions} from \"./module.options\";\n\n/**\n * Configuration class for the smart mirror module\n */\n@Injectable()\nexport class SmartMirrorModuleConfig {\n\n    /**\n     * creates the configration class with the given options\n     * @param options The options to use for configuration\n     */\n    constructor(private options:SmartMirrorModuleOptions){\n\n    }\n\n    /**\n     * The smart mirror api url for the http requests\n     * @return {string} The Smart Mirror Api url\n     */\n    get ApiUrl() : string{\n        return this.options.apiUrl;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartMirrorService.html":{"url":"injectables/SmartMirrorService.html","title":"injectable - SmartMirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/smartmirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: SmartMirrorModuleConfig, tokenService: TokenService, http: Http)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public post\n                                \n                            \n                            \n                                \n                                        \n                                    post(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public put\n                                \n                            \n                            \n                                \n                                        \n                                    put(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:49\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public delete\n                                \n                            \n                            \n                                \n                                        \n                                    delete(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public patch\n                                \n                            \n                            \n                                \n                                        \n                                    patch(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public head\n                                \n                            \n                            \n                                \n                                        \n                                    head(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:70\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public options\n                                \n                            \n                            \n                                \n                                        \n                                    options(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                    sendRequest(requestOptionsArgs: RequestOptionsArgs, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:87\n                                        \n                                    \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private errorHandler\n                                \n                            \n                            \n                                \n                                        \n                                    errorHandler(errorResponse: Response)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:113\n                                        \n                                    \n            \n                            \n                                \n                                        Handles authentication errors and returns errors to the caller\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                errorResponse\n                                                            \n                                                            \n                                                                The errorResponse to handle\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     |\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport {ErrorObservable} from \"rxjs/observable/ErrorObservable\";\n\nimport {TokenService} from \"./token.service\";\nimport {SmartMirrorModuleConfig} from \"../utils/module.config\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class SmartMirrorService {\n\n    /**\n     * creates the internal smart mirror api service\n     * @param config Injected configuration for remote service\n     * @param tokenService Injected token service for invalidating the authentication token\n     * @param http Injected angular http client used for the remote requests\n     */\n    constructor(private config: SmartMirrorModuleConfig,\n                private tokenService: TokenService,\n                private http: Http) {\n    }\n\n    /**\n     * Performs a request with `get` http method.\n     */\n    public get(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `post` http method.\n     */\n    public post(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `put` http method.\n     */\n    public put(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `delete` http method.\n     */\n    public delete(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `patch` http method.\n     */\n    public patch(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `head` http method.\n     */\n    public head(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `options` http method.\n     */\n    public options(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, options);\n    }\n\n    /**\n     * extends the request options with stored authentication token and sends the request to the remove service\n     * @param requestOptionsArgs The basic request options arguments\n     * @param options Enhanced request options arguments\n     * @return {Observable} Observable to listen on http response\n     */\n    private sendRequest(requestOptionsArgs: RequestOptionsArgs, options?: RequestOptionsArgs): Observable {\n\n        let requestOptions = new RequestOptions(requestOptionsArgs);\n\n        requestOptions.url = this.config.ApiUrl + requestOptions.url;\n\n        if (!requestOptions.headers)\n            requestOptions.headers = new Headers();\n\n\n\n        if (this.tokenService.Token)\n            requestOptions.headers.set(\"Authorization\", \"Bearer \" + this.tokenService.Token);\n\n        let request = new Request(requestOptions);\n\n        return this.http.request(request, options)\n            .map(res => res)\n            .catch(res => this.errorHandler(res));\n    }\n\n    /**\n     * Handles authentication errors and returns errors to the caller\n     * @param errorResponse The errorResponse to handle\n     * @return {ErrorObservable} The ErrorObservable to notify the caller\n     */\n    private errorHandler(errorResponse: Response): Observable | ErrorObservable {\n\n        if (errorResponse.status === 401) {\n            this.tokenService.invalidate();\n        }\n\n        return Observable.throw(errorResponse);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper service for crud operations on the local Storage\n\n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n                            \n                                \n            clear()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Clears the whole localStorage for the application\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                        Gets an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key to get the value from the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     key\n                                \n                            \n                            \n                                \n            key(index: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the literal key on the given index in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                index\n                                                            \n                                                            \n                                                                The index in the localStorage to retrieve the literal key for\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Removes an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to remove\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: void, value: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:51\n                                        \n                                    \n            \n                            \n                                \n                                        Sets an item for the given key in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to set\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                The value of the item to in the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\n\n/**\n * Wrapper service for crud operations on the local Storage\n */\n@Injectable()\nexport class StorageService {\n\n    /**\n     * Clears the whole localStorage for the application\n     */\n    clear(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * Gets an item with the given key from the localStorage\n     * @param key The key to get the value from the localStorage\n     * @return {any} The value for the given key if exists, otherwise null\n     */\n    getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Gets the literal key on the given index in the localStorage\n     * @param index The index in the localStorage to retrieve the literal key for\n     * @return {string} The literal key for the given index\n     */\n    key(index: number): string {\n        return localStorage.key(index);\n    }\n\n    /**\n     * Removes an item with the given key from the localStorage\n     * @param key The key of the item to remove\n     */\n    removeItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    /**\n     * Sets an item for the given key in the localStorage\n     * @param key The key of the item to set\n     * @param value The value of the item to in the localStorage\n     */\n    setItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskListService.html":{"url":"injectables/TaskListService.html","title":"injectable - TaskListService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskListService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the TaskService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, options: TaskListQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:43\n                                        \n                                    \n            \n                            \n                                \n                                        Returns all the authenticated user's task lists\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(authToken: void, tasklist: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:55\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the authenticated user's specified task list.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tasklist\n                                                            \n                                                            \n                                                                Task list identifier.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tasks/v1/users/@me/lists\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:29\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasklists api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Tasklist} from \"./tasklist.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  TaskListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n}\n\n@Injectable()\nexport class TaskListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/tasks/v1/users/@me/lists';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all the authenticated user's task lists\n     * @param authToken The authenticated user's token.\n     * @return {Observable} Tasklists of the authenticated user.\n     */\n    public list(authToken: string, options?: TaskListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n    /**\n     * Returns the authenticated user's specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Specified Tasklist for the authenticated user.\n     */\n    public get(authToken: string, tasklist: string): Observable {\n        return this.service.get(this.api, authToken, {\n            params: {\n                tasklist: tasklist\n            }\n        }).map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the TaskService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, tasklist: void, options: TaskQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:78\n                                        \n                                    \n            \n                            \n                                \n                                        Returns all tasks in the specified task list.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tasklist\n                                                            \n                                                            \n                                                                Task list identifier.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tasks/v1/lists/\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasks api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Task} from \"./task.model\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Optional query parameters for tasks\n */\nexport interface TaskQueryOptions {\n    /**\n     * Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMax?: Date;\n    /**\n     * Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMin?: Date;\n    /**\n     * Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMax?: Date;\n    /**\n     * Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMin?: Date;\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n     */\n    showCompleted?: boolean;\n    /**\n     * Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n     */\n    showHidden?: boolean;\n    /**\n     * Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: Date;\n\n}\n\n@Injectable()\nexport class TaskService {\n    /**\n     * relative url to the tasks api\n     * @type {string}\n     */\n    private api = '/tasks/v1/lists/';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all tasks in the specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Tasks for specified Tasklist of the authenticated user.\n     */\n\n    public list(authToken: string, tasklist: string, options?: TaskQueryOptions): Observable> {\n        return this.service.get(this.api + tasklist + \"/tasks\", authToken)\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ticket.service.ts\n        \n\n            \n                Description\n            \n            \n                TicketService class for registration of new mirrors\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        Gets a registration ticket for a new mirror with given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to create a new registration ticket\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(number: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:47\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new mirror with the given ticket number for the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                number\n                                                            \n                                                            \n                                                                The ticket number of the mirror to register with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tickets\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n                            \n                                \n                                    relative url to the tickets api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {Mirror} from \"../models/mirror\";\nimport {Ticket} from \"../models/ticket\";\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n/**\n * TicketService class for registration of new mirrors\n */\n@Injectable()\nexport class TicketService  {\n    /**\n     * relative url to the tickets api\n     * @type {string}\n     */\n    private api = '/tickets';\n\n    /**\n     * Creates the AuthService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets a registration ticket for a new mirror with given id\n     * @param id The id of the mirror to create a new registration ticket\n     * @return {Observable} ticket for registration\n     */\n    public get(id:string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Registers a new mirror with the given ticket number for the authenticated user\n     * @param number The ticket number of the mirror to register with\n     * @return {Observable} the created mirror with default settings\n     */\n    public register(number: string): Observable {\n        return this.service.post(this.api + '/' + number, {}).map(res => res.json());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\nExample authentication notifications:\nimport {TokenService} from \"@cemizm/smartmirror-shared\";\n\n...\n\nconstructor(private tokenService: TokenService) {\n   tokenService.Updates.subscribe(type => {\n     console.log(\"Authentication updates: \" + type);\n   });\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storageService: StorageService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                storageService\n                                                            \n                                                            \n                                                                Injected StorageService for storing authentication token\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     invalidate\n                                \n                            \n                            \n                                \n            invalidate()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:84\n                                        \n                                    \n            \n                            \n                                \n                                        Invalidates the stored token\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     Token\n                                \n                            \n                            \n                                \n                                    Token:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    Gets the Token of the authenticated user\n            Sets the token of the authenticated user\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updates\n                                \n                            \n                            \n                                \n                                    updates:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n                            \n                                \n                                    Observable subject for authentication updates\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Updates\n                                \n                            \n                            \n                                \n                                    Updates:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:54\n                                        \n                                    \n                            \n                                \n                                    Observable to listen on authentication updates\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {StorageService} from \"./storage.service\";\nimport {Subject, Observable} from \"rxjs\";\n\nconst tokenKey = 'auth.token';\n\nexport enum AuthUpdateType {\n    LoginSucess = 1,\n    AuthenticationFailure = 2,\n}\n\n/**\n * Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\n *\n * Example authentication notifications:\n * ```typescript\n * import {TokenService} from \"@cemizm/smartmirror-shared\";\n *\n * ...\n *\n * constructor(private tokenService: TokenService) {\n *   tokenService.Updates.subscribe(type => {\n *     console.log(\"Authentication updates: \" + type);\n *   });\n * }\n * ```\n */\n@Injectable()\nexport class TokenService {\n\n    /**\n     * Observable subject for authentication updates\n     * @type {Subject}\n     */\n    private updates = new Subject();\n\n\n    /**\n     * Creates the AuthService\n     * @param storageService Injected StorageService for storing authentication token\n     */\n    constructor(private storageService: StorageService) {\n\n    }\n\n    /**\n     * Observable to listen on authentication updates\n     * @return {Observable} The observable to subscribe authentication updates\n     */\n    get Updates(): Observable {\n        return this.updates;\n    }\n\n    /**\n     * Gets the Token of the authenticated user\n     * @return {string} Token of the authenticatd user\n     */\n    get Token(): string {\n        return this.storageService.getItem(tokenKey);\n    }\n\n    /**\n     * Sets the token of the authenticated user\n     * @param token The Token of the authenticated user\n     */\n    set Token(token: string) {\n        if (!token) {\n            this.invalidate();\n            return;\n        }\n\n        this.updates.next(AuthUpdateType.LoginSucess);\n\n        this.storageService.setItem(tokenKey, token);\n    }\n\n    /**\n     * Invalidates the stored token\n     */\n    invalidate(): void {\n        if (this.Token) {\n            this.updates.next(AuthUpdateType.AuthenticationFailure);\n        }\n\n        this.storageService.removeItem(tokenKey);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarSettings.html":{"url":"interfaces/CalendarSettings.html","title":"interface - CalendarSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:99\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:104\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:16\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailSettings.html":{"url":"interfaces/MailSettings.html","title":"interface - MailSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MailSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:80\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        unread\n                                    \n                                \n                                \n                                    \n                                        unread:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    show only unread email\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mirror.html":{"url":"interfaces/Mirror.html","title":"interface - Mirror","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Mirror\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/mirror.ts\n        \n\n            \n                Description\n            \n            \n                The Mirror interface\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    The Id of the Mirror\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    The Path to the Image used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    The Name of the Mirror used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    The User to which the Mirror belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        widgets\n                                    \n                                \n                                \n                                    \n                                        widgets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:33\n                                        \n                                    \n\n                            \n                                \n                                    The Widgets to Display in the Mirror frontend\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Widget} from './widget';\n\n/**\n * The Mirror interface\n *\n * @interface Mirror\n */\nexport interface Mirror {\n\n    /**\n     * The Id of the Mirror\n     */\n    id: string;\n    /**\n     * The User to which the Mirror belongs to\n     */\n    user: string;\n    /**\n     * The Name of the Mirror used to display on administration operations.\n     */\n    name: string;\n    /**\n     * The Path to the Image used to display on administration operations.\n     */\n    image: string;\n    /**\n     * The Widgets to Display in the Mirror frontend\n     */\n    widgets: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsSetting.html":{"url":"interfaces/NewsSetting.html","title":"interface - NewsSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NewsSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the News Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        feedUrl\n                                    \n                                \n                                \n                                    \n                                        feedUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:67\n                                        \n                                    \n\n                            \n                                \n                                    Url of the RSS News Feed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:72\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of news items to display\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequest.html":{"url":"interfaces/RegisterRequest.html","title":"interface - RegisterRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:20\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:22\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseType.html":{"url":"interfaces/ResponseType.html","title":"interface - ResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseType\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/shared/response-type.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Collection of Items.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nextPageToken\n                                    \n                                \n                                \n                                    \n                                        nextPageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Token that can be used to request the next page of this result.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface ResponseType {\n    /**\n     * Type of the resource.\n     */\n    kind: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Token that can be used to request the next page of this result.\n     */\n    nextPageToken: string;\n    /**\n     * Collection of Items.\n     */\n    items: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmartMirrorModuleOptions.html":{"url":"interfaces/SmartMirrorModuleOptions.html","title":"interface - SmartMirrorModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SmartMirrorModuleOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.options.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 10.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/module.options.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface SmartMirrorModuleOptions {\n    apiUrl:string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Task\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        completed\n                                    \n                                \n                                \n                                    \n                                        completed:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:55\n                                        \n                                    \n\n                            \n                                \n                                    Completion date of the task. This field is omitted if the task has not been completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        deleted\n                                    \n                                \n                                \n                                    \n                                        deleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:59\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether the task has been deleted. The default if False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        due\n                                    \n                                \n                                \n                                    \n                                        due:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:51\n                                        \n                                    \n\n                            \n                                \n                                    Due date of the task. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:64\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task\nlist was last cleared. The default is False. This field is read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Task identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:7\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource. This is always \"tasks#task\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:68\n                                        \n                                    \n\n                            \n                                \n                                    Collection of links. This collection is read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        notes\n                                    \n                                \n                                \n                                    \n                                        notes:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:43\n                                        \n                                    \n\n                            \n                                \n                                    Notes describing the task. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    Parent task identifier. This field is omitted if it is a top-level task. This field is read-only.\nUse the \"move\" method to move the task under a different parent or to the top level.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:39\n                                        \n                                    \n\n                            \n                                \n                                    String indicating the position of the task among its sibling tasks under the same parent task or at the top\nlevel. If this string is greater than another task's corresponding position string according to lexicographical\nordering, the task is positioned after the other task under the same parent task (or at the top level).\nThis field is read-only. Use the \"move\" method to move the task to another position.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selfLink\n                                    \n                                \n                                \n                                    \n                                        selfLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    URL pointing to this task. Used to retrieve, update, or delete this task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:47\n                                        \n                                    \n\n                            \n                                \n                                    Status of the task. This is either \"needsAction\" or \"completed\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Title of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Last modification time of the task.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {TaskLink} from \"./task-link.model\";\n\nexport interface Task {\n    /**\n     * Type of the resource. This is always \"tasks#task\".\n     */\n    kind: string;\n    /**\n     * Task identifier.\n     */\n    id: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     *    Title of the task.\n     */\n    title: string;\n    /**\n     * Last modification time of the task.\n     */\n    updated: Date;\n    /**\n     * URL pointing to this task. Used to retrieve, update, or delete this task.\n     */\n    selfLink: string;\n    /**\n     * Parent task identifier. This field is omitted if it is a top-level task. This field is read-only.\n     * Use the \"move\" method to move the task under a different parent or to the top level.\n     */\n    parent: string;\n    /**\n     * String indicating the position of the task among its sibling tasks under the same parent task or at the top\n     * level. If this string is greater than another task's corresponding position string according to lexicographical\n     * ordering, the task is positioned after the other task under the same parent task (or at the top level).\n     * This field is read-only. Use the \"move\" method to move the task to another position.\n     */\n    position: string;\n    /**\n     * Notes describing the task. Optional.\n     */\n    notes: string;\n    /**\n     * Status of the task. This is either \"needsAction\" or \"completed\".\n     */\n    status: string;\n    /**\n     * Due date of the task. Optional.\n     */\n    due: Date;\n    /**\n     * Completion date of the task. This field is omitted if the task has not been completed.\n     */\n    completed: Date;\n    /**\n     * Flag indicating whether the task has been deleted. The default if False.\n     */\n    deleted: boolean;\n    /**\n     * Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task\n     * list was last cleared. The default is False. This field is read-only.\n     */\n    hidden: boolean;\n    /**\n     * Collection of links. This collection is read-only.\n     */\n    links: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskLink.html":{"url":"interfaces/TaskLink.html","title":"interface - TaskLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskLink\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task-link.model.ts\n        \n\n            \n                Description\n            \n            \n                A link of a Task.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The description. In HTML speak: Everything between  and .\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    The URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Type of the link, e.g. \"email\".\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface TaskLink {\n    /**\n     * Type of the link, e.g. \"email\".\n     */\n        type: string;\n    /**\n     * The description. In HTML speak: Everything between  and .\n     */\n    description: string;\n    /**\n     * The URL.\n     */\n    link: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskListQueryOptions.html":{"url":"interfaces/TaskListQueryOptions.html","title":"interface - TaskListQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskListQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query options for tasklist.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of task lists returned on one page. Optional. The default is 100.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying the result page to return. Optional.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Tasklist} from \"./tasklist.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  TaskListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n}\n\n@Injectable()\nexport class TaskListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/tasks/v1/users/@me/lists';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all the authenticated user's task lists\n     * @param authToken The authenticated user's token.\n     * @return {Observable} Tasklists of the authenticated user.\n     */\n    public list(authToken: string, options?: TaskListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n    /**\n     * Returns the authenticated user's specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Specified Tasklist for the authenticated user.\n     */\n    public get(authToken: string, tasklist: string): Observable {\n        return this.service.get(this.api, authToken, {\n            params: {\n                tasklist: tasklist\n            }\n        }).map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskQueryOptions.html":{"url":"interfaces/TaskQueryOptions.html","title":"interface - TaskQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query parameters for tasks\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        completedMax\n                                    \n                                \n                                \n                                    \n                                        completedMax:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        completedMin\n                                    \n                                \n                                \n                                    \n                                        completedMin:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dueMax\n                                    \n                                \n                                \n                                    \n                                        dueMax:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dueMin\n                                    \n                                \n                                \n                                    \n                                        dueMin:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of task lists returned on one page. Optional. The default is 100.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:36\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying the result page to return. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showCompleted\n                                    \n                                \n                                \n                                    \n                                        showCompleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:40\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showDeleted\n                                    \n                                \n                                \n                                    \n                                        showDeleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:44\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showHidden\n                                    \n                                \n                                \n                                    \n                                        showHidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:48\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedMin\n                                    \n                                \n                                \n                                    \n                                        updatedMin:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:52\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Task} from \"./task.model\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Optional query parameters for tasks\n */\nexport interface TaskQueryOptions {\n    /**\n     * Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMax?: Date;\n    /**\n     * Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMin?: Date;\n    /**\n     * Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMax?: Date;\n    /**\n     * Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMin?: Date;\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n     */\n    showCompleted?: boolean;\n    /**\n     * Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n     */\n    showHidden?: boolean;\n    /**\n     * Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: Date;\n\n}\n\n@Injectable()\nexport class TaskService {\n    /**\n     * relative url to the tasks api\n     * @type {string}\n     */\n    private api = '/tasks/v1/lists/';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all tasks in the specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Tasks for specified Tasklist of the authenticated user.\n     */\n\n    public list(authToken: string, tasklist: string, options?: TaskQueryOptions): Observable> {\n        return this.service.get(this.api + tasklist + \"/tasks\", authToken)\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskSetting.html":{"url":"interfaces/TaskSetting.html","title":"interface - TaskSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the Task Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:53\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of task items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:57\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google tasks\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tasklist.html":{"url":"interfaces/Tasklist.html","title":"interface - Tasklist","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Tasklist\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.model.ts\n        \n\n            \n                Description\n            \n            \n                A list containing tasks. Users can have more than one task list to manage their tasks the way they want.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Task list identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource. This is always \"tasks#taskList\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selfLink\n                                    \n                                \n                                \n                                    \n                                        selfLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    URL pointing to this task list. Used to retrieve, update, or delete this task list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Title of the task list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Last modification time of the task list\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface Tasklist {\n    /**\n     * Type of the resource. This is always \"tasks#taskList\".\n     */\n    kind: string;\n    /**\n     * Task list identifier.\n     */\n    id: string;\n    /**\n     *    ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Title of the task list.\n     */\n    title: string;\n    /**\n     * Last modification time of the task list\n     */\n    updated: Date;\n    /**\n     * URL pointing to this task list. Used to retrieve, update, or delete this task list.\n     */\n    selfLink: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ticket.html":{"url":"interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Ticket\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ticket.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        mirrorId\n                                    \n                                \n                                \n                                    \n                                        mirrorId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface Ticket {\n    number: string;         // The Ticket number used to register a mirror\n    mirrorId: string;       // The Id of the Mirror which has requested the ticket\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherSetting.html":{"url":"interfaces/WeatherSetting.html","title":"interface - WeatherSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Settings of the Weather Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    The City for Weather retrieval\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:42\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of forecast days to display\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Widget.html":{"url":"interfaces/Widget.html","title":"interface - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Widget\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Name of the widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    The Order Position inside the Mirror Side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        setting\n                                    \n                                \n                                \n                                    \n                                        setting:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Settings of the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        side\n                                    \n                                \n                                \n                                    \n                                        side:     WidgetSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WidgetSide\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    The Side of the Mirror to Display the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     WidgetType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WidgetType\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    Type of the Widget\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    Variables\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 SMARTMIRRORMODULE_OPTIONS\n                            \n                        \n                        \n                            \n                                SMARTMIRRORMODULE_OPTIONS:     \n        \n                            \n                        \n                    \n                \n        \n        src/services/token.service.ts\n        \n                    \n                    \n                        \n                            \n                                 tokenKey\n                            \n                        \n                        \n                            \n                                tokenKey:     \n        \n                            \n                        \n                            \n                                \n                                    Default value : auth.token\n                                \n                            \n                    \n                \n        \n\n    Functions\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 createSmartMirrorModuleConfig\n                            \n                        \n                        \n                            \n        createSmartMirrorModuleConfig(options: undefined)\n                            \n                        \n        \n        \n        \n                    \n                \n        \n\n    Enumerations\n        src/models/enums.ts\n        \n                \n                    \n                        \n                            \n                                WidgetType\n                            \n                        \n                            \n                                \n                                    Created by cem on 09.06.17.\n        \n                                \n                            \n                                \n                                    \n                                        Weather\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Calender\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                                \n                                    \n                                        News\n                                    \n                                \n                                \n                                    \n                                        Value: 3\n                                    \n                                \n                                \n                                    \n                                        Mails\n                                    \n                                \n                                \n                                    \n                                        Value: 4\n                                    \n                                \n                                \n                                    \n                                        Notes\n                                    \n                                \n                                \n                                    \n                                        Value: 5\n                                    \n                                \n                    \n                \n                \n                    \n                        \n                            \n                                WidgetSide\n                            \n                        \n                                \n                                    \n                                        Inactive\n                                    \n                                \n                                \n                                    \n                                        Value: 0\n                                    \n                                \n                                \n                                    \n                                        Left\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Right\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n        src/services/token.service.ts\n        \n                \n                    \n                        \n                            \n                                AuthUpdateType\n                            \n                        \n                                \n                                    \n                                        LoginSucess\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        AuthenticationFailure\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/gsuite/shared/base.service.ts\n            \n            \n                injectable\n            \n            \n                BaseService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                src/gsuite/shared/response-type.model.ts\n            \n            \n                interface\n            \n            \n                ResponseType\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/gsuite/tasks/task-link.model.ts\n            \n            \n                interface\n            \n            \n                TaskLink\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/gsuite/tasks/task.model.ts\n            \n            \n                interface\n            \n            \n                Task\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                src/gsuite/tasks/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                src/gsuite/tasks/task.service.ts\n            \n            \n                interface\n            \n            \n                TaskQueryOptions\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.model.ts\n            \n            \n                interface\n            \n            \n                Tasklist\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.service.ts\n            \n            \n                injectable\n            \n            \n                TaskListService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.service.ts\n            \n            \n                interface\n            \n            \n                TaskListQueryOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/mirror.ts\n            \n            \n                interface\n            \n            \n                Mirror\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/models/ticket.ts\n            \n            \n                interface\n            \n            \n                Ticket\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginRequest\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginResponse\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                RegisterRequest\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                CalendarSettings\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                MailSettings\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                NewsSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                TaskSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                WeatherSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                Widget\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/mirror.service.ts\n            \n            \n                injectable\n            \n            \n                MirrorService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/services/smartmirror.service.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/ticket.service.ts\n            \n            \n                injectable\n            \n            \n                TicketService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/services/token.service.ts\n            \n            \n                injectable\n            \n            \n                TokenService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/utils/module.config.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorModuleConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/utils/module.options.ts\n            \n            \n                interface\n            \n            \n                SmartMirrorModuleOptions\n            \n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
