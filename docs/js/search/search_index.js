var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"/index.html":["ad","angular","angular/cor","angular/ion","angular/platform","app.compon","appcompon","applic","appmodul","basoglu","bootstrap","browser","browsermodul","cem","cemizm/smartmirror","class","compon","console.log(err","constructor(priv","contain","declar","direct","err","export","getal","https://sm","import","index","instal","librari","licens","match","mirror","mirrorservic","mit","ngmodul","npm","onc","pipe","project","provid","readm","result","run","saveusag","servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","this.mirror","this.mirrorservice.getall().subscribe(mirror","us","via","webapi.azurewebsites.net/api"],"/overview.html":["1","7","bootstrap","cluster_smartmirrormodul","cluster_smartmirrormodule_import","commonmodul","declar","depend","export","httpmodul","inject","legend","match","modul","out","overview","provid","reset","result","smartmirrormodul","zoom"],"/modules.html":["brows","browser","match","modul","result","smartmirrormodul","support","svg"],"/modules/SmartMirrorModule.html":["angular","angular/common","angular/cor","angular/http","appcompon","appmodul","authservic","bootstrap","browsermodul","cemizm/smartmirror","class","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","commonmodul","const","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","declar","dep","depend","descript","exampl","export","file","forroot(opt","function","httpmodul","https://sm","import","info","injectiontoken","injectiontoken(\"smartmirrormodule_opt","legend","match","mirror","mirrorservic","models/index","modul","modulewithprovid","new","ngmodul","option","out","project","provid","reset","result","return","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/token.servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","src/index.t","static","storageservic","tokenservic","usefactori","usevalu","utils/index","utils/module.config","utils/module.opt","webapi.azurewebsites.net/api","zoom"],"/injectables/AuthService.html":["angular/cor","api","apiexampl","auth","authent","authentication:import","authservic","cemizm/smartmirror","class","console.log(err","console.log(r","constructor","constructor(priv","constructor(tokenservic","creat","default","defin","descript","detail","email","err","exampl","export","file","given","http","import","info","inject","interact","intern","link","localstorag","login","login(email","loginr","loginres.accesstoken","loginrespons","map(r","match","md5password\").subscribe(r","method","mirror","models/us","new","observ","param","paramet","password","perform","privat","profil","properti","protect","public","reg","reg).map(r","regist","register(reg","registerrequest","registr","rel","request","res.json","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","save","servic","share","shared\";...login","smart","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","static","store","string","this.authservice.login(\"cem(basoglu.d","this.authservice.login(\"cem@basoglu.d","this.service.get(this.api).map(r","this.service.post(this.api","this.tokenservice.token","token","token.servic","tokenservic","type","typescript","url","user","valu","verifi","void"],"/injectables/MirrorService.html":["angular/cor","api","authent","class","collect","constructor","constructor(priv","constructor(servic","creat","default","defin","delet","deletebyid","deletebyid(id","descript","export","file","get","getal","getbyid","getbyid(id","given","http","id","id).map","id).map(r","import","info","inject","interact","intern","match","method","mirror","mirror).map","mirrorservic","models/mirror","observ","param","paramet","privat","properti","protect","public","rel","remot","request","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","static","string","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.put(this.api","type","updat","update(mirror","url","user","valu"],"/injectables/SmartMirrorModuleConfig.html":["angular/cor","api","apiurl","class","configr","configur","constructor","constructor(opt","constructor(priv","creat","defin","descript","export","file","given","http","import","info","inject","match","mirror","modul","module.opt","option","options:smartmirrormoduleopt","param","paramet","properti","request","result","return","smart","smartmirrormoduleconfig","smartmirrormoduleopt","sourc","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","string","this.options.apiurl","url","us"],"/injectables/SmartMirrorService.html":["401","add","angular","angular/cor","angular/http","api","argument","authent","basic","bearer","bodi","caller","catch(r","class","client","config","configur","constructor","constructor(config","constructor(priv","creat","defin","delet","delete(url","descript","each","enhanc","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","export","extend","file","get(url","handl","head","head(url","header","http","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","notifi","observ","observable.throw(errorrespons","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","protect","public","put","put(url","re","remot","remov","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","smartmirrormoduleconfig","smartmirrorservic","sourc","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","static","store","string","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.sendrequest({method","this.tokenservice.invalid","this.tokenservice.token","token","token.servic","tokenservic","unauthor","url","us","utils/module.config"],"/injectables/StorageService.html":["angular/cor","applic","class","clear","crud","defin","descript","exist","export","file","get","getitem","getitem(key","given","import","index","info","inject","item","key","key(index","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","match","method","null","number","oper","otherwis","param","paramet","remov","removeitem","removeitem(key","result","retriev","return","servic","set","setitem","setitem(key","sourc","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","storag","storageservic","string","valu","void","whole","wrapper"],"/injectables/TicketService.html":["angular/cor","api","authent","authservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","descript","export","file","get","get(id","get(id:str","given","http","id","id).map(r","import","info","inject","interact","intern","map(r","match","method","mirror","models/mirror","models/ticket","new","number","observ","param","paramet","privat","properti","protect","public","regist","register(numb","registr","rel","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","set","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","static","string","this.service.get(this.api","this.service.post(this.api","ticket","ticketservic","type","url","user","valu"],"/injectables/TokenService.html":["1","2","access","angular/cor","auth.token","authent","authenticatd","authenticationfailur","authservic","authupdatetyp","cemizm/smartmirror","class","console.log(\"authent","const","constructor","constructor(priv","constructor(storageservic","creat","defin","descript","enum","exampl","export","file","get","import","info","inject","invalid","jw","listen","localstorag","loginsucess","match","method","new","notif","notifications:import","observ","param","paramet","privat","properti","protect","result","return","rxj","servic","set","share","shared\";...constructor(priv","sourc","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","storage.servic","storageservic","store","string","subject","subscrib","this.invalid","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","token","token(token","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","updat","updatesexampl","user","userset","void"],"/miscellaneous.html":["0","1","2","3","4","5","auth.token","authenticationfailur","authupdatetyp","calend","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","default","enumer","function","inact","left","loginsucess","mail","match","miscellan","new","note","result","right","smartmirrormodule_opt","src/index.t","src/models/enums.t","src/services/token.service.t","tokenkey","undefin","valu","variabl","weather","widgetsid","widgettyp"],"/coverage.html":["100","11/11","3/3","5/5","6/6","7/7","authservic","coverag","document","file","identifi","inject","match","mirrorservic","result","smartmirrormoduleconfig","smartmirrorservic","src/services/auth.service.t","src/services/mirror.service.t","src/services/smartmirror.service.t","src/services/storage.service.t","src/services/ticket.service.t","src/services/token.service.t","src/utils/module.config.t","statement","storageservic","ticketservic","tokenservic","type"]},"length":13},"tokenStore":{"root":{"0":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}},"1":{"0":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.15555555555555556}}},"docs":{}},"1":{"docs":{},"/":{"1":{"1":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}},"docs":{}},"docs":{}}},"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.05357142857142857}}},"2":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.05357142857142857}}},"3":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"/":{"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}},"docs":{}}},"4":{"0":{"1":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}},"5":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"/":{"5":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}},"docs":{}}},"6":{"docs":{},"/":{"6":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.06666666666666667}}},"docs":{}}},"7":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353}},"/":{"7":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}},"docs":{}}},"docs":{},"a":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.031914893617021274},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.034013605442176874},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.030434782608695653},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03488372093023256},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03553299492385787}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03488372093023256}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":5.0272108843537415},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.04081632653061224},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01171875},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.0761904761904762}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}},"i":{"docs":{},"c":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775}}}}}}}}},"d":{"docs":{},"i":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.03125}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules.html":{"ref":"/modules.html","tf":0.1}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}},"i":{"docs":{},"z":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.031914893617021274},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.013043478260869565},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.05813953488372093},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015228426395939087},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.08823529411764706},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.028089887640449437}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"r":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372}}},"u":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.046511627906976744},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":10.022222222222222}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.025380710659898477},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02247191011235955},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016853932584269662}}}}}},"p":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02247191011235955}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}},"i":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.017006802721088437},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02030456852791878},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023809523809523808}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013605442176870748}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.009765625}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0449438202247191},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.017006802721088437}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"u":{"docs":{},"m":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"e":{"docs":{},"r":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.013043478260869565}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}},"i":{"docs":{},"d":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.04830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02030456852791878}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.05078125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.08823529411764706},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.028089887640449437}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01171875}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0851063829787234},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.07303370786516854},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027210884353741496},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.015625},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03553299492385787},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.01904761904761905}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/index.html":{"ref":"/index.html","tf":5},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.033816425120772944}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0425531914893617}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":5.023809523809524},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":5.021739130434782},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":5.034883720930233},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":5.017578125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":5.0144927536231885},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":5.025380710659898},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":5.023809523809524},"/coverage.html":{"ref":"/coverage.html","tf":0.15555555555555556}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}}},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023809523809523808}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.05217391304347826},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.030456852791878174}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}},"(":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.057971014492753624}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0425531914893617}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}},"n":{"docs":{},"k":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}},"f":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.07729468599033816},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.030612244897959183}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/overview.html":{"ref":"/overview.html","tf":0.058823529411764705},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.044444444444444446}}}}},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}},"i":{"docs":{},"l":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.031914893617021274},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013605442176870748},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.10869565217391304},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.05813953488372093},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.06091370558375635}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.031914893617021274},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":5.026086956521739},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}}}}}}}}}},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":10.017857142857142}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.058823529411764705},"/modules.html":{"ref":"/modules.html","tf":10.1},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":5.022471910112359},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}},"u":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}}}}}}},"d":{"5":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.029296875},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02247191011235955}}}}}}}},"p":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085}}}},"e":{"docs":{},"w":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013605442176870748},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.04060913705583756},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.014285714285714285}},"i":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}},"e":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03553299492385787}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}},"u":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"/overview.html":{"ref":"/overview.html","tf":10.029411764705882}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.06976744186046512},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.068359375}},"s":{"docs":{},":":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.034013605442176874},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.05652173913043478},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.041015625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03553299492385787},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.04285714285714286}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.056179775280898875}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.017006802721088437},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01171875},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015228426395939087},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"e":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015228426395939087},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027210884353741496}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.02734375}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.013671875},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}}}},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":5}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/overview.html":{"ref":"/overview.html","tf":0.058823529411764705},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.044444444444444446}}}}},"e":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01171875}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.04081632653061224},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.05217391304347826},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.04296875},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.043478260869565216},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.030456852791878174},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02857142857142857}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027210884353741496},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.025380710659898477}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306}}}}}}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013605442176870748},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03553299492385787}}}}}}},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0546875}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}},"u":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.041015625}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}}},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454}},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}},"x":{"docs":{},"j":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}},"u":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.02040816326530612},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.021739130434782608},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.025380710659898477},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.06382978723404255},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016853932584269662},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"d":{"docs":{},"\"":{"docs":{},";":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013605442176870748},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.05813953488372093},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/overview.html":{"ref":"/overview.html","tf":0.17647058823529413},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":5.078651685393258}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.033707865168539325},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.033707865168539325},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":5.023255813953488},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.005859375},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016853932584269662},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.033707865168539325},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.013043478260869565},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":5.00390625},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015228426395939087},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02857142857142857}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}},"v":{"docs":{},"g":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"3":{"4":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}},"docs":{}},"4":{"8":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}},"docs":{}},"5":{"8":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}},"docs":{}},"7":{"6":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"2":{"2":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044}}},"docs":{}},"3":{"5":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}},"docs":{}},"4":{"4":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}},"docs":{}},"5":{"3":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}},"docs":{}},"6":{"2":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"1":{"1":{"3":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"9":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"3":{"5":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"4":{"2":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"9":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"5":{"6":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"6":{"3":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"7":{"0":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"7":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"8":{"7":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"1":{"6":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"2":{"5":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"3":{"4":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"4":{"2":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"5":{"1":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"2":{"4":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}},"docs":{}},"3":{"8":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}},"docs":{}},"4":{"7":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"3":{"9":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}},"docs":{}},"5":{"4":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}},"docs":{}},"6":{"2":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}},"docs":{}},"8":{"4":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},":":{"1":{"2":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}},"docs":{}},"2":{"6":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01020408163265306},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017391304347826087},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.013671875},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":5.009661835748792},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.0380952380952381},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02857142857142857}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.02040816326530612},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03488372093023256},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.02734375},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.06280193236714976},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.025380710659898477},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.01904761904761905}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},".":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}}}}},"@":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},".":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.013671875}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.023809523809523808},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.01171875},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.08571428571428572}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027210884353741496},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.013671875},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":5.038095238095238},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.014285714285714285},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.07106598984771574}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":5.020304568527918},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.02127659574468085},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023255813953488372},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0078125}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02247191011235955}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.05442176870748299},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.02608695652173913},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023809523809523808}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03488372093023256},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.02734375},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.01015228426395939}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.021739130434782608},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.06666666666666667}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008695652173913044}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00390625}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.04830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.19642857142857142}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006802721088435374}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.028985507246376812},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"a":{"docs":{},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.010638297872340425},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.058823529411764705},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.011235955056179775}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003401360544217687},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004347826086956522},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011627906976744186},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.001953125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005076142131979695},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004761904761904762},"/coverage.html":{"ref":"/coverage.html","tf":0.022222222222222223}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.0056179775280898875},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.12077294685990338}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009523809523809525}}}}},"length":792},"corpusTokens":["0","1","100","11/11","2","3","3/3","4","401","5","5/5","6/6","7","7/7","access","ad","add","angular","angular/common","angular/cor","angular/http","angular/ion","angular/platform","api","apiexampl","apiurl","app.compon","appcompon","applic","appmodul","argument","auth","auth.token","authent","authenticatd","authentication:import","authenticationfailur","authservic","authupdatetyp","basic","basoglu","bearer","bodi","bootstrap","brows","browser","browsermodul","calend","caller","catch(r","cem","cemizm/smartmirror","class","clear","client","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","collect","commonmodul","compon","config","configr","configur","console.log(\"authent","console.log(err","console.log(r","const","constructor","constructor(config","constructor(opt","constructor(priv","constructor(servic","constructor(storageservic","constructor(tokenservic","contain","coverag","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","crud","declar","default","defin","delet","delete(url","deletebyid","deletebyid(id","dep","depend","descript","detail","direct","document","each","email","enhanc","enum","enumer","err","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","exampl","exist","export","extend","file","forroot(opt","function","get","get(id","get(id:str","get(url","getal","getbyid","getbyid(id","getitem","getitem(key","given","handl","head","head(url","header","http","httpmodul","https://sm","id","id).map","id).map(r","identifi","import","inact","index","info","inject","injectiontoken","injectiontoken(\"smartmirrormodule_opt","instal","interact","intern","invalid","item","jw","key","key(index","left","legend","librari","licens","link","listen","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","login","login(email","loginr","loginres.accesstoken","loginrespons","loginsucess","mail","map(r","match","md5password\").subscribe(r","method","mirror","mirror).map","mirrorservic","miscellan","mit","models/index","models/mirror","models/ticket","models/us","modul","module.opt","modulewithprovid","new","ngmodul","note","notif","notifi","notifications:import","npm","null","number","observ","observable.throw(errorrespons","onc","oper","option","options(url","options:smartmirrormoduleopt","otherwis","out","overview","param","paramet","password","patch","patch(url","perform","pipe","post","post(url","privat","profil","project","properti","protect","provid","public","put","put(url","re","readm","reg","reg).map(r","regist","register(numb","register(reg","registerrequest","registr","rel","remot","remov","removeitem","removeitem(key","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","res.json","reset","respons","result","retriev","return","right","run","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","save","saveusag","send","sendrequest","sendrequest(requestoptionsarg","servic","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/token.servic","set","setitem","setitem(key","share","shared\";...constructor(priv","shared\";...login","smart","smartmirror","smartmirror.servic","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","src/index.t","src/models/enums.t","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","statement","static","storag","storage.servic","storageservic","store","string","subject","subscrib","support","svg","this.authservice.login(\"cem(basoglu.d","this.authservice.login(\"cem@basoglu.d","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.invalid","this.mirror","this.mirrorservice.getall().subscribe(mirror","this.options.apiurl","this.sendrequest({method","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.post(this.api","this.service.put(this.api","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.tokenservice.invalid","this.tokenservice.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","ticket","ticketservic","token","token(token","token.servic","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","unauthor","undefin","updat","update(mirror","updatesexampl","url","us","usefactori","user","userset","usevalu","utils/index","utils/module.config","utils/module.opt","valu","variabl","verifi","via","void","weather","webapi.azurewebsites.net/api","whole","widgetsid","widgettyp","wrapper","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"/index.html":{"url":"/index.html","title":"readme - index","body":"\n                   \nShared library of the smart mirror project\nContains all shared components, directives, pipes and services, used by the smart mirror project.\nInstallation\nTo install this library, run:\n$ npm install (cemizm/smartmirror-shared --saveUsage\nAfter the Installation of the library via npm, you can import it into your Angular/Ionic application by adding the SmartMirrorModule to the AppModule:\nimport {BrowserModule} from \"(angular/platform-browser\";\nimport {NgModule} from \"(angular/core\";\nimport {AppComponent} from \"./app.component\";\nimport {SmartMirrorModule} from \"(cemizm/smartmirror-shared\";\n\n(NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Once the shared library is imported, you can use its components, directives, pipes and services in your Angular application:\nimport {MirrorService} from \"(cemizm/smartmirror-shared\";\n\n... \n\n  constructor(private mirrorService: MirrorService) {\n\n  }\n\n  getAll() {\n    this.mirrorService.getAll().subscribe(mirrors => {\n      this.mirrors = mirrors;\n    }, err => {\n      console.log(err);\n    });\n  }License\nMIT © Cem Basoglu\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/overview.html":{"url":"/overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules.html":{"url":"/modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    SmartMirrorModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules/SmartMirrorModule.html":{"url":"/modules/SmartMirrorModule.html","title":"module - SmartMirrorModule","body":"\n                   \n\n\n  Modules\n  SmartMirrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\ncluster_SmartMirrorModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\nSmartMirrorModule -->\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }->SmartMirrorModule\n\n\n\n\n\nSmartMirrorService\n\nSmartMirrorService\n\nSmartMirrorModule -->\n\nSmartMirrorService->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n            \n                Description\n            \n            \n                The shared Angular module for Smart Mirror project\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                SmartMirrorService\n                            \n                    \n                \n            \n        \n    \n    \n        import {NgModule, ModuleWithProviders, InjectionToken} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {MirrorService} from \"./services/mirror.service\";\nimport {StorageService} from \"./services/storage.service\";\nimport {TokenService} from \"./services/token.service\";\nimport {SmartMirrorModuleConfig} from \"./utils/module.config\";\nimport {SmartMirrorModuleOptions} from \"./utils/module.options\";\nimport {SmartMirrorService} from \"./services/smartmirror.service\";\nimport {AuthService} from \"./services/auth.service\";\n\nexport * from './models/index';\nexport * from './services/index';\nexport * from './utils/index'\n\nexport const SMARTMIRRORMODULE_OPTIONS = new InjectionToken(\"SMARTMIRRORMODULE_OPTIONS\");\n\n/**\n * The shared Angular module for Smart Mirror project\n *\n * @example\n *\n * import {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n *\n * @NgModule({\n *   declarations: [\n *     AppComponent\n *   ],\n *   imports: [\n *     BrowserModule,\n *     SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n *\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpModule\n    ],\n    declarations: [],\n    providers: [\n        {\n            provide: SmartMirrorModuleConfig,\n            useFactory: createSmartMirrorModuleConfig,\n            deps: [\n                SMARTMIRRORMODULE_OPTIONS\n            ]\n        },\n        SmartMirrorService\n    ]\n})\nexport class SmartMirrorModule {\n    static forRoot(options: SmartMirrorModuleOptions): ModuleWithProviders {\n        return {\n            ngModule: SmartMirrorModule,\n            providers: [\n                {provide: SMARTMIRRORMODULE_OPTIONS, useValue: options},\n                StorageService,\n                TokenService,\n                AuthService,\n                MirrorService\n            ]\n        };\n    }\n}\n\nexport function createSmartMirrorModuleConfig(options: SmartMirrorModuleOptions): SmartMirrorModuleConfig {\n    return new SmartMirrorModuleConfig(options);\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AuthService.html":{"url":"/injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthService class for authenticating and registering users on smart mirror apiExample Authentication:import {AuthService} from \"(cemizm/smartmirror-shared\";...login() {   this.authService.login(\"cem(basoglu.de\", \"md5password\").subscribe(res => {     console.log(res);   }, err=> {     console.log(err);   })}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(tokenService: TokenService, service: SmartMirrorService)\n                                \n                            \n                                \n                                    \n                                        Defined in src/services/auth.service.ts:34\n                                    \n                                \n            \n                            \n                                \n                                        Creates the AuthService\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected TokenService for storing authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Static get\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get()\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/auth.service.ts:48\n                                    \n                                \n            \n                            \n                                \n                                        Verifies the authentication token and returns the linked user\n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static login\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    login(email: string, password: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/auth.service.ts:58\n                                    \n                                \n            \n                            \n                                \n                                        Perform the login request and saves the authentication token in the localStorage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                The Email of the user to login\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                The Password of the user to login\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static register\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(reg: RegisterRequest)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/auth.service.ts:76\n                                    \n                                \n            \n                            \n                                \n                                        Registers a new User with the given registration details on the smart mirror api\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                reg\n                                                            \n                                                            \n                                                                The registration details of the new user to register.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Protected api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /auth\n                                    \n                                \n                                \n                                    \n                                        Defined in src/services/auth.service.ts:34\n                                    \n                                \n                            \n                                \n                                    relative url for the authentication api\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {User, LoginResponse, RegisterRequest} from \"../models/user\";\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {TokenService} from \"./token.service\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * AuthService class for authenticating and registering users on smart mirror api\n *\n * Example Authentication:\n * ```typescript\n * import {AuthService} from \"@cemizm/smartmirror-shared\";\n * ...\n * login() {\n *   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n *     console.log(res);\n *   }, err=> {\n *     console.log(err);\n *   })\n * }\n * ```\n */\n@Injectable()\nexport class AuthService {\n    /**\n     * relative url for the authentication api\n     * @type {string}\n     */\n    private api = \"/auth\";\n\n    /**\n     * Creates the AuthService\n     * @param tokenService Injected TokenService for storing authentication token\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private tokenService: TokenService, private service: SmartMirrorService) {\n    }\n\n    /**\n     * Verifies the authentication token and returns the linked user\n     * @return {Observable} The user linked with the authentication token.\n     */\n    public get(): Observable {\n        return this.service.get(this.api).map(res => res.json());\n    }\n\n    /**\n     * Perform the login request and saves the authentication token in the localStorage\n     * @param email The Email of the user to login\n     * @param password The Password of the user to login\n     * @return {Observable} Login response with the user profile\n     */\n    public login(email: string, password: string): Observable {\n        return this.service.post(this.api + '/', {\n            user: email,\n            password: password\n        }).map(res => {\n            let loginRes: LoginResponse = res.json();\n\n            this.tokenService.Token = loginRes.accessToken;\n\n            return loginRes;\n        });\n    }\n\n    /**\n     * Registers a new User with the given registration details on the smart mirror api\n     * @param reg The registration details of the new user to register.\n     * @return {Observable} void\n     */\n    public register(reg: RegisterRequest): Observable {\n        return this.service.post(this.api + '/register', reg).map(res => {\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/MirrorService.html":{"url":"/injectables/MirrorService.html","title":"injectable - MirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/mirror.service.ts\n        \n\n            \n                Description\n            \n            \n                MirrorService class for interacting with the remote mirror collection.\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService)\n                                \n                            \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:22\n                                    \n                                \n            \n                            \n                                \n                                        Creates the MirrorService\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Static getAll\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getAll()\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:35\n                                    \n                                \n            \n                            \n                                \n                                        Gets all Mirrors for authenticated User\n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static getById\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getById(id: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:44\n                                    \n                                \n            \n                            \n                                \n                                        Gets the mirror with the given id\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to request\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static update\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    update(mirror: Mirror)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:53\n                                    \n                                \n            \n                            \n                                \n                                        Updates the given mirror of the authenticated user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mirror\n                                                            \n                                                            \n                                                                The mirror to update\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static deleteById\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    deleteById(id: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:62\n                                    \n                                \n            \n                            \n                                \n                                        Deletes the mirror with the given id of the authenticated user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The mirror id to delete\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Protected api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /mirrors\n                                    \n                                \n                                \n                                    \n                                        Defined in src/services/mirror.service.ts:22\n                                    \n                                \n                            \n                                \n                                    relative url to the mirrors api\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Mirror} from '../models/mirror';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {SmartMirrorService} from \"./smartmirror.service\";\n\n/**\n * MirrorService class for interacting with the remote mirror collection.\n */\n@Injectable()\nexport class MirrorService  {\n    /**\n     * relative url to the mirrors api\n     * @type {string}\n     */\n    private api = '/mirrors';\n\n    /**\n     * Creates the MirrorService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets all Mirrors for authenticated User\n     * @return {Observable}\n     */\n    public getAll(): Observable> {\n        return this.service.get(this.api).map(res => >res.json());\n    }\n\n    /**\n     * Gets the mirror with the given id\n     * @param id The id of the mirror to request\n     * @return {Observable}\n     */\n    public getById(id: string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Updates the given mirror of the authenticated user\n     * @param mirror The mirror to update\n     * @return {Observable}\n     */\n    public update(mirror: Mirror): Observable {\n        return this.service.put(this.api, mirror).map(()=>{});\n    }\n\n    /**\n     * Deletes the mirror with the given id of the authenticated user\n     * @param id The mirror id to delete\n     * @return {Observable}\n     */\n    public deleteById(id: string): Observable {\n        return this.service.delete(this.api + '/' + id).map(()=>{});\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/SmartMirrorModuleConfig.html":{"url":"/injectables/SmartMirrorModuleConfig.html","title":"injectable - SmartMirrorModuleConfig","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorModuleConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration class for the smart mirror module\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: SmartMirrorModuleOptions)\n                                \n                            \n                                \n                                    \n                                        Defined in src/utils/module.config.ts:12\n                                    \n                                \n            \n                            \n                                \n                                        creates the configration class with the given options\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                The options to use for configuration\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     ApiUrl\n                                \n                            \n                            \n                                \n                                    ApiUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Defined in src/utils/module.config.ts:26\n                                    \n                                \n                            \n                                \n                                    The smart mirror api url for the http requests\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {SmartMirrorModuleOptions} from \"./module.options\";\n\n/**\n * Configuration class for the smart mirror module\n */\n@Injectable()\nexport class SmartMirrorModuleConfig {\n\n    /**\n     * creates the configration class with the given options\n     * @param options The options to use for configuration\n     */\n    constructor(private options:SmartMirrorModuleOptions){\n\n    }\n\n    /**\n     * The smart mirror api url for the http requests\n     * @return {string} The Smart Mirror Api url\n     */\n    get ApiUrl() : string{\n        return this.options.apiUrl;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/SmartMirrorService.html":{"url":"/injectables/SmartMirrorService.html","title":"injectable - SmartMirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/smartmirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: SmartMirrorModuleConfig, tokenService: TokenService, http: Http)\n                                \n                            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:19\n                                    \n                                \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Static get\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(url: string, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:35\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static post\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    post(url: string, body: any, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:42\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static put\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    put(url: string, body: any, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:49\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static delete\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    delete(url: string, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:56\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static patch\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    patch(url: string, body: any, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:63\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static head\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    head(url: string, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:70\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static options\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    options(url: string, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:77\n                                    \n                                \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Protected sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sendRequest(requestOptionsArgs: RequestOptionsArgs, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:87\n                                    \n                                \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Protected errorHandler\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    errorHandler(errorResponse: Response)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/smartmirror.service.ts:113\n                                    \n                                \n            \n                            \n                                \n                                        Handles authentication errors and returns errors to the caller\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                errorResponse\n                                                            \n                                                            \n                                                                The errorResponse to handle\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable | ErrorObservable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport {ErrorObservable} from \"rxjs/observable/ErrorObservable\";\n\nimport {TokenService} from \"./token.service\";\nimport {SmartMirrorModuleConfig} from \"../utils/module.config\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class SmartMirrorService {\n\n    /**\n     * creates the internal smart mirror api service\n     * @param config Injected configuration for remote service\n     * @param tokenService Injected token service for invalidating the authentication token\n     * @param http Injected angular http client used for the remote requests\n     */\n    constructor(private config: SmartMirrorModuleConfig,\n                private tokenService: TokenService,\n                private http: Http) {\n    }\n\n    /**\n     * Performs a request with `get` http method.\n     */\n    public get(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `post` http method.\n     */\n    public post(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `put` http method.\n     */\n    public put(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `delete` http method.\n     */\n    public delete(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `patch` http method.\n     */\n    public patch(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `head` http method.\n     */\n    public head(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `options` http method.\n     */\n    public options(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, options);\n    }\n\n    /**\n     * extends the request options with stored authentication token and sends the request to the remove service\n     * @param requestOptionsArgs The basic request options arguments\n     * @param options Enhanced request options arguments\n     * @return {Observable} Observable to listen on http response\n     */\n    private sendRequest(requestOptionsArgs: RequestOptionsArgs, options?: RequestOptionsArgs): Observable {\n\n        let requestOptions = new RequestOptions(requestOptionsArgs);\n\n        requestOptions.url = this.config.ApiUrl + requestOptions.url;\n\n        if (!requestOptions.headers)\n            requestOptions.headers = new Headers();\n\n\n\n        if (this.tokenService.Token)\n            requestOptions.headers.set(\"Authorization\", \"Bearer \" + this.tokenService.Token);\n\n        let request = new Request(requestOptions);\n\n        return this.http.request(request, options)\n            .map(res => res)\n            .catch(res => this.errorHandler(res));\n    }\n\n    /**\n     * Handles authentication errors and returns errors to the caller\n     * @param errorResponse The errorResponse to handle\n     * @return {ErrorObservable} The ErrorObservable to notify the caller\n     */\n    private errorHandler(errorResponse: Response): Observable | ErrorObservable {\n\n        if (errorResponse.status === 401) {\n            this.tokenService.invalidate();\n        }\n\n        return Observable.throw(errorResponse);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/StorageService.html":{"url":"/injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper service for crud operations on the local Storage\n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n                            \n                                \n            clear()\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/storage.service.ts:16\n                                    \n                                \n            \n                            \n                                \n                                        Clears the whole localStorage for the application\n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/storage.service.ts:25\n                                    \n                                \n            \n                            \n                                \n                                        Gets an item with the given key from the localStorage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key to get the value from the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     key\n                                \n                            \n                            \n                                \n            key(index: number)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/storage.service.ts:34\n                                    \n                                \n            \n                            \n                                \n                                        Gets the literal key on the given index in the localStorage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                index\n                                                            \n                                                            \n                                                                The index in the localStorage to retrieve the literal key for\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/storage.service.ts:42\n                                    \n                                \n            \n                            \n                                \n                                        Removes an item with the given key from the localStorage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to remove\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: string, value: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/storage.service.ts:51\n                                    \n                                \n            \n                            \n                                \n                                        Sets an item for the given key in the localStorage\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to set\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                The value of the item to in the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\n\n/**\n * Wrapper service for crud operations on the local Storage\n */\n@Injectable()\nexport class StorageService {\n\n    /**\n     * Clears the whole localStorage for the application\n     */\n    clear(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * Gets an item with the given key from the localStorage\n     * @param key The key to get the value from the localStorage\n     * @return {any} The value for the given key if exists, otherwise null\n     */\n    getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Gets the literal key on the given index in the localStorage\n     * @param index The index in the localStorage to retrieve the literal key for\n     * @return {string} The literal key for the given index\n     */\n    key(index: number): string {\n        return localStorage.key(index);\n    }\n\n    /**\n     * Removes an item with the given key from the localStorage\n     * @param key The key of the item to remove\n     */\n    removeItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    /**\n     * Sets an item for the given key in the localStorage\n     * @param key The key of the item to set\n     * @param value The value of the item to in the localStorage\n     */\n    setItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/TicketService.html":{"url":"/injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ticket.service.ts\n        \n\n            \n                Description\n            \n            \n                TicketService class for registration of new mirrors\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService)\n                                \n                            \n                                \n                                    \n                                        Defined in src/services/ticket.service.ts:24\n                                    \n                                \n            \n                            \n                                \n                                        Creates the AuthService\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Static get\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(id: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/ticket.service.ts:38\n                                    \n                                \n            \n                            \n                                \n                                        Gets a registration ticket for a new mirror with given id\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to create a new registration ticket\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Static register\n                                \n                            \n                            \n                                \n                                        \n                                            \n                                        \n                                    register(number: string)\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/ticket.service.ts:47\n                                    \n                                \n            \n                            \n                                \n                                        Registers a new mirror with the given ticket number for the authenticated user\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                number\n                                                            \n                                                            \n                                                                The ticket number of the mirror to register with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Protected api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tickets\n                                    \n                                \n                                \n                                    \n                                        Defined in src/services/ticket.service.ts:24\n                                    \n                                \n                            \n                                \n                                    relative url to the tickets api\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {Mirror} from \"../models/mirror\";\nimport {Ticket} from \"../models/ticket\";\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n/**\n * TicketService class for registration of new mirrors\n */\n@Injectable()\nexport class TicketService  {\n    /**\n     * relative url to the tickets api\n     * @type {string}\n     */\n    private api = '/tickets';\n\n    /**\n     * Creates the AuthService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets a registration ticket for a new mirror with given id\n     * @param id The id of the mirror to create a new registration ticket\n     * @return {Observable} ticket for registration\n     */\n    public get(id:string): Observable> {\n        return this.service.get(this.api + '/' + id).map(res => >res.json());\n    }\n\n    /**\n     * Registers a new mirror with the given ticket number for the authenticated user\n     * @param number The ticket number of the mirror to register with\n     * @return {Observable} the created mirror with default settings\n     */\n    public register(number: string): Observable {\n        return this.service.post(this.api + '/' + number, {}).map(res => res.json());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/TokenService.html":{"url":"/injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to access and store the JW-Token in the localStorage and to get notifications on authentication updatesExample authentication notifications:import {TokenService} from \"(cemizm/smartmirror-shared\";...constructor(private tokenService: TokenService) {   tokenService.Updates.subscribe(type => {     console.log(\"Authentication updates: \" + type);   });}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storageService: StorageService)\n                                \n                            \n                                \n                                    \n                                        Defined in src/services/token.service.ts:39\n                                    \n                                \n            \n                            \n                                \n                                        Creates the AuthService\n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                storageService\n                                                            \n                                                            \n                                                                Injected StorageService for storing authentication token\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     invalidate\n                                \n                            \n                            \n                                \n            invalidate()\n                                \n                            \n            \n            \n                                \n                                    \n                                        Defined in src/services/token.service.ts:84\n                                    \n                                \n            \n                            \n                                \n                                        Invalidates the stored token\n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     Token\n                                \n                            \n                            \n                                \n                                    Token:     string\n            \n                                \n                            \n                                \n                                    \n                                        Defined in src/services/token.service.ts:62\n                                    \n                                \n                            \n                                \n                                    Gets the Token of the authenticated userSets the token of the authenticated user\n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Protected updates\n                                \n                            \n                            \n                                \n                                    updates:     Subject\n            \n                                \n                            \n                                \n                                    \n                                        Defined in src/services/token.service.ts:39\n                                    \n                                \n                            \n                                \n                                    Observable subject for authentication updates\n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Updates\n                                \n                            \n                            \n                                \n                                    Updates:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Defined in src/services/token.service.ts:54\n                                    \n                                \n                            \n                                \n                                    Observable to listen on authentication updates\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {StorageService} from \"./storage.service\";\nimport {Subject, Observable} from \"rxjs\";\n\nconst tokenKey = 'auth.token';\n\nexport enum AuthUpdateType {\n    LoginSucess = 1,\n    AuthenticationFailure = 2,\n}\n\n/**\n * Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\n *\n * Example authentication notifications:\n * ```typescript\n * import {TokenService} from \"@cemizm/smartmirror-shared\";\n *\n * ...\n *\n * constructor(private tokenService: TokenService) {\n *   tokenService.Updates.subscribe(type => {\n *     console.log(\"Authentication updates: \" + type);\n *   });\n * }\n * ```\n */\n@Injectable()\nexport class TokenService {\n\n    /**\n     * Observable subject for authentication updates\n     * @type {Subject}\n     */\n    private updates = new Subject();\n\n\n    /**\n     * Creates the AuthService\n     * @param storageService Injected StorageService for storing authentication token\n     */\n    constructor(private storageService: StorageService) {\n\n    }\n\n    /**\n     * Observable to listen on authentication updates\n     * @return {Observable} The observable to subscribe authentication updates\n     */\n    get Updates(): Observable {\n        return this.updates;\n    }\n\n    /**\n     * Gets the Token of the authenticated user\n     * @return {string} Token of the authenticatd user\n     */\n    get Token(): string {\n        return this.storageService.getItem(tokenKey);\n    }\n\n    /**\n     * Sets the token of the authenticated user\n     * @param token The Token of the authenticated user\n     */\n    set Token(token: string) {\n        if (!token) {\n            this.invalidate();\n            return;\n        }\n\n        this.updates.next(AuthUpdateType.LoginSucess);\n\n        this.storageService.setItem(tokenKey, token);\n    }\n\n    /**\n     * Invalidates the stored token\n     */\n    invalidate(): void {\n        if (this.Token) {\n            this.updates.next(AuthUpdateType.AuthenticationFailure);\n        }\n\n        this.storageService.removeItem(tokenKey);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/miscellaneous.html":{"url":"/miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    Variables\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 SMARTMIRRORMODULE_OPTIONS\n                            \n                        \n                        \n                            \n                                SMARTMIRRORMODULE_OPTIONS:     \n        \n                            \n                        \n                    \n                \n        \n        src/services/token.service.ts\n        \n                    \n                    \n                        \n                            \n                                 tokenKey\n                            \n                        \n                        \n                            \n                                tokenKey:     \n        \n                            \n                        \n                            \n                                \n                                    Default value : auth.token\n                                \n                            \n                    \n                \n        \n\n    Functions\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 createSmartMirrorModuleConfig\n                            \n                        \n                        \n                            \n        createSmartMirrorModuleConfig(options: undefined)\n                            \n                        \n        \n        \n        \n                    \n                \n        \n\n    Enumerations\n        src/models/enums.ts\n        \n                \n                    WidgetType\n                \n                \n                    \n                                \n                                    \n                                        Weather\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Calender\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                                \n                                    \n                                        News\n                                    \n                                \n                                \n                                    \n                                        Value: 3\n                                    \n                                \n                                \n                                    \n                                        Mails\n                                    \n                                \n                                \n                                    \n                                        Value: 4\n                                    \n                                \n                                \n                                    \n                                        Notes\n                                    \n                                \n                                \n                                    \n                                        Value: 5\n                                    \n                                \n                    \n                \n                \n                    WidgetSide\n                \n                \n                    \n                                \n                                    \n                                        Inactive\n                                    \n                                \n                                \n                                    \n                                        Value: 0\n                                    \n                                \n                                \n                                    \n                                        Left\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Right\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n        src/services/token.service.ts\n        \n                \n                    AuthUpdateType\n                \n                \n                    \n                                \n                                    \n                                        LoginSucess\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        AuthenticationFailure\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/coverage.html":{"url":"/coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/mirror.service.ts\n            \n            \n                injectable\n            \n            \n                MirrorService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/services/smartmirror.service.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/ticket.service.ts\n            \n            \n                injectable\n            \n            \n                TicketService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/services/token.service.ts\n            \n            \n                injectable\n            \n            \n                TokenService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/utils/module.config.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorModuleConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
