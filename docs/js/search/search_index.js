var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"/index.html":["ad","angular","angular/cor","angular/ion","angular/platform","app.compon","appcompon","applic","appmodul","basoglu","bootstrap","browser","browsermodul","cem","cemizm/smartmirror","class","compon","console.log(err","constructor(priv","contain","declar","direct","document","err","export","found","gener","getal","github","here","https://sm","import","index","instal","librari","licens","match","mirror","mirrorservic","mit","ngmodul","npm","onc","page","pipe","project","provid","readm","result","run","savedocument","servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","this.mirror","this.mirrorservice.getall().subscribe(mirror","us","usag","via","webapi.azurewebsites.net/api"],"/overview.html":["1","13","7","bootstrap","cluster_smartmirrormodul","cluster_smartmirrormodule_import","commonmodul","declar","depend","export","httpmodul","inject","interfac","legend","match","modul","out","overview","provid","reset","result","smartmirrormodul","zoom"],"/modules.html":["brows","browser","match","modul","result","smartmirrormodul","support","svg"],"/modules/SmartMirrorModule.html":["angular","angular/common","angular/cor","angular/http","appcompon","appmodul","authservic","bootstrap","browsermodul","cemizm/smartmirror","class","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","commonmodul","const","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","declar","dep","depend","descript","exampl","export","file","forroot(opt","function","httpmodul","https://sm","import","info","injectiontoken","injectiontoken(\"smartmirrormodule_opt","legend","match","mirror","mirrorservic","models/index","modul","modulewithprovid","new","ngmodul","option","out","project","provid","reset","result","return","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/ticket.servic","services/token.servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","src/index.t","static","storageservic","ticketservic","tokenservic","usefactori","usevalu","utils/index","utils/module.config","utils/module.opt","webapi.azurewebsites.net/api","zoom"],"/injectables/AuthService.html":["angular/cor","api","auth","authent","authservic","cemizm/smartmirror","class","console.log(err","console.log(r","constructor","constructor(priv","constructor(tokenservic","creat","default","defin","descript","detail","email","err","exampl","export","file","given","http","import","info","inject","interact","intern","link","localstorag","login","login(email","loginr","loginres.accesstoken","loginrespons","map(r","match","md5password\").subscribe(r","method","mirror","models/us","new","observ","param","paramet","password","perform","privat","profil","properti","public","reg","reg).map(r","regist","register(reg","registerrequest","registr","rel","request","res.json","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","save","servic","share","smart","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","store","string","this.authservice.login(\"cem@basoglu.d","this.service.get(this.api).map(r","this.service.post(this.api","this.tokenservice.token","token","token.servic","tokenservic","type","typescript","url","user","valu","verifi","void"],"/injectables/MirrorService.html":["angular/cor","api","authent","class","collect","constructor","constructor(priv","constructor(servic","creat","default","defin","delet","deletebyid","deletebyid(id","descript","export","file","get","getal","getbyid","getbyid(id","given","http","id","id).map","id).map(r","import","info","inject","interact","intern","match","method","mirror","mirror).map","mirrorservic","models/mirror","observ","param","paramet","privat","properti","public","rel","remot","request","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","string","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.put(this.api","type","updat","update(mirror","url","user","valu"],"/injectables/SmartMirrorModuleConfig.html":["angular/cor","api","apiurl","class","configr","configur","constructor","constructor(opt","constructor(priv","creat","defin","descript","export","file","given","http","import","info","inject","match","mirror","modul","module.opt","option","options:smartmirrormoduleopt","param","paramet","properti","request","result","return","smart","smartmirrormoduleconfig","smartmirrormoduleopt","sourc","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","string","this.options.apiurl","url","us"],"/injectables/SmartMirrorService.html":["401","add","angular","angular/cor","angular/http","api","argument","authent","basic","bearer","bodi","caller","catch(r","class","client","config","configur","constructor","constructor(config","constructor(priv","creat","defin","delet","delete(url","descript","each","enhanc","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","export","extend","file","get(url","handl","head","head(url","header","http","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","notifi","observ","observable.throw(errorrespons","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","public","put","put(url","re","remot","remov","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","smartmirrormoduleconfig","smartmirrorservic","sourc","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","store","string","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.sendrequest({method","this.tokenservice.invalid","this.tokenservice.token","token","token.servic","tokenservic","unauthor","url","us","utils/module.config"],"/injectables/StorageService.html":["angular/cor","applic","class","clear","crud","defin","descript","exist","export","file","get","getitem","getitem(key","given","import","index","info","inject","item","key","key(index","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","match","method","null","number","oper","otherwis","param","paramet","remov","removeitem","removeitem(key","result","retriev","return","servic","set","setitem","setitem(key","sourc","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","storag","storageservic","string","valu","void","whole","wrapper"],"/injectables/TicketService.html":["angular/cor","api","authent","authservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","descript","export","file","get","get(id","get(id:str","given","http","id","id).map(r","import","info","inject","interact","intern","map(r","match","method","mirror","models/mirror","models/ticket","new","number","observ","param","paramet","privat","properti","public","regist","register(numb","registr","rel","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","set","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","string","this.service.get(this.api","this.service.post(this.api","ticket","ticketservic","type","url","user","valu"],"/injectables/TokenService.html":["1","2","access","angular/cor","auth.token","authent","authenticatd","authenticationfailur","authservic","authupdatetyp","cemizm/smartmirror","class","console.log(\"authent","const","constructor","constructor(priv","constructor(storageservic","creat","defin","descript","enum","exampl","export","file","get","import","info","inject","invalid","jw","listen","localstorag","loginsucess","match","method","new","notif","observ","param","paramet","privat","properti","result","return","rxj","servic","set","share","sourc","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","storage.servic","storageservic","store","string","subject","subscrib","this.invalid","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","token","token(token","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","updat","user","void"],"/interfaces/CalendarSettings.html":["boolean","calendarset","citi","count","defin","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:94","src/models/widget.ts:99","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/interfaces/LoginRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","string","subsequ","token","type","user"],"/interfaces/LoginResponse.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:16","string","subsequ","token","type","user"],"/interfaces/MailSettings.html":["boolean","calendarset","citi","count","defin","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:75","src/models/widget.ts:80","src/models/widget.ts:85","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/interfaces/Mirror.html":["administr","array","belong","defin","descript","display","export","file","frontend","id","imag","import","info","interfac","match","mirror","name","oper","path","properti","result","sourc","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","string","type","us","user","widget"],"/interfaces/NewsSetting.html":["boolean","calendarset","citi","count","defin","descript","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:62","src/models/widget.ts:67","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/interfaces/RegisterRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","string","subsequ","token","type","user"],"/interfaces/SmartMirrorModuleOptions.html":["10.06.17","apiurl","apiurl:str","cem","creat","defin","descript","export","file","info","interfac","match","properti","result","smartmirrormoduleopt","sourc","src/utils/module.options.t","src/utils/module.options.ts:6","string","type"],"/interfaces/TaskSetting.html":["boolean","calendarset","citi","count","defin","descript","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:48","src/models/widget.ts:52","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/interfaces/Ticket.html":["09.06.17","cem","creat","defin","descript","export","file","id","info","interfac","match","mirror","mirrorid","number","properti","regist","request","result","sourc","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","string","ticket","type","us"],"/interfaces/User.html":["09.06.17","access","accesstoken","api","authent","cem","creat","defin","descript","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:6","src/models/user.ts:7","string","subsequ","token","type","user"],"/interfaces/WeatherSetting.html":["boolean","calendarset","citi","count","defin","descript","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:37","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/interfaces/Widget.html":["boolean","calendarset","citi","count","defin","display","email","enum","export","feed","feedurl","file","googl","import","info","insid","interfac","item","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:11","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","string","task","taskset","token","type","unread","url","weather","weatherset","widget","widgetsid","widgettyp"],"/miscellaneous.html":["0","1","2","3","4","5","auth.token","authenticationfailur","authupdatetyp","calend","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","default","enumer","function","inact","left","loginsucess","mail","match","miscellan","new","note","result","right","smartmirrormodule_opt","src/index.t","src/models/enums.t","src/services/token.service.t","tokenkey","undefin","valu","variabl","weather","widgetsid","widgettyp"],"/coverage.html":["1/2","1/3","1/4","100","11/11","2/2","25","3/3","33","4/4","5/5","50","6/6","7/7","authservic","calendarset","coverag","document","file","identifi","inject","interfac","loginrequest","loginrespons","mailset","match","mirror","mirrorservic","newsset","registerrequest","result","smartmirrormoduleconfig","smartmirrormoduleopt","smartmirrorservic","src/models/mirror.t","src/models/ticket.t","src/models/user.t","src/models/widget.t","src/services/auth.service.t","src/services/mirror.service.t","src/services/smartmirror.service.t","src/services/storage.service.t","src/services/ticket.service.t","src/services/token.service.t","src/utils/module.config.t","src/utils/module.options.t","statement","storageservic","taskset","ticket","ticketservic","tokenservic","type","user","weatherset","widget"]},"length":26},"tokenStore":{"root":{"0":{"9":{"docs":{},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}},"1":{"0":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.12727272727272726}}},"docs":{},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"1":{"1":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}},"docs":{}}},"3":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776}}},"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.05357142857142857}},"/":{"2":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.01818181818181818}}},"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.02727272727272727}}},"4":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}}},"2":{"5":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.05357142857142857}},"/":{"2":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}}},"3":{"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.02727272727272727}}},"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"/":{"3":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.03636363636363636}}},"docs":{}}},"4":{"0":{"1":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"/":{"4":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}}},"5":{"0":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.01818181818181818}}},"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"/":{"5":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}}},"6":{"docs":{},"/":{"6":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.045454545454545456}}},"docs":{}}},"7":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776}},"/":{"7":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}},"docs":{}}},"docs":{},"a":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.03669724770642202}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.037800687285223365},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.03125},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03608247422680412},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03529411764705882},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":5.027491408934708},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.044673539518900345},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.07582938388625593},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.039473684210526314},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}},"i":{"docs":{},"c":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}}},"d":{"docs":{},"i":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.032719836400818}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules.html":{"ref":"/modules.html","tf":0.1}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.01834862385321101}}}}}}}},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"i":{"docs":{},"z":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.010309278350515464},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.013392857142857142},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.058823529411764705},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015463917525773196},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.08333333333333333},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.027472527472527472}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}}}}}}}}}}}}}},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.014218009478672985}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"r":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882}}},"u":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.047058823529411764},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.03205128205128205},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.03125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.03125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.027210884353741496},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":10.00909090909091}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02577319587628866},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02197802197802198},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":5.019230769230769},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.034013605442176874},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016483516483516484}}}}}},"p":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02197802197802198}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}},"i":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01718213058419244},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.02044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.020618556701030927},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023696682464454975},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.03333333333333333},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.044444444444444446},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.026737967914438502}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013745704467353952}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017857142857142856},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"e":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.038461538461538464},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.03614457831325301},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.05504587155963303},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0375},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0375},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.034013605442176874},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.03208556149732621}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.04395604395604396},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.038461538461538464},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.04819277108433735},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.05263157894736842},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.03614457831325301},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0375},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.044444444444444446},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0375},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.04597701149425287},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.04081632653061224},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.03208556149732621}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01718213058419244},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.02564102564102564},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.04819277108433735},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.05263157894736842},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.06666666666666667},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.01875},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.04597701149425287},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}},"u":{"docs":{},"m":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}},"e":{"docs":{},"r":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.01834862385321101}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017857142857142856},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.013392857142857142}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}},"i":{"docs":{},"d":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.04830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.020618556701030927}}}}}},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.02564102564102564},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.024096385542168676},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.025},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}},"e":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.05112474437627812},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.08333333333333333},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.027472527472527472}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749}}}}},"s":{"docs":{},"h":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.02631578947368421},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0784313725490196},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.07692307692307693},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.030927835051546393},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.016359918200409},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03608247422680412},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023696682464454975},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}},"a":{"docs":{},"g":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/index.html":{"ref":"/index.html","tf":5},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.033816425120772944}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0392156862745098}}}}},"i":{"docs":{},"d":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":5.024054982817869},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":5.022321428571429},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":5.035294117647059},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":5.0184049079754605},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":5.0144927536231885},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":5.025773195876289},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":5.023696682464455},"/coverage.html":{"ref":"/coverage.html","tf":0.06363636363636363}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":5.044871794871795},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":5.0602409638554215},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":5.065789473684211},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":5.042168674698795},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":5.045871559633028},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":5.04375},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":5.055555555555555},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":5.076923076923077},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":5.04375},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":5.044444444444444},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":5.057471264367816},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":5.0476190476190474},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":5.037433155080214},"/coverage.html":{"ref":"/coverage.html","tf":0.11818181818181818}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017857142857142856},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}}}},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}}}}},"f":{"docs":{},"o":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023696682464454975}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}},"d":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.05357142857142857},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.030927835051546393},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}},"(":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.057971014492753624},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.03205128205128205},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.03125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.03125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.027210884353741496},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0392156862745098}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}},"n":{"docs":{},"k":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.010309278350515464}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}},"f":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.07729468599033816},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.03436426116838488}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":5.026315789473684},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":5.024096385542169},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/overview.html":{"ref":"/overview.html","tf":0.05555555555555555},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.02631578947368421},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.01834862385321101},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.022222222222222223},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.044444444444444446},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.01818181818181818}}}}},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}},"i":{"docs":{},"l":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.019230769230769232},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":5.018072289156627},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}},"x":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.038461538461538464},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.03614457831325301},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0375},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0375},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.027210884353741496},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508}}}}}}},"i":{"docs":{},"m":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.03205128205128205},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.03125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.03125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.027210884353741496},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508}}}}}},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013745704467353952},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.10714285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.058823529411764705},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.061855670103092786},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":5.1192660550458715},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.044444444444444446},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":5.026785714285714},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}}}}}},"i":{"docs":{},"d":{"docs":{"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.06666666666666667}}}}}}}},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":10.017857142857142}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05555555555555555},"/modules.html":{"ref":"/modules.html","tf":10.1},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":5.021978021978022},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}},"u":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}}}}}}},"d":{"5":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.02631578947368421},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.03067484662576687},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02197802197802198}}}}}}}},"p":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549}}}},"e":{"docs":{},"w":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013745704467353952},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.041237113402061855},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.019230769230769232},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.03614457831325301},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.039473684210526314},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0375},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.03333333333333333},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.01875},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.034482758620689655},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":5.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.018957345971563982}},"i":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}},"e":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03608247422680412},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.04487179487179487},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.04216867469879518},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.04375},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.04375},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.08888888888888889},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.034013605442176874},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0374331550802139}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.04819277108433735},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.05263157894736842},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.06666666666666667},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.06896551724137931},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.026737967914438502}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"u":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"/overview.html":{"ref":"/overview.html","tf":10.027777777777779}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.07058823529411765},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.07157464212678936}},"s":{"docs":{},":":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.03669724770642202}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.024054982817869417},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.04017857142857143},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.024539877300613498},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02577319587628866},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.037914691943127965}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.02564102564102564},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.024096385542168676},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.025},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.03205128205128205},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.03125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.026737967914438502}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.01718213058419244},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017857142857142856},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.024154589371980676},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015463917525773196},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}},"e":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.010309278350515464},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.017857142857142856},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.015463917525773196},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027491408934707903},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.07228915662650602},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.05263157894736842},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.06666666666666667},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.04597701149425287}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}},"h":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.01834862385321101}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.029411764705882353},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.054945054945054944}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.010309278350515464},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.028629856850715747}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.020618556701030927},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.03571428571428571},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.028629856850715747},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.020618556701030927}}}}}},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}},"i":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754}}}}}}},"r":{"docs":{},"e":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"/index.html":{"ref":"/index.html","tf":5}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/overview.html":{"ref":"/overview.html","tf":0.05555555555555555},"/modules.html":{"ref":"/modules.html","tf":0.2},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.02631578947368421},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.01834862385321101},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.022222222222222223},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.044444444444444446},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.01818181818181818}}}}},"e":{"docs":{},"t":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.027777777777777776},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.010224948875255624}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.041237113402061855},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.05357142857142857},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.044989775051124746},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.043478260869565216},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.030927835051546393},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02843601895734597}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}}},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.027491408934707903},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02577319587628866},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":5.022222222222222},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013745704467353952},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.03608247422680412}}}}}}},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.05725971370143149},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}},"u":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.024539877300613498}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045}}},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454}},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"x":{"docs":{},"j":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.020618556701030927},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.022321428571428572},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.02044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02577319587628866},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.01932367149758454},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.014218009478672985},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.03205128205128205},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0375},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0375},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.04081632653061224},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0427807486631016}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"/index.html":{"ref":"/index.html","tf":0.058823529411764705},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016483516483516484},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}},"o":{"docs":{},"w":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.013745704467353952},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.058823529411764705},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/overview.html":{"ref":"/overview.html","tf":0.16666666666666666},"/modules.html":{"ref":"/modules.html","tf":0.1},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":5.076923076923077}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.03296703296703297},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.03296703296703297},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":5.023529411764706},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.016483516483516484},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":5.076923076923077},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.03296703296703297},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":5.004089979550102},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.023696682464454975}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}}}}}}},"v":{"docs":{},"g":{"docs":{"/modules.html":{"ref":"/modules.html","tf":0.1}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"3":{"4":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}},"docs":{}},"4":{"8":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}},"docs":{}},"5":{"8":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}},"docs":{}},"7":{"6":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"2":{"2":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428}}},"docs":{}},"3":{"5":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}},"docs":{}},"4":{"4":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}},"docs":{}},"5":{"3":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}},"docs":{}},"6":{"2":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"1":{"1":{"3":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"9":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"3":{"5":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"4":{"2":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"9":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"5":{"6":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"6":{"3":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"7":{"0":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"7":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"8":{"7":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"1":{"6":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"2":{"5":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"3":{"4":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"4":{"2":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"5":{"1":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"2":{"4":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464}}},"docs":{}},"3":{"8":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}},"docs":{}},"4":{"7":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"3":{"9":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}},"docs":{}},"5":{"4":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}},"docs":{}},"6":{"2":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}},"docs":{}},"8":{"4":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"1":{"2":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}},"docs":{}},"2":{"6":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"6":{"docs":{"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877},"/coverage.html":{"ref":"/coverage.html","tf":0.05454545454545454}},"s":{"docs":{},":":{"1":{"1":{"docs":{"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}},"5":{"docs":{"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}},"9":{"docs":{"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}},"docs":{}},"2":{"3":{"docs":{"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}},"7":{"docs":{"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}},"docs":{}},"3":{"7":{"docs":{"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374}}},"docs":{}},"4":{"8":{"docs":{"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625}}},"docs":{}},"5":{"2":{"docs":{"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625}}},"docs":{}},"6":{"2":{"docs":{"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625}}},"7":{"docs":{"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.00625}}},"docs":{}},"7":{"5":{"docs":{"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169}}},"docs":{}},"8":{"0":{"docs":{"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169}}},"5":{"docs":{"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169}}},"docs":{}},"9":{"4":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641}}},"9":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641}}},"docs":{}},"docs":{}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/coverage.html":{"ref":"/coverage.html","tf":0.03636363636363636}},"s":{"docs":{},":":{"1":{"1":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338}}},"2":{"docs":{"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338}}},"6":{"docs":{"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105}}},"docs":{}},"2":{"0":{"docs":{"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"1":{"docs":{"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"2":{"docs":{"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"docs":{}},"6":{"docs":{"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}},"7":{"docs":{"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"1":{"7":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}},"docs":{}},"2":{"1":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}},"5":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}},"9":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}},"docs":{}},"3":{"3":{"docs":{"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.009174311926605505}}},"docs":{}},"docs":{}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},":":{"6":{"docs":{"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223}}},"7":{"docs":{"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":5.009661835748792},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.03317535545023697},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02843601895734597}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.020618556701030927},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.028629856850715747},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.06280193236714976},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.02577319587628866},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.018957345971563982},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.05128205128205128},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.14457831325301204},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.13157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.04819277108433735},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.11009174311926606},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.05},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.15555555555555556},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.07692307692307693},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.05},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.13333333333333333},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.13793103448275862},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.05442176870748299},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0427807486631016}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.019230769230769232},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.01875},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0374331550802139}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"@":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},".":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.014314928425357873}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.07216494845360824},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":5.088888888888889},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":5.020618556701031},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.024054982817869417},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.08530805687203792},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.02564102564102564},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.012048192771084338},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.024096385542168676},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.011111111111111112},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.025},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.011494252873563218},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099},"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.024054982817869417},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.012269938650306749},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":5.037914691943128},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.03571428571428571}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.014218009478672985},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.02564102564102564},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.024096385542168676},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.013157894736842105},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.025},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.03333333333333333},"/interfaces/SmartMirrorModuleOptions.html":{"ref":"/interfaces/SmartMirrorModuleOptions.html","tf":0.038461538461538464},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.025},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.044444444444444446},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":0.022988505747126436},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.053475935828877004},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.004739336492890996}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.019230769230769232},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.018072289156626505},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.01875},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0375},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.02040816326530612},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.016042780748663103}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":5.01875},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}},"u":{"docs":{},"s":{"docs":{"/index.html":{"ref":"/index.html","tf":0.0196078431372549},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.023529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.0081799591002045},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.03669724770642202},"/interfaces/Ticket.html":{"ref":"/interfaces/Ticket.html","tf":0.022222222222222223}},"a":{"docs":{},"g":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.02197802197802198}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}},"r":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.054982817869415807},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.026785714285714284},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.02843601895734597},"/interfaces/LoginRequest.html":{"ref":"/interfaces/LoginRequest.html","tf":0.1566265060240964},"/interfaces/LoginResponse.html":{"ref":"/interfaces/LoginResponse.html","tf":0.14473684210526316},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.045871559633027525},"/interfaces/RegisterRequest.html":{"ref":"/interfaces/RegisterRequest.html","tf":0.12222222222222222},"/interfaces/User.html":{"ref":"/interfaces/User.html","tf":5.160919540229885},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.002044989775051125}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428},"/injectables/SmartMirrorModuleConfig.html":{"ref":"/injectables/SmartMirrorModuleConfig.html","tf":0.03529411764705882},"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.028629856850715747},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.010309278350515464},"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.00641025641025641},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.006024096385542169},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.00625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.006802721088435374},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0053475935828877}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.022321428571428572},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.07109004739336493}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.008928571428571428}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"/injectables/SmartMirrorService.html":{"ref":"/injectables/SmartMirrorService.html","tf":0.00408997955010225}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.030120481927710843},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/MirrorService.html":{"ref":"/injectables/MirrorService.html","tf":0.004464285714285714},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.04830917874396135},"/injectables/TicketService.html":{"ref":"/injectables/TicketService.html","tf":0.005154639175257732},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.19642857142857142}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.006872852233676976}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"/injectables/AuthService.html":{"ref":"/injectables/AuthService.html","tf":0.003436426116838488},"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.028985507246376812},"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"a":{"docs":{},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"/index.html":{"ref":"/index.html","tf":0.00980392156862745},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.005494505494505495}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.027210884353741496},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":5.020408163265306},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0213903743315508},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.05128205128205128},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.04819277108433735},"/interfaces/Mirror.html":{"ref":"/interfaces/Mirror.html","tf":0.06422018348623854},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.05625},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.05625},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.061224489795918366},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":5.06951871657754},"/coverage.html":{"ref":"/coverage.html","tf":0.00909090909090909}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"/interfaces/CalendarSettings.html":{"ref":"/interfaces/CalendarSettings.html","tf":0.01282051282051282},"/interfaces/MailSettings.html":{"ref":"/interfaces/MailSettings.html","tf":0.012048192771084338},"/interfaces/NewsSetting.html":{"ref":"/interfaces/NewsSetting.html","tf":0.0125},"/interfaces/TaskSetting.html":{"ref":"/interfaces/TaskSetting.html","tf":0.0125},"/interfaces/WeatherSetting.html":{"ref":"/interfaces/WeatherSetting.html","tf":0.013605442176870748},"/interfaces/Widget.html":{"ref":"/interfaces/Widget.html","tf":0.0106951871657754},"/miscellaneous.html":{"ref":"/miscellaneous.html","tf":0.017857142857142856}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"/overview.html":{"ref":"/overview.html","tf":0.05555555555555555},"/modules/SmartMirrorModule.html":{"ref":"/modules/SmartMirrorModule.html","tf":0.01098901098901099}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.12077294685990338}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"/injectables/StorageService.html":{"ref":"/injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{"/injectables/TokenService.html":{"ref":"/injectables/TokenService.html","tf":0.009478672985781991}}}}},"length":1364},"corpusTokens":["0","09.06.17","1","1/2","1/3","1/4","10.06.17","100","11/11","13","2","2/2","25","3","3/3","33","4","4/4","401","5","5/5","50","6/6","7","7/7","access","accesstoken","ad","add","administr","angular","angular/common","angular/cor","angular/http","angular/ion","angular/platform","api","apiurl","apiurl:str","app.compon","appcompon","applic","appmodul","argument","array","auth","auth.token","authent","authenticatd","authenticationfailur","authservic","authupdatetyp","basic","basoglu","bearer","belong","bodi","boolean","bootstrap","brows","browser","browsermodul","calend","calendarset","caller","catch(r","cem","cemizm/smartmirror","citi","class","clear","client","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","collect","commonmodul","compon","config","configr","configur","console.log(\"authent","console.log(err","console.log(r","const","constructor","constructor(config","constructor(opt","constructor(priv","constructor(servic","constructor(storageservic","constructor(tokenservic","contain","count","coverag","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","crud","declar","default","defin","delet","delete(url","deletebyid","deletebyid(id","dep","depend","descript","detail","direct","display","document","each","email","enhanc","enum","enumer","err","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","exampl","exist","export","extend","feed","feedurl","file","forroot(opt","found","frontend","function","gener","get","get(id","get(id:str","get(url","getal","getbyid","getbyid(id","getitem","getitem(key","github","given","googl","handl","hash","head","head(url","header","here","http","httpmodul","https://sm","id","id).map","id).map(r","identifi","imag","import","inact","index","info","inject","injectiontoken","injectiontoken(\"smartmirrormodule_opt","insid","instal","interact","interfac","intern","invalid","item","jw","key","key(index","left","legend","librari","licens","link","listen","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","login","login(email","loginr","loginrequest","loginres.accesstoken","loginrespons","loginsucess","mail","mailset","map(r","match","maxcount","maxim","md5","md5password\").subscribe(r","method","mirror","mirror).map","mirrorid","mirrorservic","miscellan","mit","models/index","models/mirror","models/ticket","models/us","modul","module.opt","modulewithprovid","name","new","newsset","ngmodul","note","notif","notifi","npm","null","number","oauth","oauthtoken","observ","observable.throw(errorrespons","onc","oper","option","options(url","options:smartmirrormoduleopt","order","otherwis","out","overview","page","param","paramet","password","patch","patch(url","path","perform","pipe","posit","post","post(url","privat","profil","project","properti","provid","public","put","put(url","re","readm","reg","reg).map(r","regist","register(numb","register(reg","registerrequest","registr","rel","remot","remov","removeitem","removeitem(key","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","res.json","reset","respons","result","retriev","return","right","rss","run","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","save","savedocument","send","sendrequest","sendrequest(requestoptionsarg","servic","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/storage.servic","services/ticket.servic","services/token.servic","set","setitem","setitem(key","share","show","side","smart","smartmirror","smartmirror.servic","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","sourc","src/index.t","src/models/enums.t","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","src/models/user.ts:16","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","src/models/user.ts:6","src/models/user.ts:7","src/models/widget.t","src/models/widget.ts:11","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","src/models/widget.ts:37","src/models/widget.ts:48","src/models/widget.ts:52","src/models/widget.ts:62","src/models/widget.ts:67","src/models/widget.ts:75","src/models/widget.ts:80","src/models/widget.ts:85","src/models/widget.ts:94","src/models/widget.ts:99","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","src/services/mirror.service.t","src/services/mirror.service.ts:22","src/services/mirror.service.ts:35","src/services/mirror.service.ts:44","src/services/mirror.service.ts:53","src/services/mirror.service.ts:62","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","src/utils/module.options.t","src/utils/module.options.ts:6","statement","static","storag","storage.servic","storageservic","store","string","subject","subscrib","subsequ","support","svg","task","taskset","this.authservice.login(\"cem@basoglu.d","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.invalid","this.mirror","this.mirrorservice.getall().subscribe(mirror","this.options.apiurl","this.sendrequest({method","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.post(this.api","this.service.put(this.api","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.tokenservice.invalid","this.tokenservice.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","ticket","ticketservic","token","token(token","token.servic","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","unauthor","undefin","unread","updat","update(mirror","url","us","usag","usefactori","user","usevalu","utils/index","utils/module.config","utils/module.opt","valu","variabl","verifi","via","void","weather","weatherset","webapi.azurewebsites.net/api","whole","widget","widgetsid","widgettyp","wrapper","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"/index.html":{"url":"/index.html","title":"readme - index","body":"\n                   \nShared library of the smart mirror project\nContains all shared components, directives, pipes and services, used by the smart mirror project.\nInstallation\nTo install this library, run:\n$ npm install @cemizm/smartmirror-shared --saveDocumentation\nA generated documentation of this project can be found here:\nGitHub Pages\nUsage\nAfter the Installation of the library via npm, you can import it into your Angular/Ionic application by adding the SmartMirrorModule to the AppModule:\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {AppComponent} from \"./app.component\";\nimport {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Once the shared library is imported, you can use its components, directives, pipes and services in your Angular application:\nimport {MirrorService} from \"@cemizm/smartmirror-shared\";\n\n... \n\n  constructor(private mirrorService: MirrorService) {\n\n  }\n\n  getAll() {\n    this.mirrorService.getAll().subscribe(mirrors => {\n      this.mirrors = mirrors;\n    }, err => {\n      console.log(err);\n    });\n  }License\nMIT © Cem Basoglu\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/overview.html":{"url":"/overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        13 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules.html":{"url":"/modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    SmartMirrorModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/modules/SmartMirrorModule.html":{"url":"/modules/SmartMirrorModule.html","title":"module - SmartMirrorModule","body":"\n                   \n\n\n  Modules\n  SmartMirrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\ncluster_SmartMirrorModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\nSmartMirrorModule -->\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }->SmartMirrorModule\n\n\n\n\n\nSmartMirrorService\n\nSmartMirrorService\n\nSmartMirrorModule -->\n\nSmartMirrorService->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n            \n                Description\n            \n            \n                The shared Angular module for Smart Mirror project\n\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                SmartMirrorService\n                            \n                    \n                \n            \n        \n    \n    \n        import {NgModule, ModuleWithProviders, InjectionToken} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {MirrorService} from \"./services/mirror.service\";\nimport {StorageService} from \"./services/storage.service\";\nimport {TokenService} from \"./services/token.service\";\nimport {SmartMirrorModuleConfig} from \"./utils/module.config\";\nimport {SmartMirrorModuleOptions} from \"./utils/module.options\";\nimport {SmartMirrorService} from \"./services/smartmirror.service\";\nimport {AuthService} from \"./services/auth.service\";\nimport {TicketService} from \"./services/ticket.service\";\n\nexport * from './models/index';\nexport * from './services/index';\nexport * from './utils/index'\n\nexport const SMARTMIRRORMODULE_OPTIONS = new InjectionToken(\"SMARTMIRRORMODULE_OPTIONS\");\n\n/**\n * The shared Angular module for Smart Mirror project\n *\n * @example\n *\n * import {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n *\n * @NgModule({\n *   declarations: [\n *     AppComponent\n *   ],\n *   imports: [\n *     BrowserModule,\n *     SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n *\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpModule\n    ],\n    declarations: [],\n    providers: [\n        {\n            provide: SmartMirrorModuleConfig,\n            useFactory: createSmartMirrorModuleConfig,\n            deps: [\n                SMARTMIRRORMODULE_OPTIONS\n            ]\n        },\n        SmartMirrorService\n    ]\n})\nexport class SmartMirrorModule {\n    static forRoot(options: SmartMirrorModuleOptions): ModuleWithProviders {\n        return {\n            ngModule: SmartMirrorModule,\n            providers: [\n                {provide: SMARTMIRRORMODULE_OPTIONS, useValue: options},\n                StorageService,\n                TokenService,\n                AuthService,\n                MirrorService,\n                TicketService\n            ]\n        };\n    }\n}\n\nexport function createSmartMirrorModuleConfig(options: SmartMirrorModuleOptions): SmartMirrorModuleConfig {\n    return new SmartMirrorModuleConfig(options);\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/AuthService.html":{"url":"/injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthService class for authenticating and registering users on smart mirror api\nExample Authentication:\nimport {AuthService} from \"@cemizm/smartmirror-shared\";\n...\nlogin() {\n   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n     console.log(res);\n   }, err=> {\n     console.log(err);\n   })\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(tokenService: any, service: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected TokenService for storing authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        Verifies the authentication token and returns the linked user\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public login\n                                \n                            \n                            \n                                \n                                        \n                                    login(email: string, password: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:58\n                                        \n                                    \n            \n                            \n                                \n                                        Perform the login request and saves the authentication token in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                The Email of the user to login\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                The Password of the user to login\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(reg: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:76\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new User with the given registration details on the smart mirror api\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                reg\n                                                            \n                                                            \n                                                                The registration details of the new user to register.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /auth\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n                            \n                                \n                                    relative url for the authentication api\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {User, LoginResponse, RegisterRequest} from \"../models/user\";\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {TokenService} from \"./token.service\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * AuthService class for authenticating and registering users on smart mirror api\n *\n * Example Authentication:\n * ```typescript\n * import {AuthService} from \"@cemizm/smartmirror-shared\";\n * ...\n * login() {\n *   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n *     console.log(res);\n *   }, err=> {\n *     console.log(err);\n *   })\n * }\n * ```\n */\n@Injectable()\nexport class AuthService {\n    /**\n     * relative url for the authentication api\n     * @type {string}\n     */\n    private api = \"/auth\";\n\n    /**\n     * Creates the AuthService\n     * @param tokenService Injected TokenService for storing authentication token\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private tokenService: TokenService, private service: SmartMirrorService) {\n    }\n\n    /**\n     * Verifies the authentication token and returns the linked user\n     * @return {Observable} The user linked with the authentication token.\n     */\n    public get(): Observable {\n        return this.service.get(this.api).map(res => res.json());\n    }\n\n    /**\n     * Perform the login request and saves the authentication token in the localStorage\n     * @param email The Email of the user to login\n     * @param password The Password of the user to login\n     * @return {Observable} Login response with the user profile\n     */\n    public login(email: string, password: string): Observable {\n        return this.service.post(this.api + '/', {\n            user: email,\n            password: password\n        }).map(res => {\n            let loginRes: LoginResponse = res.json();\n\n            this.tokenService.Token = loginRes.accessToken;\n\n            return loginRes;\n        });\n    }\n\n    /**\n     * Registers a new User with the given registration details on the smart mirror api\n     * @param reg The registration details of the new user to register.\n     * @return {Observable} void\n     */\n    public register(reg: RegisterRequest): Observable {\n        return this.service.post(this.api + '/register', reg).map(res => {\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/MirrorService.html":{"url":"/injectables/MirrorService.html","title":"injectable - MirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/mirror.service.ts\n        \n\n            \n                Description\n            \n            \n                MirrorService class for interacting with the remote mirror collection.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the MirrorService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public getAll\n                                \n                            \n                            \n                                \n                                        \n                                    getAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Gets all Mirrors for authenticated User\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getById\n                                \n                            \n                            \n                                \n                                        \n                                    getById(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:44\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the mirror with the given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to request\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public update\n                                \n                            \n                            \n                                \n                                        \n                                    update(mirror: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:53\n                                        \n                                    \n            \n                            \n                                \n                                        Updates the given mirror of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mirror\n                                                            \n                                                            \n                                                                The mirror to update\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public deleteById\n                                \n                            \n                            \n                                \n                                        \n                                    deleteById(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Deletes the mirror with the given id of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The mirror id to delete\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /mirrors\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:22\n                                        \n                                    \n                            \n                                \n                                    relative url to the mirrors api\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Mirror} from '../models/mirror';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport {SmartMirrorService} from \"./smartmirror.service\";\n\n/**\n * MirrorService class for interacting with the remote mirror collection.\n */\n@Injectable()\nexport class MirrorService  {\n    /**\n     * relative url to the mirrors api\n     * @type {string}\n     */\n    private api = '/mirrors';\n\n    /**\n     * Creates the MirrorService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets all Mirrors for authenticated User\n     * @return {Observable}\n     */\n    public getAll(): Observable> {\n        return this.service.get(this.api).map(res => >res.json());\n    }\n\n    /**\n     * Gets the mirror with the given id\n     * @param id The id of the mirror to request\n     * @return {Observable}\n     */\n    public getById(id: string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Updates the given mirror of the authenticated user\n     * @param mirror The mirror to update\n     * @return {Observable}\n     */\n    public update(mirror: Mirror): Observable {\n        return this.service.put(this.api, mirror).map(()=>{});\n    }\n\n    /**\n     * Deletes the mirror with the given id of the authenticated user\n     * @param id The mirror id to delete\n     * @return {Observable}\n     */\n    public deleteById(id: string): Observable {\n        return this.service.delete(this.api + '/' + id).map(()=>{});\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/SmartMirrorModuleConfig.html":{"url":"/injectables/SmartMirrorModuleConfig.html","title":"injectable - SmartMirrorModuleConfig","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorModuleConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration class for the smart mirror module\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        creates the configration class with the given options\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                The options to use for configuration\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     ApiUrl\n                                \n                            \n                            \n                                \n                                    ApiUrl:     string\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:26\n                                        \n                                    \n                            \n                                \n                                    The smart mirror api url for the http requests\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {SmartMirrorModuleOptions} from \"./module.options\";\n\n/**\n * Configuration class for the smart mirror module\n */\n@Injectable()\nexport class SmartMirrorModuleConfig {\n\n    /**\n     * creates the configration class with the given options\n     * @param options The options to use for configuration\n     */\n    constructor(private options:SmartMirrorModuleOptions){\n\n    }\n\n    /**\n     * The smart mirror api url for the http requests\n     * @return {string} The Smart Mirror Api url\n     */\n    get ApiUrl() : string{\n        return this.options.apiUrl;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/SmartMirrorService.html":{"url":"/injectables/SmartMirrorService.html","title":"injectable - SmartMirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/smartmirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: any, tokenService: any, http: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(url: string, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public post\n                                \n                            \n                            \n                                \n                                        \n                                    post(url: string, body: any, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public put\n                                \n                            \n                            \n                                \n                                        \n                                    put(url: string, body: any, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:49\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public delete\n                                \n                            \n                            \n                                \n                                        \n                                    delete(url: string, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public patch\n                                \n                            \n                            \n                                \n                                        \n                                    patch(url: string, body: any, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public head\n                                \n                            \n                            \n                                \n                                        \n                                    head(url: string, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:70\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public options\n                                \n                            \n                            \n                                \n                                        \n                                    options(url: string, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                    sendRequest(requestOptionsArgs: any, options: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:87\n                                        \n                                    \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private errorHandler\n                                \n                            \n                            \n                                \n                                        \n                                    errorHandler(errorResponse: any)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:113\n                                        \n                                    \n            \n                            \n                                \n                                        Handles authentication errors and returns errors to the caller\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                errorResponse\n                                                            \n                                                            \n                                                                The errorResponse to handle\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport {ErrorObservable} from \"rxjs/observable/ErrorObservable\";\n\nimport {TokenService} from \"./token.service\";\nimport {SmartMirrorModuleConfig} from \"../utils/module.config\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class SmartMirrorService {\n\n    /**\n     * creates the internal smart mirror api service\n     * @param config Injected configuration for remote service\n     * @param tokenService Injected token service for invalidating the authentication token\n     * @param http Injected angular http client used for the remote requests\n     */\n    constructor(private config: SmartMirrorModuleConfig,\n                private tokenService: TokenService,\n                private http: Http) {\n    }\n\n    /**\n     * Performs a request with `get` http method.\n     */\n    public get(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `post` http method.\n     */\n    public post(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `put` http method.\n     */\n    public put(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `delete` http method.\n     */\n    public delete(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `patch` http method.\n     */\n    public patch(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `head` http method.\n     */\n    public head(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `options` http method.\n     */\n    public options(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, options);\n    }\n\n    /**\n     * extends the request options with stored authentication token and sends the request to the remove service\n     * @param requestOptionsArgs The basic request options arguments\n     * @param options Enhanced request options arguments\n     * @return {Observable} Observable to listen on http response\n     */\n    private sendRequest(requestOptionsArgs: RequestOptionsArgs, options?: RequestOptionsArgs): Observable {\n\n        let requestOptions = new RequestOptions(requestOptionsArgs);\n\n        requestOptions.url = this.config.ApiUrl + requestOptions.url;\n\n        if (!requestOptions.headers)\n            requestOptions.headers = new Headers();\n\n\n\n        if (this.tokenService.Token)\n            requestOptions.headers.set(\"Authorization\", \"Bearer \" + this.tokenService.Token);\n\n        let request = new Request(requestOptions);\n\n        return this.http.request(request, options)\n            .map(res => res)\n            .catch(res => this.errorHandler(res));\n    }\n\n    /**\n     * Handles authentication errors and returns errors to the caller\n     * @param errorResponse The errorResponse to handle\n     * @return {ErrorObservable} The ErrorObservable to notify the caller\n     */\n    private errorHandler(errorResponse: Response): Observable | ErrorObservable {\n\n        if (errorResponse.status === 401) {\n            this.tokenService.invalidate();\n        }\n\n        return Observable.throw(errorResponse);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/StorageService.html":{"url":"/injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper service for crud operations on the local Storage\n\n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n                            \n                                \n            clear()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Clears the whole localStorage for the application\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                        Gets an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key to get the value from the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     key\n                                \n                            \n                            \n                                \n            key(index: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the literal key on the given index in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                index\n                                                            \n                                                            \n                                                                The index in the localStorage to retrieve the literal key for\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Removes an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to remove\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: string, value: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:51\n                                        \n                                    \n            \n                            \n                                \n                                        Sets an item for the given key in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to set\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                The value of the item to in the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\n\n/**\n * Wrapper service for crud operations on the local Storage\n */\n@Injectable()\nexport class StorageService {\n\n    /**\n     * Clears the whole localStorage for the application\n     */\n    clear(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * Gets an item with the given key from the localStorage\n     * @param key The key to get the value from the localStorage\n     * @return {any} The value for the given key if exists, otherwise null\n     */\n    getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Gets the literal key on the given index in the localStorage\n     * @param index The index in the localStorage to retrieve the literal key for\n     * @return {string} The literal key for the given index\n     */\n    key(index: number): string {\n        return localStorage.key(index);\n    }\n\n    /**\n     * Removes an item with the given key from the localStorage\n     * @param key The key of the item to remove\n     */\n    removeItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    /**\n     * Sets an item for the given key in the localStorage\n     * @param key The key of the item to set\n     * @param value The value of the item to in the localStorage\n     */\n    setItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/TicketService.html":{"url":"/injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ticket.service.ts\n        \n\n            \n                Description\n            \n            \n                TicketService class for registration of new mirrors\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(id: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        Gets a registration ticket for a new mirror with given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to create a new registration ticket\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(number: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:47\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new mirror with the given ticket number for the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                number\n                                                            \n                                                            \n                                                                The ticket number of the mirror to register with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tickets\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n                            \n                                \n                                    relative url to the tickets api\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {Mirror} from \"../models/mirror\";\nimport {Ticket} from \"../models/ticket\";\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n/**\n * TicketService class for registration of new mirrors\n */\n@Injectable()\nexport class TicketService  {\n    /**\n     * relative url to the tickets api\n     * @type {string}\n     */\n    private api = '/tickets';\n\n    /**\n     * Creates the AuthService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets a registration ticket for a new mirror with given id\n     * @param id The id of the mirror to create a new registration ticket\n     * @return {Observable} ticket for registration\n     */\n    public get(id:string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Registers a new mirror with the given ticket number for the authenticated user\n     * @param number The ticket number of the mirror to register with\n     * @return {Observable} the created mirror with default settings\n     */\n    public register(number: string): Observable {\n        return this.service.post(this.api + '/' + number, {}).map(res => res.json());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/injectables/TokenService.html":{"url":"/injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\nExample authentication notifications:\nimport {TokenService} from \"@cemizm/smartmirror-shared\";\n\n...\n\nconstructor(private tokenService: TokenService) {\n   tokenService.Updates.subscribe(type => {\n     console.log(\"Authentication updates: \" + type);\n   });\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storageService: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                storageService\n                                                            \n                                                            \n                                                                Injected StorageService for storing authentication token\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     invalidate\n                                \n                            \n                            \n                                \n            invalidate()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:84\n                                        \n                                    \n            \n                            \n                                \n                                        Invalidates the stored token\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     Token\n                                \n                            \n                            \n                                \n                                    Token:     string\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    Gets the Token of the authenticated user\n            Sets the token of the authenticated user\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updates\n                                \n                            \n                            \n                                \n                                    updates:     any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n                            \n                                \n                                    Observable subject for authentication updates\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Updates\n                                \n                            \n                            \n                                \n                                    Updates:     any\n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:54\n                                        \n                                    \n                            \n                                \n                                    Observable to listen on authentication updates\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {StorageService} from \"./storage.service\";\nimport {Subject, Observable} from \"rxjs\";\n\nconst tokenKey = 'auth.token';\n\nexport enum AuthUpdateType {\n    LoginSucess = 1,\n    AuthenticationFailure = 2,\n}\n\n/**\n * Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\n *\n * Example authentication notifications:\n * ```typescript\n * import {TokenService} from \"@cemizm/smartmirror-shared\";\n *\n * ...\n *\n * constructor(private tokenService: TokenService) {\n *   tokenService.Updates.subscribe(type => {\n *     console.log(\"Authentication updates: \" + type);\n *   });\n * }\n * ```\n */\n@Injectable()\nexport class TokenService {\n\n    /**\n     * Observable subject for authentication updates\n     * @type {Subject}\n     */\n    private updates = new Subject();\n\n\n    /**\n     * Creates the AuthService\n     * @param storageService Injected StorageService for storing authentication token\n     */\n    constructor(private storageService: StorageService) {\n\n    }\n\n    /**\n     * Observable to listen on authentication updates\n     * @return {Observable} The observable to subscribe authentication updates\n     */\n    get Updates(): Observable {\n        return this.updates;\n    }\n\n    /**\n     * Gets the Token of the authenticated user\n     * @return {string} Token of the authenticatd user\n     */\n    get Token(): string {\n        return this.storageService.getItem(tokenKey);\n    }\n\n    /**\n     * Sets the token of the authenticated user\n     * @param token The Token of the authenticated user\n     */\n    set Token(token: string) {\n        if (!token) {\n            this.invalidate();\n            return;\n        }\n\n        this.updates.next(AuthUpdateType.LoginSucess);\n\n        this.storageService.setItem(tokenKey, token);\n    }\n\n    /**\n     * Invalidates the stored token\n     */\n    invalidate(): void {\n        if (this.Token) {\n            this.updates.next(AuthUpdateType.AuthenticationFailure);\n        }\n\n        this.storageService.removeItem(tokenKey);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/CalendarSettings.html":{"url":"/interfaces/CalendarSettings.html","title":"interface - CalendarSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:94\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:99\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/LoginRequest.html":{"url":"/interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/LoginResponse.html":{"url":"/interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:16\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/MailSettings.html":{"url":"/interfaces/MailSettings.html","title":"interface - MailSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MailSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:75\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        unread\n                                    \n                                \n                                \n                                    \n                                        unread:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:80\n                                        \n                                    \n\n                            \n                                \n                                    show only unread email\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/Mirror.html":{"url":"/interfaces/Mirror.html","title":"interface - Mirror","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Mirror\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/mirror.ts\n        \n\n            \n                Description\n            \n            \n                The Mirror interface\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    The Id of the Mirror\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    The Path to the Image used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    The Name of the Mirror used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    The User to which the Mirror belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        widgets\n                                    \n                                \n                                \n                                    \n                                        widgets:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:33\n                                        \n                                    \n\n                            \n                                \n                                    The Widgets to Display in the Mirror frontend\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Widget} from './widget';\n\n/**\n * The Mirror interface\n *\n * @interface Mirror\n */\nexport interface Mirror {\n\n    /**\n     * The Id of the Mirror\n     */\n    id: string;\n    /**\n     * The User to which the Mirror belongs to\n     */\n    user: string;\n    /**\n     * The Name of the Mirror used to display on administration operations.\n     */\n    name: string;\n    /**\n     * The Path to the Image used to display on administration operations.\n     */\n    image: string;\n    /**\n     * The Widgets to Display in the Mirror frontend\n     */\n    widgets: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/NewsSetting.html":{"url":"/interfaces/NewsSetting.html","title":"interface - NewsSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NewsSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the News Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        feedUrl\n                                    \n                                \n                                \n                                    \n                                        feedUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:62\n                                        \n                                    \n\n                            \n                                \n                                    Url of the RSS News Feed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:67\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of news items to display\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/RegisterRequest.html":{"url":"/interfaces/RegisterRequest.html","title":"interface - RegisterRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:20\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:22\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/SmartMirrorModuleOptions.html":{"url":"/interfaces/SmartMirrorModuleOptions.html","title":"interface - SmartMirrorModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SmartMirrorModuleOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.options.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 10.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/module.options.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface SmartMirrorModuleOptions {\n    apiUrl:string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/TaskSetting.html":{"url":"/interfaces/TaskSetting.html","title":"interface - TaskSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the Task Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:48\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of task items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:52\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google tasks\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/Ticket.html":{"url":"/interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Ticket\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ticket.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        mirrorId\n                                    \n                                \n                                \n                                    \n                                        mirrorId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface Ticket {\n    number: string;         // The Ticket number used to register a mirror\n    mirrorId: string;       // The Id of the Mirror which has requested the ticket\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/User.html":{"url":"/interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/WeatherSetting.html":{"url":"/interfaces/WeatherSetting.html","title":"interface - WeatherSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Settings of the Weather Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    The City for Weather retrieval\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/interfaces/Widget.html":{"url":"/interfaces/Widget.html","title":"interface - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Widget\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Name of the widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    The Order Position inside the Mirror Side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        setting\n                                    \n                                \n                                \n                                    \n                                        setting:     WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Settings of the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        side\n                                    \n                                \n                                \n                                    \n                                        side:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    The Side of the Mirror to Display the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    Type of the Widget\n\n                                \n                            \n                        \n                    \n            \n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n    type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/miscellaneous.html":{"url":"/miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    Variables\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 SMARTMIRRORMODULE_OPTIONS\n                            \n                        \n                        \n                            \n                                SMARTMIRRORMODULE_OPTIONS:     \n        \n                            \n                        \n                    \n                \n        \n        src/services/token.service.ts\n        \n                    \n                    \n                        \n                            \n                                 tokenKey\n                            \n                        \n                        \n                            \n                                tokenKey:     \n        \n                            \n                        \n                            \n                                \n                                    Default value : auth.token\n                                \n                            \n                    \n                \n        \n\n    Functions\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 createSmartMirrorModuleConfig\n                            \n                        \n                        \n                            \n        createSmartMirrorModuleConfig(options: undefined)\n                            \n                        \n        \n        \n        \n                    \n                \n        \n\n    Enumerations\n        src/models/enums.ts\n        \n                \n                    WidgetType\n                \n                \n                    \n                                \n                                    \n                                        Weather\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Calender\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                                \n                                    \n                                        News\n                                    \n                                \n                                \n                                    \n                                        Value: 3\n                                    \n                                \n                                \n                                    \n                                        Mails\n                                    \n                                \n                                \n                                    \n                                        Value: 4\n                                    \n                                \n                                \n                                    \n                                        Notes\n                                    \n                                \n                                \n                                    \n                                        Value: 5\n                                    \n                                \n                    \n                \n                \n                    WidgetSide\n                \n                \n                    \n                                \n                                    \n                                        Inactive\n                                    \n                                \n                                \n                                    \n                                        Value: 0\n                                    \n                                \n                                \n                                    \n                                        Left\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Right\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n        src/services/token.service.ts\n        \n                \n                    AuthUpdateType\n                \n                \n                    \n                                \n                                    \n                                        LoginSucess\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        AuthenticationFailure\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"/coverage.html":{"url":"/coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/models/mirror.ts\n            \n            \n                interface\n            \n            \n                Mirror\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/models/ticket.ts\n            \n            \n                interface\n            \n            \n                Ticket\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginRequest\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginResponse\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                RegisterRequest\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                CalendarSettings\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                MailSettings\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                NewsSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                TaskSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                WeatherSetting\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                Widget\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/mirror.service.ts\n            \n            \n                injectable\n            \n            \n                MirrorService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/services/smartmirror.service.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/ticket.service.ts\n            \n            \n                injectable\n            \n            \n                TicketService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/services/token.service.ts\n            \n            \n                injectable\n            \n            \n                TokenService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/utils/module.config.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorModuleConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/utils/module.options.ts\n            \n            \n                interface\n            \n            \n                SmartMirrorModuleOptions\n            \n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
