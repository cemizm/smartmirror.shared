var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["ad","angular","angular/cor","angular/ion","angular/platform","app.compon","appcompon","applic","appmodul","basoglu","bootstrap","browser","browsermodul","cem","cemizm/smartmirror","class","compon","console.log(err","constructor(priv","contain","declar","direct","document","err","export","found","gener","getal","github","here","https://sm","import","index","instal","librari","licens","match","mirror","mirrorservic","mit","ngmodul","npm","onc","page","pipe","project","provid","readm","result","run","savedocument","servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","this.mirror","this.mirrorservice.getall().subscribe(mirror","us","usag","via","webapi.azurewebsites.net/api"],"overview.html":["1","14","41","bootstrap","cluster_smartmirrormodul","cluster_smartmirrormodule_import","commonmodul","declar","depend","export","httpmodul","inject","interfac","legend","match","modul","out","overview","provid","reset","result","smartmirrormodul","zoom"],"modules.html":["brows","browser","match","modul","result","smartmirrormodul","support","svg"],"modules/SmartMirrorModule.html":["angular","angular/common","angular/cor","angular/http","appcompon","appmodul","authservic","baseservic","bootstrap","browsermodul","calendar","calendarlistservic","cemizm/smartmirror","class","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","commonmodul","const","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","declar","dep","depend","descript","eventsservic","exampl","export","file","forroot(opt","function","g","gmail","gsuite/calendar/calendar","gsuite/calendar/events.servic","gsuite/index","gsuite/mail/messages.servic","gsuite/shared/base.servic","gsuite/tasks/task.servic","gsuite/tasks/tasklist.servic","httpmodul","https://sm","import","info","injectiontoken","injectiontoken(\"smartmirrormodule_opt","legend","list.servic","match","messagesservic","mirror","mirrorservic","models/index","modul","modulewithprovid","new","ngmodul","option","out","project","provid","reset","result","return","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/socket.servic","services/storage.servic","services/ticket.servic","services/token.servic","share","smart","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","socketservic","sourc","src/index.t","static","storageservic","stuff","suit","task","tasklistservic","taskservic","ticketservic","tokenservic","usefactori","usevalu","utils/index","utils/module.config","utils/module.opt","webapi.azurewebsites.net/api","zoom"],"injectables/AuthService.html":["angular/cor","api","auth","authent","authservic","cemizm/smartmirror","class","console.log(err","console.log(r","constructor","constructor(priv","constructor(tokenservic","creat","default","defin","descript","detail","email","err","exampl","export","file","given","http","import","info","inject","interact","intern","link","localstorag","login","login(email","loginr","loginres.accesstoken","loginrespons","map(r","match","md5password\").subscribe(r","method","mirror","models/us","new","observ","param","paramet","password","perform","privat","profil","properti","public","reg","reg).map(r","regist","register(reg","registerrequest","registr","rel","request","res.json","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","save","servic","share","smart","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","store","string","this.authservice.login(\"cem@basoglu.d","this.service.get(this.api).map(r","this.service.post(this.api","this.tokenservice.token","token","token.servic","tokenservic","type","typescript","url","user","valu","verifi","void"],"injectables/BaseService.html":["add","angular","angular/cor","angular/http","api","argument","authent","baseservic","basic","bearer","bodi","class","client","config","configur","const","constructor","constructor(http","constructor(priv","creat","default","defin","delet","delete(url","descript","each","enhanc","export","extend","file","get(url","handl","head","head(url","header","http","https://www.googleapis.com","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","observ","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","properti","public","put","put(url","re","remot","remov","request","request(object.assign(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set('author","requestoptions.url","requestoptionsarg","respons","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","sourc","src/gsuite/shared/base.service.t","src/gsuite/shared/base.service.ts:13","src/gsuite/shared/base.service.ts:27","src/gsuite/shared/base.service.ts:34","src/gsuite/shared/base.service.ts:41","src/gsuite/shared/base.service.ts:48","src/gsuite/shared/base.service.ts:55","src/gsuite/shared/base.service.ts:62","src/gsuite/shared/base.service.ts:69","src/gsuite/shared/base.service.ts:79","store","string","this.api","this.http.request(request","this.sendrequest({method","token","tokenservic","unauthor","url","us","valu","void"],"injectables/CalendarListService.html":["100","410","accept","access","acl","allow","alway","angular/cor","api","authent","authtoken","baseservic","boolean","calendar","calendar/v3/users/me/calendarlist","calendarlist","calendarlistqueryopt","calendarlistservic","chang","class","clear","client","code","consist","constructor","constructor(priv","constructor(servic","contain","control","creat","default","defin","delet","ensur","entri","event","expir","export","fals","field","file","free/busi","freebusyread","full","gone","googl","hidden","http","import","includ","info","inform","inject","interact","interfac","intern","last","list","list(authtoken","list.model","list.service.t","list.service.ts:62","list.service.ts:77","make","map(r","match","maximum","maxresult","method","minaccessrol","minimum","modifi","nextsynctoken","number","observ","obtain","on","option","owner","page","pagetoken","param","paramet","perform","previou","privat","properti","public","queri","read","reader","rel","request","res.item","res.json","respond","respons","responsetyp","restrict","result","return","role","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","server","servic","set","shared/base.servic","shared/respons","show","showdelet","showhidden","sourc","specifi","src/gsuite/calendar/calendar","state","storag","string","such","synchron","synctoken","task","tasklist","this.service.get(this.api","togeth","token","type","type.model","url","user","user'","valu","void","whether","without","won't","writer"],"injectables/EventsService.html":["03t10:00:00","03t10:00:00z","06","07:00","2011","250","2500","absenc","accept","access","address","alway","alwaysincludeemail","angular/cor","api","ascend","attende","authent","authtoken","avail","baseservic","boolean","both","bound","calendar","calendar/v3/calendar","calendarlist.list","call","cancel","chang","class","client","constraint","constructor","constructor(priv","constructor(servic","contain","creat","creator","current","date/tim","default","defin","delet","discourag","e.g","email","end","entri","equal","even","event","event'","event.model","eventsqueryopt","eventsservic","except","exclus","expand","export","extend","fals","field","file","filter","find","format","free","gener","given","googl","handl","hidden","http","i.","icalendar","icaluid","id","identifi","ignor","import","includ","inclus","info","inject","instanc","interact","interfac","intern","invit","keyword","larger","last","list","list(authtoken","log","lower","make","mandatori","map(r","match","maxattende","maximum","maxresult","mention","method","millisecond","modif","more","multipl","never","nextsynctoken","non","number","observ","obtain","offset","on","option","order","orderbi","organ","page","pagetoken","param","paramet","particip","place","previou","primari","privat","privateextendedproperti","properti","propertyname=valu","provid","public","q","queri","real","recur","regardless","rel","repeat","request","res.item","res.json","respons","responsetyp","result","retriev","return","rfc3339","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","search","servic","share","shared/base.servic","shared/respons","sharedextendedproperti","showdelet","showhiddeninvit","singl","singleev","size","sourc","specifi","src/gsuite/calendar/events.service.t","src/gsuite/calendar/events.service.ts:116","src/gsuite/calendar/events.service.ts:133","stabl","start","starttim","statu","still","string","synctoken","term","text","themselv","this.service.get(this.api","time","timemax","timemin","timestamp","timezon","token","true","type","type.model","underli","unspecifi","updat","updatedmin","upper","url","us","user","valu","void","want","whether","work","zone"],"injectables/MessagesService.html":["accept","access","address","angular/cor","api","array","authent","authtoken","base64url","baseservic","bodi","boolean","box","class","constructor","constructor(priv","constructor(servic","content","creat","data","default","defin","email","encod","estim","exampl","export","fals","field","file","format","from:someuser@example.com","full","get","get(authtoken","given","gmail","gmail.metadata","gmail/v1/us","googl","header","http","id","import","includ","includespamtrash","indic","info","inject","interact","interfac","intern","is:unread","label","labelid","list","list(authtoken","mailbox","map(r","match","maximum","maxresult","messag","message.model","messagelistqueryopt","messagequeryopt","messageslistrespons","messagesservic","metadata","metadatahead","method","minim","next","nextpagetoken","number","observ","option","page","pagetoken","param","paramet","pars","payload","privat","properti","public","q","queri","raw","rel","res.json","res.messag","result","resultsizeestim","retriev","return","rfc822msgid","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","same","scope","search","servic","shared/base.servic","sourc","spam","special","specif","specifi","src/gsuite/mail/messages.service.t","src/gsuite/mail/messages.service.ts:108","src/gsuite/mail/messages.service.ts:78","src/gsuite/mail/messages.service.ts:94","string","support","tasklist","this.service.get(this.api","token","total","trash","type","url","us","user","user'","userid","valu","void"],"injectables/MirrorService.html":["angular/cor","api","authent","class","collect","constructor","constructor(priv","constructor(servic","control","controlrequest","creat","default","defin","delet","deletebyid","deletebyid(id","descript","export","fals","file","get","getal","getbyid","getbyid(id","given","http","id","id).map","id).map(r","import","info","inject","interact","intern","listen","match","method","mirror","mirror).map","mirrorservic","models/control","models/mirror","observ","param","paramet","privat","properti","public","rel","remot","request","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","set","smartmirror","smartmirror.servic","smartmirrorservic","socket","socket.servic","socketservic","sourc","src/services/mirror.service.t","src/services/mirror.service.ts:23","src/services/mirror.service.ts:25","src/services/mirror.service.ts:39","src/services/mirror.service.ts:52","src/services/mirror.service.ts:65","src/services/mirror.service.ts:74","src/services/mirror.service.ts:83","src/services/mirror.service.ts:93","string","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.put(this.api","this.socket.connect(id","this.socket.watch(\"act","this.socket.watch(\"upd","this.watch","true","type","updat","update(mirror","url","user","valu","void","watch","watchcontrolrequest","watchcontrolrequest(id","watchupd","watchupdates(id"],"injectables/SmartMirrorModuleConfig.html":["angular/cor","api","apiurl","class","configr","configur","constructor","constructor(opt","constructor(priv","creat","defin","descript","export","file","given","http","import","info","inject","match","mirror","modul","module.opt","option","param","paramet","properti","realtim","request","result","return","rturl","servic","smart","smartmirrormoduleconfig","smartmirrormoduleopt","sourc","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","src/utils/module.config.ts:34","string","this.options.apiurl","this.options.rturl","type","url","us","void"],"injectables/SmartMirrorService.html":["401","add","angular","angular/cor","angular/http","api","argument","authent","basic","bearer","bodi","caller","catch(r","class","client","config","configur","constructor","constructor(config","constructor(priv","creat","defin","delet","delete(url","descript","each","enhanc","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","export","extend","file","get(url","handl","head","head(url","header","http","import","info","inject","intern","invalid","listen","map(r","match","method","mirror","modul","new","notifi","observ","observable.throw(errorrespons","option","options(url","param","paramet","patch","patch(url","perform","post","post(url","privat","public","put","put(url","re","remot","remov","request","request(requestopt","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.url","requestoptionsarg","respons","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observable/errorobserv","send","sendrequest","sendrequest(requestoptionsarg","servic","smart","smartmirrormoduleconfig","smartmirrorservic","sourc","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","store","string","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.sendrequest({method","this.tokenservice.invalid","this.tokenservice.token","token","token.servic","tokenservic","unauthor","url","us","utils/module.config","void"],"injectables/SocketService.html":["angular/cor","cfg","class","client","collect","config","connect","connect(mirrorid","constructor","constructor(config","constructor(priv","creat","data","defin","descript","export","file","given","id","import","info","inject","interact","io","io(this.config.rturl","match","messag","method","mirror","mirrorid","mirrorservic","new","null","obj","observ","observable(observ","observer.next(data","option","param","paramet","privat","properti","public","queri","remot","result","return","rxj","send","send(messag","servic","smartmirrormoduleconfig","socket","socket.io","socketservic","sourc","src/services/socket.service.t","src/services/socket.service.ts:16","src/services/socket.service.ts:28","src/services/socket.service.ts:40","src/services/socket.service.ts:56","string","subscrib","t","this.socket","this.socket.disconnect","this.socket.emit(messag","this.socket.on(messag","type","utils/module.config","var","void","watch","watch(messag"],"injectables/StorageService.html":["angular/cor","applic","class","clear","crud","defin","descript","exist","export","file","get","getitem","getitem(key","given","import","index","info","inject","item","key","key(index","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","match","method","null","number","oper","otherwis","param","paramet","remov","removeitem","removeitem(key","result","retriev","return","servic","set","setitem","setitem(key","sourc","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","storag","storageservic","string","valu","void","whole","wrapper"],"injectables/TaskListService.html":["100","angular/cor","api","authent","authtoken","baseservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","export","file","get(authtoken","googl","http","identifi","import","info","inject","interact","interfac","intern","list","list(authtoken","map(r","match","maximum","maxresult","method","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","sourc","specifi","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:29","src/gsuite/tasks/tasklist.service.ts:43","src/gsuite/tasks/tasklist.service.ts:55","string","task","tasklist","tasklist.model","tasklistqueryopt","tasklistservic","tasks/v1/users/@me/list","taskservic","this.service.get(this.api","token","type","type.model","url","user","user'","valu","void"],"injectables/TaskService.html":["100","angular/cor","api","authent","authtoken","baseservic","boolean","bound","class","complet","completedmax","completedmin","constructor","constructor(priv","constructor(servic","creat","date","default","defin","delet","due","duemax","duemin","export","fals","file","filter","flag","googl","hidden","http","identifi","import","indic","info","inject","interact","interfac","intern","last","list","list(authtoken","lower","map(r","match","maximum","maxresult","method","modif","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","showcomplet","showdelet","showhidden","sourc","specifi","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:62","src/gsuite/tasks/task.service.ts:78","string","task","task'","task.model","tasklist","taskqueryopt","tasks/v1/list","taskservic","this.service.get(this.api","time","token","true","type","type.model","updatedmin","upper","url","user","user'","valu","void","whether"],"injectables/TicketService.html":["angular/cor","api","authent","authservic","class","constructor","constructor(priv","constructor(servic","creat","default","defin","descript","export","file","get","get(id","get(id:str","given","http","id","id).map(r","import","info","inject","interact","intern","map(r","match","method","mirror","models/mirror","models/ticket","new","number","observ","param","paramet","privat","properti","public","regist","register(numb","registr","rel","res.json","result","return","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","servic","set","smartmirror","smartmirror.servic","smartmirrorservic","sourc","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","string","this.service.get(this.api","this.service.post(this.api","ticket","ticketservic","type","url","user","valu","void"],"injectables/TokenService.html":["1","2","access","angular/cor","auth.token","authent","authenticatd","authenticationfailur","authservic","authupdatetyp","cemizm/smartmirror","class","console.log(\"authent","const","constructor","constructor(priv","constructor(storageservic","creat","defin","descript","enum","exampl","export","file","get","import","info","inject","invalid","jw","listen","localstorag","loginsucess","match","method","new","notif","observ","param","paramet","privat","properti","result","return","rxj","servic","set","share","sourc","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","storage.servic","storageservic","store","string","subject","subscrib","this.invalid","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","token","token(token","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","type","typescript","updat","user","void"],"interfaces/CalendarList.html":["0088aa","abil","access","accessrol","acl","addit","appear","array","authent","backgroundcolor","base","boolean","calendar","calendar#calendarlistentri","calendarlist","calendarnotif","calendarremind","collect","color","colorid","content","default","defaultremind","defin","definit","delet","descript","detail","effect","entri","etag","event","export","fals","ffffff","file","foreground","foregroundcolor","form","format","free","free/busi","freebusyread","geograph","hexadecim","hidden","id","identifi","import","index","info","inform","interfac","kind","list","list.model.t","list.model.ts:10","list.model.ts:14","list.model.ts:18","list.model.ts:22","list.model.ts:26","list.model.ts:30","list.model.ts:34","list.model.ts:38","list.model.ts:42","list.model.ts:46","list.model.ts:50","list.model.ts:54","list.model.ts:58","list.model.ts:69","list.model.ts:73","list.model.ts:77","list.model.ts:81","list.model.ts:85","locat","main","manipul","match","notif","notifications.model","notificationset","option","owner","ownership","permiss","possibl","primari","privat","properti","provid","read","reader","refer","remind","reminders.model","resourc","result","role","section","see","select","set","show","sourc","src/gsuite/calendar/calendar","string","summari","summaryoverrid","supersed","text","time","timezon","titl","type","ui","up","user","user'","valu","visibl","void","whether","write","writer","zone"],"interfaces/CalendarListQueryOptions.html":["100","410","accept","access","acl","allow","alway","angular/cor","api","authent","authtoken","baseservic","boolean","calendar","calendar/v3/users/me/calendarlist","calendarlist","calendarlistqueryopt","calendarlistservic","chang","class","clear","client","code","consist","constructor(priv","contain","control","creat","default","defin","delet","descript","ensur","entri","event","expir","export","fals","field","file","free/busi","freebusyread","full","gone","googl","hidden","http","import","includ","info","inform","inject","interact","interfac","intern","last","list","list(authtoken","list.model","list.service.t","list.service.ts:16","list.service.ts:26","list.service.ts:31","list.service.ts:36","list.service.ts:41","list.service.ts:53","make","map(r","match","maximum","maxresult","minaccessrol","minimum","modifi","nextsynctoken","number","observ","obtain","on","option","owner","page","pagetoken","param","paramet","perform","previou","privat","properti","public","queri","read","reader","rel","request","res.item","res.json","respond","respons","responsetyp","restrict","result","return","role","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","server","servic","set","shared/base.servic","shared/respons","show","showdelet","showhidden","sourc","specifi","src/gsuite/calendar/calendar","state","storag","string","such","synchron","synctoken","task","tasklist","this.service.get(this.api","togeth","token","type","type.model","url","user","user'","valu","void","whether","without","won't","writer"],"interfaces/CalendarNotifications.html":["agenda","app","avail","calendar","calendarnotif","cancel","chang","custom","day","defin","deliv","descript","educ","email","event","eventcancel","eventchang","eventcr","eventrespons","export","file","googl","govern","ignor","info","insert","interfac","match","method","morn","new","notif","notifications.model.t","notifications.model.ts:13","notifications.model.ts:21","out","possibl","properti","put","read","remind","result","sent","set","sm","sourc","src/gsuite/calendar/calendar","string","type","updat","us","valu","via","void","work"],"interfaces/CalendarReminder.html":["0","4","40320","account","app","avail","befor","between","calendar","calendarremind","custom","defin","descript","educ","email","event","export","file","googl","govern","ignor","info","interfac","match","method","minut","number","popup","possibl","properti","remind","reminders.model.t","reminders.model.ts:12","reminders.model.ts:17","request","result","sent","set","sm","sourc","src/gsuite/calendar/calendar","start","string","trigger","type","ui","us","valid","valu","via","void","week","work"],"interfaces/CalendarSettings.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:104","src/models/widget.ts:109","src/models/widget.ts:114","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/ControlRequest.html":["action","controlrequest","defin","export","file","info","interfac","match","mirrorid","payload","properti","request.t","request.ts:2","request.ts:3","request.ts:4","result","sourc","src/models/control","string","type","void"],"interfaces/Event.html":["25","absolut","accord","accross","actual","allow","anyon","anyonecanaddself","array","associ","attach","attachments.model","attende","attendee.model","attendeesomit","attribut","authent","belong","block","boolean","calendar","calendar#ev","cancel","chang","color","colorid","compat","confidenti","confirm","copi","creat","creation","creator","current","data","date","date.model","default","defin","definit","descript","detail","document","drive","dtend","dtstart","due","email","end","endpoint","endtimeunspecifi","entri","etag","even","event","event'","eventattach","eventattende","eventd","eventgadget","eventperson","eventproperti","eventremind","eventsourc","exampl","except","exclus","exdat","export","exrul","extend","extendedproperti","fals","field","file","first","form","free","gadget","gadget.model","geograph","googl","guestscaninviteoth","guestscanmodifi","guestscanseeotherguest","guid","hangout","hangoutlink","htmllink","http","icalendar","icaluid","id","identifi","immut","import","inclus","indic","info","inform","instanc","interfac","invit","kind","last","line","link","list","locat","lock","made","main","match","maxattende","messag","method","modif","modifi","more","move","new","note","number","omit","opaqu","oper","option","order","organ","originalstarttim","other","page","paramet","participant'","per","person.model","possibl","privat","privatecopi","properti","properties.model","provid","public","queri","rdate","read","reader","reason","recur","recurr","recurringeventid","refer","remind","reminder.model","represent","request","resourc","respons","restrict","result","retriev","rfc5545","rrule","schedul","scheme","section","see","seen","separ","sequenc","set","share","singl","sourc","source.model","specifi","src/gsuite/calendar/event.model.t","src/gsuite/calendar/event.model.ts:101","src/gsuite/calendar/event.model.ts:107","src/gsuite/calendar/event.model.ts:115","src/gsuite/calendar/event.model.ts:120","src/gsuite/calendar/event.model.ts:124","src/gsuite/calendar/event.model.ts:130","src/gsuite/calendar/event.model.ts:137","src/gsuite/calendar/event.model.ts:141","src/gsuite/calendar/event.model.ts:145","src/gsuite/calendar/event.model.ts:149","src/gsuite/calendar/event.model.ts:153","src/gsuite/calendar/event.model.ts:157","src/gsuite/calendar/event.model.ts:161","src/gsuite/calendar/event.model.ts:165","src/gsuite/calendar/event.model.ts:17","src/gsuite/calendar/event.model.ts:170","src/gsuite/calendar/event.model.ts:175","src/gsuite/calendar/event.model.ts:179","src/gsuite/calendar/event.model.ts:184","src/gsuite/calendar/event.model.ts:190","src/gsuite/calendar/event.model.ts:21","src/gsuite/calendar/event.model.ts:25","src/gsuite/calendar/event.model.ts:32","src/gsuite/calendar/event.model.ts:36","src/gsuite/calendar/event.model.ts:40","src/gsuite/calendar/event.model.ts:44","src/gsuite/calendar/event.model.ts:48","src/gsuite/calendar/event.model.ts:52","src/gsuite/calendar/event.model.ts:56","src/gsuite/calendar/event.model.ts:61","src/gsuite/calendar/event.model.ts:65","src/gsuite/calendar/event.model.ts:71","src/gsuite/calendar/event.model.ts:76","src/gsuite/calendar/event.model.ts:80","src/gsuite/calendar/event.model.ts:85","src/gsuite/calendar/event.model.ts:92","src/gsuite/calendar/event.model.ts:96","start","statu","still","string","summari","suppli","support","supportsattach","system","tent","text","themselv","time","titl","transpar","true","type","ui","uniqu","unspecifi","updat","url","us","user","valu","via","view","visibl","void","web","whether","work"],"interfaces/EventAttachment.html":["ad","alternatelink","api","attach","attachment'","attachments.model.t","attachments.model.ts:11","attachments.model.ts:15","attachments.model.ts:19","attachments.model.ts:24","attachments.model.ts:7","correspond","defin","drive","entri","eventattach","export","file","fileid","fileurl","format","googl","icon","iconlink","id","info","interfac","internet","link","match","media","mime","mimetyp","properti","read","resourc","result","same","sourc","src/gsuite/calendar/ev","string","titl","type","url","us","void"],"interfaces/EventAttendee.html":["0","accept","addit","additionalguest","api","appear","attende","attendee'","attendee.model.t","attendee.model.ts:13","attendee.model.ts:17","attendee.model.ts:21","attendee.model.ts:25","attendee.model.ts:29","attendee.model.ts:37","attendee.model.ts:41","attendee.model.ts:45","attendee.model.ts:5","attendee.model.ts:9","avail","boolean","calendar","collect","comment","copi","correspond","declin","default","defin","displaynam","email","entri","event","eventattende","export","fals","field","file","googl","guest","id","info","interfac","invit","match","name","needsact","number","option","organ","peopl","possibl","profil","properti","read","repres","resourc","respond","respons","responsestatu","result","self","sourc","src/gsuite/calendar/ev","statu","string","tent","theid","type","valu","void","whether"],"interfaces/EventDate.html":["combin","custom","date","date.model.t","date.model.ts:10","date.model.ts:16","date.model.ts:5","datetim","day","dd","defin","event","eventd","expand","explicitli","export","field","file","format","indic","info","interfac","match","mm","offset","option","properti","recur","recurr","requir","result","singl","sourc","specifi","src/gsuite/calendar/ev","start/end","string","time","timezon","type","unless","valu","void","yyyi","zone"],"interfaces/EventGadget.html":["0","calendar","chip","click","defin","descript","display","event","event'","eventgadget","export","extend","file","gadget","gadget'","gadget.model.t","gadget.model.ts:12","gadget.model.ts:16","gadget.model.ts:20","gadget.model.ts:24","gadget.model.ts:28","gadget.model.ts:34","gadget.model.ts:38","gadget.model.ts:8","greater","height","http","icon","iconlink","info","integ","interfac","key","link","match","mode","next","number","option","pixel","possibl","prefer","properti","result","scheme","sourc","src/gsuite/calendar/ev","string","titl","type","url","valu","view","void","width"],"interfaces/EventPerson.html":["address","api","appear","avail","boolean","calendar","collect","copi","correspond","creator","creator'","default","defin","displaynam","email","event","eventperson","export","fals","field","file","googl","id","info","interfac","match","name","peopl","person.model.t","person.model.ts:13","person.model.ts:17","person.model.ts:5","person.model.ts:9","profil","properti","read","result","self","sourc","src/gsuite/calendar/ev","string","theid","type","void","whether"],"interfaces/EventProperties.html":["appear","attende","between","calendar","copi","defin","descript","event","eventproperti","export","extend","file","info","interfac","key","match","privat","properti","properties.model.t","properties.model.ts:14","properties.model.ts:8","result","share","sourc","src/gsuite/calendar/ev","string","type","void"],"interfaces/EventReminder.html":["5","appli","array","boolean","calendar","calendarremind","default","defin","doesn't","event","eventremind","export","file","import","indic","info","interfac","list","match","maximum","number","overrid","properti","remind","reminder.model.t","reminder.model.ts:11","reminder.model.ts:6","reminders.model","result","set","sourc","specif","src/gsuite/calendar/ev","type","us","usedefault","void","whether"],"interfaces/EventSource.html":["creat","defin","descript","document","email","event","eventsourc","exampl","export","file","http","identifi","info","interfac","match","messag","page","point","properti","resourc","result","scheme","sourc","source.model.t","source.model.ts:13","source.model.ts:9","src/gsuite/calendar/ev","string","subject","titl","type","url","void","web"],"interfaces/EventsQueryOptions.html":["03t10:00:00","03t10:00:00z","06","07:00","2011","250","2500","absenc","accept","access","address","alway","alwaysincludeemail","angular/cor","api","ascend","attende","authent","authtoken","avail","baseservic","boolean","both","bound","calendar","calendar/v3/calendar","calendarlist.list","call","cancel","chang","class","client","constraint","constructor(priv","contain","creat","creator","current","date/tim","default","defin","delet","descript","discourag","e.g","email","end","entri","equal","even","event","event'","event.model","eventsqueryopt","eventsservic","except","exclus","expand","export","extend","fals","field","file","filter","find","format","free","gener","given","googl","handl","hidden","http","i.","icalendar","icaluid","id","identifi","ignor","import","includ","inclus","info","inject","instanc","interact","interfac","intern","invit","keyword","larger","last","list","list(authtoken","log","lower","make","mandatori","map(r","match","maxattende","maximum","maxresult","mention","method","millisecond","modif","more","multipl","never","nextsynctoken","non","number","observ","obtain","offset","on","option","order","orderbi","organ","page","pagetoken","param","paramet","particip","place","previou","primari","privat","privateextendedproperti","properti","propertyname=valu","provid","public","q","queri","real","recur","regardless","rel","repeat","request","res.item","res.json","respons","responsetyp","result","retriev","return","rfc3339","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","search","servic","share","shared/base.servic","shared/respons","sharedextendedproperti","showdelet","showhiddeninvit","singl","singleev","size","sourc","specifi","src/gsuite/calendar/events.service.t","src/gsuite/calendar/events.service.ts:101","src/gsuite/calendar/events.service.ts:107","src/gsuite/calendar/events.service.ts:20","src/gsuite/calendar/events.service.ts:24","src/gsuite/calendar/events.service.ts:29","src/gsuite/calendar/events.service.ts:34","src/gsuite/calendar/events.service.ts:42","src/gsuite/calendar/events.service.ts:46","src/gsuite/calendar/events.service.ts:51","src/gsuite/calendar/events.service.ts:56","src/gsuite/calendar/events.service.ts:61","src/gsuite/calendar/events.service.ts:68","src/gsuite/calendar/events.service.ts:72","src/gsuite/calendar/events.service.ts:78","src/gsuite/calendar/events.service.ts:83","src/gsuite/calendar/events.service.ts:90","src/gsuite/calendar/events.service.ts:97","stabl","start","starttim","statu","still","string","synctoken","term","text","themselv","this.service.get(this.api","time","timemax","timemin","timestamp","timezon","token","true","type","type.model","underli","unspecifi","updat","updatedmin","upper","url","us","user","valu","void","want","whether","work","zone"],"interfaces/LoginRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","string","subsequ","token","type","user","void"],"interfaces/LoginResponse.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:16","string","subsequ","token","type","user","void"],"interfaces/MailSettings.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:85","src/models/widget.ts:90","src/models/widget.ts:95","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Message.html":["2822","accept","add","api","appli","array","base","base64url","belong","byte","client","complianc","configur","creation","criteria","date","defin","descript","determin","draft","draft.messag","drafts.get","email","encod","entir","epoch","estim","export","file","follow","format","format=raw","googl","header","histori","historyid","id","immut","import","inbox","info","interfac","intern","internald","label","labelid","last","list","mail","match","messag","messagepayload","messages.get","met","migrat","modifi","more","ms","normal","number","order","origin","paramet","pars","part","payload","payload.model","properti","raw","receiv","record","refer","reliabl","repli","repres","request","respons","result","return","rfc","set","short","size","sizeestim","smtp","snippet","sourc","specifi","src/gsuite/mail/message.model.t","src/gsuite/mail/message.model.ts:16","src/gsuite/mail/message.model.ts:20","src/gsuite/mail/message.model.ts:24","src/gsuite/mail/message.model.ts:28","src/gsuite/mail/message.model.ts:35","src/gsuite/mail/message.model.ts:39","src/gsuite/mail/message.model.ts:43","src/gsuite/mail/message.model.ts:48","src/gsuite/mail/message.model.ts:9","standard","string","structur","subject","suppli","text","thread","threadid","time","timestamp","type","void"],"interfaces/MessageAttachment.html":["attach","attachment.model.t","attachment.model.ts:11","attachment.model.ts:18","attachment.model.ts:7","attachmentid","base64url","bodi","byte","contain","content","data","defin","empti","encod","entir","export","extern","field","file","id","info","interfac","match","messag","messageattach","messages.attachments.get","mime","notwithstand","number","part","present","properti","request","result","retriev","sent","separ","size","sourc","src/gsuite/mail/messag","string","type","void"],"interfaces/MessageHeader.html":["2822","befor","contain","defin","descript","email","entir","exampl","export","file","header","header.model.t","header.model.ts:13","header.model.ts:9","info","interfac","match","messag","messagehead","name","payload","properti","repres","result","rfc","separ","someuser@example.com","sourc","src/gsuite/mail/messag","standard","string","subject","such","type","valu","void"],"interfaces/MessageListQueryOptions.html":["accept","access","address","angular/cor","api","array","authent","authtoken","base64url","baseservic","bodi","boolean","box","class","constructor(priv","content","creat","data","default","defin","descript","email","encod","estim","exampl","export","fals","field","file","format","from:someuser@example.com","full","get","get(authtoken","given","gmail","gmail.metadata","gmail/v1/us","googl","header","http","id","import","includ","includespamtrash","indic","info","inject","interact","interfac","intern","is:unread","label","labelid","list","list(authtoken","mailbox","map(r","match","maximum","maxresult","messag","message.model","messagelistqueryopt","messagequeryopt","messageslistrespons","messagesservic","metadata","metadatahead","minim","next","nextpagetoken","number","observ","option","page","pagetoken","param","paramet","pars","payload","privat","properti","public","q","queri","raw","rel","res.json","res.messag","result","resultsizeestim","retriev","return","rfc822msgid","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","same","scope","search","servic","shared/base.servic","sourc","spam","special","specif","specifi","src/gsuite/mail/messages.service.t","src/gsuite/mail/messages.service.ts:15","src/gsuite/mail/messages.service.ts:19","src/gsuite/mail/messages.service.ts:23","src/gsuite/mail/messages.service.ts:27","src/gsuite/mail/messages.service.ts:33","string","support","tasklist","this.service.get(this.api","token","total","trash","type","url","us","user","user'","userid","valu","void"],"interfaces/MessagePayload.html":["1521","2822","appli","array","attach","attachment.model","bodi","child","contain","defin","email","empti","entir","exampl","export","field","file","filenam","header","header.model","id","immut","import","info","inform","interfac","level","list","match","messag","messageattach","messagehead","messagepayload","mime","mimetyp","more","multipart","non","part","partid","payload","payload.model.t","payload.model.ts:12","payload.model.ts:16","payload.model.ts:21","payload.model.ts:25","payload.model.ts:31","payload.model.ts:8","present","properti","repres","result","rfc","see","sourc","src/gsuite/mail/messag","standard","string","subject","such","text/plain","top","type","void"],"interfaces/MessageQueryOptions.html":["accept","access","address","angular/cor","api","array","authent","authtoken","base64url","baseservic","bodi","boolean","box","class","constructor(priv","content","creat","data","default","defin","email","encod","estim","exampl","export","fals","field","file","format","from:someuser@example.com","full","get","get(authtoken","given","gmail","gmail.metadata","gmail/v1/us","googl","header","http","id","import","includ","includespamtrash","indic","info","inject","interact","interfac","intern","is:unread","label","labelid","list","list(authtoken","mailbox","map(r","match","maximum","maxresult","messag","message.model","messagelistqueryopt","messagequeryopt","messageslistrespons","messagesservic","metadata","metadatahead","minim","next","nextpagetoken","number","observ","option","page","pagetoken","param","paramet","pars","payload","privat","properti","public","q","queri","raw","rel","res.json","res.messag","result","resultsizeestim","retriev","return","rfc822msgid","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","same","scope","search","servic","shared/base.servic","sourc","spam","special","specif","specifi","src/gsuite/mail/messages.service.t","src/gsuite/mail/messages.service.ts:47","src/gsuite/mail/messages.service.ts:51","string","support","tasklist","this.service.get(this.api","token","total","trash","type","url","us","user","user'","userid","valu","void"],"interfaces/MessagesListResponse.html":["accept","access","address","angular/cor","api","array","authent","authtoken","base64url","baseservic","bodi","boolean","box","class","constructor(priv","content","creat","data","default","defin","descript","email","encod","estim","exampl","export","fals","field","file","format","from:someuser@example.com","full","get","get(authtoken","given","gmail","gmail.metadata","gmail/v1/us","googl","header","http","id","import","includ","includespamtrash","indic","info","inject","interact","interfac","intern","is:unread","label","labelid","list","list(authtoken","mailbox","map(r","match","maximum","maxresult","messag","message.model","messagelistqueryopt","messagequeryopt","messageslistrespons","messagesservic","metadata","metadatahead","minim","next","nextpagetoken","number","observ","option","page","pagetoken","param","paramet","pars","payload","privat","properti","public","q","queri","raw","rel","res.json","res.messag","result","resultsizeestim","retriev","return","rfc822msgid","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","same","scope","search","servic","shared/base.servic","sourc","spam","special","specif","specifi","src/gsuite/mail/messages.service.t","src/gsuite/mail/messages.service.ts:61","src/gsuite/mail/messages.service.ts:65","src/gsuite/mail/messages.service.ts:69","string","support","tasklist","this.service.get(this.api","token","total","trash","type","url","us","user","user'","userid","valu","void"],"interfaces/Mirror.html":["administr","array","belong","defin","descript","display","export","file","frontend","id","imag","import","info","interfac","match","mirror","name","oper","path","properti","result","sourc","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","string","type","us","user","void","widget"],"interfaces/NewsSetting.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:72","src/models/widget.ts:77","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/RegisterRequest.html":["access","accesstoken","api","authent","defin","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","string","subsequ","token","type","user","void"],"interfaces/ResponseType.html":["array","avail","case","chang","collect","defin","entri","etag","export","file","further","info","interfac","item","kind","later","match","next","nextpagetoken","nextsynctoken","omit","page","point","properti","provid","request","resourc","responsetyp","result","retriev","return","sourc","src/gsuite/shared/respons","string","time","token","type","type.model.t","type.model.ts:13","type.model.ts:18","type.model.ts:22","type.model.ts:5","type.model.ts:9","us","void"],"interfaces/SmartMirrorModuleOptions.html":["10.06.17","apiurl","cem","creat","defin","descript","export","file","info","interfac","match","properti","result","rturl","smartmirrormoduleopt","sourc","src/utils/module.options.t","src/utils/module.options.ts:6","src/utils/module.options.ts:7","string","type","void"],"interfaces/Task.html":["accord","alway","anoth","array","boolean","case","clear","collect","complet","correspond","date","default","defin","delet","describ","differ","due","etag","export","fals","field","file","flag","greater","hidden","id","identifi","import","indic","info","interfac","kind","last","level","lexicograph","link","link.model","list","mark","match","method","modif","move","needsact","note","omit","option","order","parent","point","posit","properti","read","resourc","result","retriev","same","selflink","sibl","sourc","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.model.ts:11","src/gsuite/tasks/task.model.ts:15","src/gsuite/tasks/task.model.ts:19","src/gsuite/tasks/task.model.ts:23","src/gsuite/tasks/task.model.ts:27","src/gsuite/tasks/task.model.ts:32","src/gsuite/tasks/task.model.ts:39","src/gsuite/tasks/task.model.ts:43","src/gsuite/tasks/task.model.ts:47","src/gsuite/tasks/task.model.ts:51","src/gsuite/tasks/task.model.ts:55","src/gsuite/tasks/task.model.ts:59","src/gsuite/tasks/task.model.ts:64","src/gsuite/tasks/task.model.ts:68","src/gsuite/tasks/task.model.ts:7","statu","string","task","task'","tasklink","tasks#task","time","titl","top","type","under","updat","url","us","void","whether"],"interfaces/TaskLink.html":["between","defin","descript","e.g","email","everyth","export","file","html","info","interfac","link","link.model.t","link.model.ts:13","link.model.ts:17","link.model.ts:9","match","properti","result","sourc","speak","src/gsuite/tasks/task","string","task","tasklink","type","url","void"],"interfaces/TaskListQueryOptions.html":["100","angular/cor","api","authent","authtoken","baseservic","class","constructor(priv","creat","default","defin","descript","export","file","get(authtoken","googl","http","identifi","import","info","inject","interact","interfac","intern","list","list(authtoken","map(r","match","maximum","maxresult","number","observ","on","option","page","pagetoken","param","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","sourc","specifi","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:16","src/gsuite/tasks/tasklist.service.ts:20","string","task","tasklist","tasklist.model","tasklistqueryopt","tasklistservic","tasks/v1/users/@me/list","taskservic","this.service.get(this.api","token","type","type.model","url","user","user'","void"],"interfaces/TaskQueryOptions.html":["100","angular/cor","api","authent","authtoken","baseservic","boolean","bound","class","complet","completedmax","completedmin","constructor(priv","creat","date","default","defin","delet","descript","due","duemax","duemin","export","fals","file","filter","flag","googl","hidden","http","identifi","import","indic","info","inject","interact","interfac","intern","last","list","list(authtoken","lower","map(r","match","maximum","maxresult","modif","number","observ","on","option","page","pagetoken","param","paramet","privat","properti","public","queri","rel","res.item","res.json","responsetyp","result","return","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","servic","shared/base.servic","shared/respons","showcomplet","showdelet","showhidden","sourc","specifi","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:16","src/gsuite/tasks/task.service.ts:20","src/gsuite/tasks/task.service.ts:24","src/gsuite/tasks/task.service.ts:28","src/gsuite/tasks/task.service.ts:32","src/gsuite/tasks/task.service.ts:36","src/gsuite/tasks/task.service.ts:40","src/gsuite/tasks/task.service.ts:44","src/gsuite/tasks/task.service.ts:48","src/gsuite/tasks/task.service.ts:52","string","task","task'","task.model","tasklist","taskqueryopt","tasks/v1/list","taskservic","this.service.get(this.api","time","token","true","type","type.model","updatedmin","upper","url","user","user'","void","whether"],"interfaces/TaskSetting.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:53","src/models/widget.ts:57","src/models/widget.ts:62","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Tasklist.html":["alway","contain","date","defin","delet","descript","etag","export","file","id","identifi","info","interfac","kind","last","list","manag","match","modif","more","on","point","properti","resourc","result","retriev","selflink","sourc","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.model.ts:13","src/gsuite/tasks/tasklist.model.ts:17","src/gsuite/tasks/tasklist.model.ts:21","src/gsuite/tasks/tasklist.model.ts:25","src/gsuite/tasks/tasklist.model.ts:29","src/gsuite/tasks/tasklist.model.ts:9","string","task","tasklist","tasks#tasklist","time","titl","type","updat","url","us","user","void","want","way"],"interfaces/Ticket.html":["09.06.17","cem","creat","defin","descript","export","file","id","info","interfac","match","mirror","mirrorid","number","properti","regist","request","result","sourc","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","string","ticket","type","us","void"],"interfaces/User.html":["09.06.17","access","accesstoken","api","authent","cem","creat","defin","descript","email","export","extend","file","hash","info","interfac","loginrequest","loginrespons","match","md5","name","new","password","properti","registerrequest","request","result","smartmirror","sourc","src/models/user.t","src/models/user.ts:6","src/models/user.ts:7","string","subsequ","token","type","user","void"],"interfaces/WeatherSetting.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","descript","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:37","src/models/widget.ts:42","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"interfaces/Widget.html":["boolean","calendar","calendarid","calendarset","citi","count","day","defin","display","email","enum","export","feed","feedurl","file","forecast","googl","id","import","info","insid","interfac","item","list","mail","mailset","match","maxcount","maxim","mirror","name","new","newsset","number","oauth","oauthtoken","order","posit","properti","result","retriev","rss","set","show","side","sourc","src/models/widget.t","src/models/widget.ts:11","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","string","task","tasklistid","taskset","token","type","unread","url","void","weather","weatherset","widget","widgetsid","widgettyp"],"miscellaneous.html":["0","09.06.17","1","2","3","4","5","auth.token","authenticationfailur","authupdatetyp","calend","cem","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","default","enumer","function","inact","left","loginsucess","mail","match","miscellan","new","note","result","right","smartmirrormodule_opt","src/index.t","src/models/enums.t","src/services/token.service.t","tokenkey","undefin","valu","variabl","weather","widgetsid","widgettyp"],"coverage.html":["1/2","1/3","1/4","10/10","10/11","100","11/11","16/16","18/18","19/19","25","3/3","3/4","33","38/38","4/4","4/5","5/5","5/6","50","6/6","7/7","75","80","83","9/10","9/9","90","attachment.model.t","attachments.model.t","attendee.model.t","authservic","baseservic","calendarlist","calendarlistqueryopt","calendarlistservic","calendarnotif","calendarremind","calendarset","controlrequest","coverag","date.model.t","document","event","eventattach","eventattende","eventd","eventgadget","eventperson","eventproperti","eventremind","eventsourc","eventsqueryopt","eventsservic","file","gadget.model.t","header.model.t","identifi","inject","interfac","link.model.t","list.model.t","list.service.t","loginrequest","loginrespons","mailset","match","messag","messageattach","messagehead","messagelistqueryopt","messagepayload","messagequeryopt","messageslistrespons","messagesservic","mirror","mirrorservic","newsset","notifications.model.t","payload.model.t","person.model.t","properties.model.t","registerrequest","reminder.model.t","reminders.model.t","request.t","responsetyp","result","smartmirrormoduleconfig","smartmirrormoduleopt","smartmirrorservic","socketservic","source.model.t","src/gsuite/calendar/calendar","src/gsuite/calendar/ev","src/gsuite/calendar/event.model.t","src/gsuite/calendar/events.service.t","src/gsuite/mail/messag","src/gsuite/mail/message.model.t","src/gsuite/mail/messages.service.t","src/gsuite/shared/base.service.t","src/gsuite/shared/respons","src/gsuite/tasks/task","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.service.t","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.service.t","src/models/control","src/models/mirror.t","src/models/ticket.t","src/models/user.t","src/models/widget.t","src/services/auth.service.t","src/services/mirror.service.t","src/services/smartmirror.service.t","src/services/socket.service.t","src/services/storage.service.t","src/services/ticket.service.t","src/services/token.service.t","src/utils/module.config.t","src/utils/module.options.t","statement","storageservic","task","tasklink","tasklist","tasklistqueryopt","tasklistservic","taskqueryopt","taskservic","taskset","ticket","ticketservic","tokenservic","type","type.model.t","user","weatherset","widget"]},"length":61},"tokenStore":{"root":{"0":{"0":{"8":{"8":{"docs":{},"a":{"docs":{},"a":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}},"docs":{}},"docs":{}},"3":{"docs":{},"t":{"1":{"0":{"docs":{},":":{"0":{"0":{"docs":{},":":{"0":{"0":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}},"z":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343}}},"7":{"docs":{},":":{"0":{"0":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}},"docs":{}},"docs":{}}},"9":{"docs":{},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}},"1":{"0":{"0":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.13157894736842105}}},"docs":{},".":{"0":{"6":{"docs":{},".":{"1":{"7":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"1":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009868421052631578}}},"docs":{}},"docs":{}}},"4":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776}}},"5":{"2":{"1":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}},"docs":{}},"docs":{}},"6":{"docs":{},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}},"8":{"docs":{},"/":{"1":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}},"9":{"docs":{},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05084745762711865}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013157894736842105}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"docs":{}}},"2":{"0":{"1":{"1":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343}}},"docs":{}},"docs":{}},"5":{"0":{"0":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}},"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}},"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"8":{"2":{"2":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}},"docs":{}},"docs":{}},"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05084745762711865}}},"3":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.013157894736842105}}},"8":{"docs":{},"/":{"3":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}},"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03289473684210526}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009868421052631578}}},"docs":{}}},"4":{"0":{"1":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"3":{"2":{"0":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776}}},"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02631578947368421}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"docs":{}}},"5":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}}},"6":{"docs":{},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02631578947368421}}},"docs":{}}},"7":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009868421052631578}}},"docs":{},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009868421052631578}}},"docs":{}}},"8":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"9":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}},"docs":{},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"docs":{}}},"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602}},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}},"p":{"docs":{},"p":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658}}}}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812}}}}}},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037162162162162164},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.02287581699346405},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.012589928057553957},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.019464720194647202},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.02147239263803681},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024822695035460994},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.08333333333333333}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.027027027027027},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04391891891891892},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.019464720194647202},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.018404907975460124},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.044642857142857144},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.07373271889400922},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03225806451612903},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.014598540145985401},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.026785714285714284},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.010830324909747292},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.007305194805194805},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.033707865168539325},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.02666666666666667},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.02702702702702703},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.024390243902439025},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.020761245674740483},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}},"s":{"docs":{},"s":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.021660649819494584},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.039473684210526314},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}}},"r":{"docs":{},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.06818181818181818}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}}}},"i":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.018668831168831168},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.04844290657439446},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"7":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"docs":{}},"2":{"1":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"5":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"9":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"docs":{}},"3":{"7":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"docs":{}},"4":{"1":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"5":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"docs":{}},"5":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"9":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475}}},"docs":{}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}},"'":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.03460207612456748}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.008928571428571428},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.06535947712418301},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.053691275167785234},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301}}},"5":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301}}},"9":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301}}},"docs":{}},"2":{"4":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301}}},"docs":{}},"7":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301}}},"docs":{}}}}}}}}}}}},"'":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}},".":{"docs":{},"t":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154}}},"8":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154}}},"docs":{}},"7":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154}}},"docs":{}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.020134228187919462}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.020761245674740483},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.05405405405405406},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"e":{"6":{"4":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}},"docs":{}},"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.025974025974025976},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":5.00398406374502},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}},"i":{"docs":{},"c":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}}},"d":{"docs":{},"i":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.03187250996015936},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.031189083820662766},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.06711409395973154},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.022222222222222223},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}}}},"t":{"docs":{},"h":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}}}}},"x":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules.html":{"ref":"modules.html","tf":0.1}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308}}}}}},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"i":{"docs":{},"z":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.009202453987730062},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.04504504504504504},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"c":{"docs":{},"k":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}},"i":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"a":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.021645021645021644}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01730103806228374}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.053691275167785234},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.035555555555555556},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":5.045454545454546},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}},"u":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.036036036036036036},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}},"r":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"r":{"docs":{},"m":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083}},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}},"o":{"docs":{},"r":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01263537906137184},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03260869565217391},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03389830508474576},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}}}}},"p":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.057971014492753624}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.036036036036036036},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.00328947368421}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"a":{"docs":{},"r":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0196078431372549},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.030575539568345324},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.09386281588447654},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01598173515981735},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.01818181818181818},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.016233766233766232},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.057971014492753624},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.033707865168539325},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.011789924973204717},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":5.003610108303249},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":5.0130718954248366},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":5.006849315068493},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}}}}}}}}}},"/":{"docs":{},"v":{"3":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}}}}}}}}}}},"docs":{}}},"#":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":5.012121212121212},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":5.014388489208633},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.016216216216216217},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":5.0162162162162165},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}},"e":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}},"s":{"docs":{},"e":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.017316017316017316},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"'":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.05405405405405406}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}},"u":{"docs":{},"d":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}}},"i":{"docs":{},"p":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561}}},"l":{"docs":{},"d":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}}},"f":{"docs":{},"g":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.02824858757062147},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.012987012987012988}}}},"i":{"docs":{},"n":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699}}}}}},"p":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.017316017316017316}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.010830324909747292},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294}}}},"b":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.016339869281045753},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.019784172661870502},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.018050541516245487},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0182648401826484},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.021103896103896104},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.03460207612456748},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.0449438202247191},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.044444444444444446},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.027607361963190184},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.029585798816568046},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.032490974729241874},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0136986301369863},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.016216216216216217},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.06818181818181818},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.03165584415584415},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.032679738562091505},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.03460207612456748},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.022222222222222223},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03902439024390244},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.036036036036036036},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.01822079314040729},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.016304347826086956},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.02903225806451613},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.020134228187919462},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.02666666666666667},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.04065040650406504},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.05555555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0364963503649635},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.04411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.015957446808510637},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.044444444444444446},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}},"i":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0170316301703163},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.05405405405405406},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.04390243902439024},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.04891304347826087},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.05405405405405406},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.05056179775280899},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.05319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.05084745762711865},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.04477611940298507}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.02702702702702703}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.028368794326241134},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.0962962962962963},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.031630170316301706},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.03950617283950617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408}}},"6":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408}}},"docs":{}},"5":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.022222222222222223}}}}}},"a":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.087248322147651},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}},"y":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}},"u":{"docs":{},"e":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.019753086419753086}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}},"i":{"docs":{},"n":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.05228758169934641}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}},"d":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"o":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.03896103896103896},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03260869565217391},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.044444444444444446},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03389830508474576},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.029850746268656716}}}}},"i":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.058823529411764705},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.04316546762589928},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0136986301369863},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.06060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":5.112012987012987},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.05925925925925926},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.014634146341463415},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.07246376811594203},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.0898876404494382},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.04501607717041801},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":5.0071942446043165},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":5.003215434083601},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":5.024390243902439},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"'":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}}}},"r":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":5.0130718954248366},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":5.006920415224913},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.008116883116883116},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":5.014814814814815},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}},"g":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":5.009756097560976},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":5.018018018018018},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":5.028985507246377},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.024330900243309004},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02877697841726619},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.021621621621621623},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.04504504504504504},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.025806451612903226},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.020202020202020204},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.03655352480417755},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.023121387283236993},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.015957446808510637},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.014925373134328358}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.026143790849673203},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.02968036529680365},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}},"i":{"docs":{},"r":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.013798701298701298},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.026845637583892617},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}},"u":{"docs":{},"m":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"e":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}},".":{"docs":{},"g":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.04065040650406504},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}},"m":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}},"a":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.020887728459530026},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497}},"=":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0718954248366013},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"i":{"docs":{},"d":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0196078431372549}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0196078431372549}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.022222222222222223}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01079136690647482},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.012861736334405145},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.04938271604938271}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.008116883116883116},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.02962962962962963},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.020887728459530026},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.024330900243309004}}}}},"n":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.008992805755395683},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0136986301369863},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00974025974025974},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.02768166089965398},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}}},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"@":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}}}}},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.009202453987730062}}}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.018404907975460124},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.023668639053254437},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04830917874396135},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}}}},"/":{"docs":{},"v":{"1":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}},"docs":{}}}}}}},"s":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.02247191011235955},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.026595744680851064},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}}}}},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03414634146341464}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"6":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"docs":{}},"2":{"0":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"4":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"8":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"docs":{}},"3":{"4":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"8":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"docs":{}},"8":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805}}},"docs":{}}}}}}}}}}},"'":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.06829268292682927}}}}}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.025806451612903226},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.07352941176470588},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.03111111111111111},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}},".":{"docs":{},"t":{"docs":{"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176}}},"docs":{}},"9":{"docs":{"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176}}},"docs":{}}}}}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03414634146341464}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.049800796812749},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.050682261208576995},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.07317073170731707},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.021645021645021644}}}}}}}}},"m":{"docs":{},"l":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01263537906137184},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0784313725490196},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.09090909090909091},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.030405405405405407},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.02287581699346405},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.012589928057553957},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.014598540145985401},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.024539877300613498},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.015594541910331383},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.023668639053254437},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024822695035460994},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01598173515981735},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.011363636363636364},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.007502679528403001},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.017341040462427744},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03763440860215054},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.01728395061728395},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.033816425120772944},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195}}}},"i":{"docs":{},"c":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0392156862745098}}},"n":{"docs":{},"c":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00974025974025974},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.023648648648648},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":5.01792828685259},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":5.016339869281046},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":5.008992805755396},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":5.012165450121654},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":5.015337423312883},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":5.027027027027027},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":5.017543859649122},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":5.017751479289941},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.0144927536231885},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":5.022321428571429},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.0177304964539005},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":5.025510204081633},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":5.023041474654378},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.046052631578947366}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}},"(":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":5.003610108303249},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":5.004566210045662},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":5.012121212121212},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":5.014388489208633},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":5.037837837837838},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":5.045454545454546},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":5.001623376623376},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":5.0130718954248366},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":5.006920415224913},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":5.014814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":5.009756097560976},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":5.018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":5.028985507246377},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":5.022471910112359},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":5.024390243902439},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":5.002143622722401},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":5.0602409638554215},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":5.065789473684211},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":5.038043478260869},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":5.006451612903226},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":5.0134228187919465},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":5.029411764705882},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":5.01010101010101},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":5.0088888888888885},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":5.010443864229765},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":5.011560693641618},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":5.045045045045045},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":5.03932584269663},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":5.055555555555555},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":5.016260162601626},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":5.055555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":5.004866180048662},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":5.029411764705882},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":5.010752688172043},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":5.004938271604939},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":5.037234042553192},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":5.014814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":5.044444444444444},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.057471264367816},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":5.03954802259887},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":5.034825870646766},"coverage.html":{"ref":"coverage.html","tf":0.13486842105263158}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"e":{"docs":{},"t":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602}}}},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871}}}}}}},"g":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122}}}}},"f":{"docs":{},"o":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"r":{"docs":{},"m":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.02768166089965398},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.012589928057553957},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.015005359056806002},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"m":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}}}}}},"s":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}},".":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}},"o":{"docs":{},"n":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0196078431372549},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.014634146341463415}}}}}}}}},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.024330900243309004},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.049079754601226995},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.030612244897959183},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.007305194805194805},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.02422145328719723},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.04504504504504504},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.035483870967741936},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.026845637583892617},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.020202020202020204},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.02349869451697128},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.02023121387283237},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.008116883116883116},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}},"(":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}},"s":{"docs":{},":":{"docs":{},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}}},"o":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.057971014492753624},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.02702702702702703},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.028089887640449437},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.04065040650406504},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.026595744680851064},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781}}}}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0392156862745098}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.032679738562091505},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0170316301703163},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03571428571428571},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.018050541516245487},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0319634703196347},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.013054830287206266},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.023121387283236993},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.08888888888888889},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"docs":{}},"2":{"6":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"docs":{}},"3":{"1":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"6":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"docs":{}},"4":{"1":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"docs":{}},"5":{"3":{"docs":{"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}}},"docs":{}},"6":{"2":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301}}},"docs":{}},"7":{"7":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105}},".":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"0":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"4":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"8":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"2":{"2":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"6":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"3":{"0":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"4":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"8":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"4":{"2":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"6":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"5":{"0":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"4":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"8":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"6":{"9":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"7":{"3":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"7":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"8":{"1":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"5":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}}},"docs":{}},"docs":{}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.014634146341463415},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}},".":{"docs":{},"t":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"7":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"docs":{}},"9":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176}}},"docs":{}}}}}}}}}}}},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676}}}}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.07729468599033816},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182}}}},"k":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558}}}},"g":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}},"i":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.033783783783783786}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":5.026315789473684},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":5.024096385542169},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497}},"i":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.012589928057553957},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.045454545454545456},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.012861736334405145},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.05555555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}}}}},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}},"k":{"docs":{},"e":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03260869565217391},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03389830508474576},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}},"u":{"docs":{},"m":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.03783783783783784},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03804347826086957},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.03932584269662921},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.03723404255319149},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03954802259887006},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}}}},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"l":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.016216216216216217},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.016304347826086956},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":5.016304347826087},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}},"n":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}},"d":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}},"r":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.10122699386503067},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.06306306306306306},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.023668639053254437},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.061224489795918366},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":5.117117117117117},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":5.0184049079754605},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.029585798816568046},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.06818181818181818},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.06666666666666667}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},"u":{"docs":{},"m":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"u":{"docs":{},"t":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.050359712230215826}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.026845637583892617},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.044444444444444446}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0196078431372549},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.013333333333333334}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.016949152542374}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":10.1},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":5.017316017316017},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658}}}}}}}}}}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}}}}}}}},"e":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561}},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"n":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}},"v":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.051094890510948905},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.047337278106508875},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":5.093548387096774},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.053691275167785234},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.05555555555555555},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.10666666666666667},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.06005221932114883},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.06358381502890173},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":5.009732360097324},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":5.005780346820809},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308}}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":5.007575757575758},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":5.007832898172324},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":5.0088888888888885},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":5.0134228187919465},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":5.029411764705882},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.029880478087649404},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.029239766081871343},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.030303030303030304},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.03597122302158273},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602}}}}}},"d":{"5":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}}}}}},"m":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}},"s":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.017316017316017316}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}},"e":{"docs":{},"w":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.04081632653061224},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.016216216216216217},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.03614457831325301},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.039473684210526314},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.016304347826086956},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.015957446808510637},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.034482758620689655},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.014925373134328358},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":5.01685393258427},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.024390243902439025}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.04065040650406504}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.008992805755395683},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02158273381294964},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03260869565217391},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.020134228187919462},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.08888888888888889},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03389830508474576},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.029850746268656716}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}},"o":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.018433179723502304},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.07878787878787878}},"i":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488}},".":{"docs":{},"t":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061}}},"docs":{}},"2":{"1":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061}}},"docs":{}},"docs":{}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}}}}}}}}}}},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.07352941176470588},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.06896551724137931},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.027777777777779}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.056179775280898875}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0697211155378486},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0457516339869281},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.04316546762589928},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.038929440389294405},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.06306306306306306},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.0682261208576998},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.04609929078014184},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.02888086642599278},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0410958904109589},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.01948051948051948},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.04498269896193772},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.02926829268292683},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.04072883172561629},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.030303030303030304},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.02610966057441253},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.028901734104046242},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.056790123456790124}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036}}}},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.037848605577689244},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.013071895424836602},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0170316301703163},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.05214723926380368},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.03898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.04608294930875576},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.013054830287206266},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.014450867052023121},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"j":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.029585798816568046}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.024875621890547265}},"b":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}},"g":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.012175324675324676},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01730103806228374},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.021621621621621623},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.021739130434782608},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.02127659574468085},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.014925373134328358}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.02702702702702703},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.026595744680851064},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.014925373134328358}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0136986301369863},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.016891891891891893},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0099601593625498},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.013071895424836602},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.008992805755395683},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.024330900243309004},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.018404907975460124},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.023668639053254437},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.024154589371980676},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.026785714285714284},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0053590568060021436},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.025252525252525252},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.02610966057441253},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.028901734104046242},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.03225806451612903},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"e":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.016339869281045753},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.012589928057553957},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.019464720194647202},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.018404907975460124},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.007502679528403001},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.040268456375838924},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.12}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}}},"d":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.013333333333333334}}}}},"s":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.07228915662650602},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.05263157894736842},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"h":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.06818181818181818},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}},".":{"docs":{},"t":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"6":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"docs":{}},"2":{"1":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"5":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"docs":{}},"3":{"1":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"docs":{}},"8":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444}}},"docs":{}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549}}}},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.029411764705882353},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.04329004329004329},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01079136690647482},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.016245487364620937},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0196078431372549},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.08695652173913043},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.011789924973204717},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"4":{"docs":{"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406}}},"docs":{}},"8":{"docs":{"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406}}},"docs":{}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.015337423312883436},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.07246376811594203},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.024390243902439025}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.040268456375838924},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}}}},"e":{"docs":{},"r":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009}}},"7":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009}}},"docs":{}},"5":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009}}},"9":{"docs":{"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009}}},"docs":{}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02027027027027027},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.03680981595092025},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.03550295857988166},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.02040816326530612},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00597609561752988},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561}}}}}},"i":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0267639902676399},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905}}}}},"p":{"docs":{},"u":{"docs":{},"p":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02877697841726619}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"a":{"docs":{},"d":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.016339869281045753},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.036101083032490974},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.011363636363636364},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.020761245674740483},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"e":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":0.2},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.02287581699346405},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01618705035971223},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.014598540145985401},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0273972602739726},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.045454545454545456},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.01714898177920686},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.020202020202020204},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.023121387283236993},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.018018018018018018},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.022222222222222223},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.06504065040650407},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.05555555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.027777777777777776},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":5.016260162601626},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242}}}}}}}}},"d":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01730103806228374},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.032520325203252036},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.02962962962962963}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04054054054054054},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.03386454183266932},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.032679738562091505},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.025179856115107913},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0364963503649635},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.049079754601226995},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.042884990253411304},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.029585798816568046},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.043478260869565216},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.05357142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03546099290780142},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.030612244897959183},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.02968036529680365},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.022508038585209004},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.04040404040404041},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.04960835509138381},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.03757225433526012},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.03209876543209877}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}}},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":5.022222222222222},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.03571428571428571}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}}}}},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.055776892430278883},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.02147239263803681},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.05458089668615984},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0136986301369863},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}},"u":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}}}}}},"\"":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.04183266932270916},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.04093567251461988}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"2":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728}}},"3":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728}}},"4":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728}}},"docs":{}}}}}}}},"i":{"docs":{},"r":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.02962962962962963}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}}},"v":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454}},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.03636363636363636},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.09352517985611511},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.11235955056179775}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775}},".":{"docs":{},"t":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"2":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547}}},"7":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775}}},"docs":{}},"6":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775}}},"docs":{}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01079136690647482},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.01461038961038961},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.012861736334405145}},"r":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558}}}}}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"x":{"docs":{},"j":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.010830324909747292},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}},"f":{"docs":{},"c":{"3":{"3":{"3":{"9":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"4":{"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}},"docs":{}},"docs":{}},"docs":{}},"8":{"2":{"2":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}}}},"docs":{}},"docs":{}},"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778}}}},"a":{"docs":{},"w":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.08333333333333333}}}}}},"s":{"docs":{},"s":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02027027027027027},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.0199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.016339869281045753},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.008992805755395683},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.012165450121654502},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.015337423312883436},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.025510204081632654},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00684931506849315},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.04142011834319527}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}}}}}}}}}},"t":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.08484848484848485},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.04316546762589928},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.013422818791946308}}}},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.01932367149758454},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02158273381294964},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.02702702702702703},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.0449438202247191},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.033707865168539325},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.03389830508474576},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.03980099502487562}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"e":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}},"n":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}},"f":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.010380622837370242},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.02702702702702703}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.040268456375838924},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.058823529411764705}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.058823529411764705},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.012987012987012988},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.07246376811594203},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00964630225080386},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}},"m":{"docs":{"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.03636363636363636},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.04316546762589928}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.013513513513513514},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.06306306306306306},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"overview.html":{"ref":"overview.html","tf":0.16666666666666666},"modules.html":{"ref":"modules.html","tf":0.1},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":5.077922077922078}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.025974025974025976},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.025974025974025976},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":5.018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.005847953216374269},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.012987012987012988},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":5.055555555555555},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.025974025974025976},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.009202453987730062},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":5.003898635477583},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.015306122448979591},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.007220216606498195}}}}}}}},"i":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}},"c":{"docs":{},"h":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.017777777777777778}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.009025270758122744},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558}}},"y":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646}}}}}}}}}}}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.025974025974025976},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.009202453987730062},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":5.023668639053255},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}},"i":{"docs":{},"o":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0018050541516245488},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.006060606060606061},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.022727272727272728},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00487012987012987},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.006535947712418301},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.0034602076124567475},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.009009009009009009},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.014492753623188406},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.011235955056179775},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.07317073170731707},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.006711409395973154},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.0044444444444444444},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}},".":{"docs":{},"t":{"docs":{"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513}}},"docs":{}},"9":{"docs":{"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.012195121951219513}}},"docs":{}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"@":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"3":{"4":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}},"docs":{}},"4":{"8":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"5":{"8":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"7":{"6":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"2":{"3":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"5":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}},"docs":{}},"3":{"9":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"5":{"2":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"6":{"5":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"7":{"4":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"8":{"3":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"9":{"3":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"1":{"3":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"9":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"3":{"5":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"4":{"2":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"9":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"5":{"6":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"6":{"3":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"7":{"0":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"7":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"8":{"7":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}}},"docs":{}},"2":{"8":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}},"docs":{}},"4":{"0":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}},"docs":{}},"5":{"6":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"2":{"5":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"3":{"4":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"4":{"2":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"5":{"1":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.004830917874396135}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"2":{"4":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306}}},"docs":{}},"3":{"8":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}},"docs":{}},"4":{"7":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"3":{"9":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}},"docs":{}},"5":{"4":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"6":{"2":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"8":{"4":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992}}},"docs":{}},"2":{"7":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"3":{"4":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"4":{"1":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"8":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"5":{"5":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"6":{"2":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"9":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"7":{"9":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.04878048780487805},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.013071895424836602},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.03429602888086643},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01598173515981735},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.01818181818181818},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02158273381294964},"coverage.html":{"ref":"coverage.html","tf":0.01644736842105263}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.0392156862745098},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.03806228373702422},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.02962962962962963},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.04390243902439024},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.04504504504504504},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.043478260869565216},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.033707865168539325},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534},"coverage.html":{"ref":"coverage.html","tf":0.02631578947368421}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}},"s":{"docs":{},":":{"1":{"0":{"1":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"7":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"1":{"6":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736}}},"docs":{}},"3":{"3":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368}}},"docs":{}},"docs":{}},"2":{"0":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"4":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"9":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"3":{"4":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"4":{"2":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"6":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"5":{"1":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"6":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"6":{"1":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"8":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"7":{"2":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"8":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"8":{"3":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"9":{"0":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"7":{"docs":{"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"0":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"7":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"1":{"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"2":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"4":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"3":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"7":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"4":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"9":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"5":{"3":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"7":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"6":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"7":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"9":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"8":{"4":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"9":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"docs":{}},"2":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"3":{"2":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"6":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"4":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"4":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"8":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"5":{"2":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"6":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"6":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"7":{"1":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"6":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"8":{"0":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"5":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"9":{"2":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"6":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0008116883116883117}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.026845637583892617},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.04411764705882353},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.03111111111111111},"coverage.html":{"ref":"coverage.html","tf":0.009868421052631578}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"coverage.html":{"ref":"coverage.html","tf":0.013157894736842105}},"s":{"docs":{},":":{"1":{"0":{"8":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003}}},"docs":{}},"5":{"docs":{"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255}}},"9":{"docs":{"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255}}},"docs":{}},"2":{"3":{"docs":{"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255}}},"7":{"docs":{"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255}}},"docs":{}},"3":{"3":{"docs":{"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255}}},"docs":{}},"4":{"7":{"docs":{"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533}}},"docs":{}},"5":{"1":{"docs":{"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533}}},"docs":{}},"6":{"1":{"docs":{"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}},"5":{"docs":{"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}},"9":{"docs":{"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}},"docs":{}},"7":{"8":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801}}},"docs":{}},"9":{"4":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003}}},"docs":{}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"docs":{}},"2":{"0":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"4":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"8":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"docs":{}},"3":{"5":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"9":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"docs":{}},"4":{"3":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"8":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"docs":{}},"9":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0032258064516129032}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}},"docs":{}},"2":{"0":{"docs":{"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}},"9":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428}}},"docs":{}},"4":{"3":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714}}},"docs":{}},"5":{"5":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"7":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}},"2":{"1":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"5":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"9":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}},"9":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}},"docs":{}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"coverage.html":{"ref":"coverage.html","tf":0.006578947368421052}},"s":{"docs":{},":":{"1":{"6":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"2":{"0":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"4":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"8":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"3":{"2":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"6":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"4":{"0":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"4":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"8":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"5":{"2":{"docs":{"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"docs":{}},"6":{"2":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835}}},"docs":{}},"7":{"8":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"5":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"2":{"3":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"3":{"2":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"4":{"3":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"5":{"1":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"5":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"9":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"6":{"4":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"8":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}},"7":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"2":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}},"docs":{}},"2":{"6":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}},"docs":{}},"3":{"4":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}},"docs":{}},"docs":{}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"6":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776}}},"7":{"docs":{"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.027777777777777776}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453},"coverage.html":{"ref":"coverage.html","tf":0.019736842105263157}},"s":{"docs":{},":":{"1":{"0":{"4":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406}}},"9":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406}}},"docs":{}},"1":{"4":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406}}},"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}},"5":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}},"9":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}},"docs":{}},"2":{"3":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}},"7":{"docs":{"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}},"docs":{}},"3":{"7":{"docs":{"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294}}},"docs":{}},"4":{"2":{"docs":{"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294}}},"docs":{}},"5":{"3":{"docs":{"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213}}},"7":{"docs":{"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213}}},"docs":{}},"6":{"2":{"docs":{"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213}}},"docs":{}},"7":{"2":{"docs":{"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875}}},"7":{"docs":{"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875}}},"docs":{}},"8":{"5":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652}}},"docs":{}},"9":{"0":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652}}},"5":{"docs":{"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652}}},"docs":{}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.09090909090909091},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"coverage.html":{"ref":"coverage.html","tf":0.013157894736842105}},"s":{"docs":{},":":{"1":{"1":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338}}},"2":{"docs":{"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338}}},"6":{"docs":{"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105}}},"docs":{}},"2":{"0":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"1":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"2":{"docs":{"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112}}},"docs":{}},"6":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}},"7":{"docs":{"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218}}},"docs":{}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"7":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"2":{"1":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"5":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"9":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"3":{"3":{"docs":{"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.009009009009009009}}},"docs":{}},"docs":{}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"6":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}}},"7":{"docs":{"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}}},"docs":{}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}},"e":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}},"u":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502}}}},"b":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}},"r":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.012175324675324676},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.014705882352941176},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":5.009661835748792},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.03686635944700461},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.029880478087649404},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.016339869281045753},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.025179856115107913},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.031630170316301706},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.015337423312883436},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.02702702702702703},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.043478260869565216},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.031914893617021274},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.013824884792626729},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.021660649819494584},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.007194244604316547},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.043243243243243246},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.045454545454545456},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.011363636363636364},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.032679738562091505},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01730103806228374},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.007407407407407408},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03414634146341464},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.02702702702702703},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.057971014492753624},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.015005359056806002},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.0963855421686747},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.10526315789473684},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.043478260869565216},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.01935483870967742},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.026845637583892617},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.03282828282828283},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.013333333333333334},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.03655352480417755},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.03757225433526012},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0449438202247191},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.08888888888888889},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.032520325203252036},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.05555555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0364963503649635},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.04411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.022222222222222223},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.0425531914893617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.09195402298850575},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.04519774011299435},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.03980099502487562}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01618705035971223},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.012165450121654502},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.014184397163120567},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.044444444444444446},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.015005359056806002},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.013054830287206266},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}},"a":{"docs":{},"l":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.009732360097323601},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}}}},"a":{"docs":{},"k":{"docs":{"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353}}}}},"a":{"docs":{},"m":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.00980392156862745},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01598173515981735},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00964630225080386}}}}}}}},"z":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.020134228187919462}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871}}}}}}}}},"d":{"docs":{},"e":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.016216216216216217},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.016304347826086956},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.015957446808510637},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.03482587064676617}}}},"b":{"docs":{},"l":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}}},"m":{"docs":{},"e":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.01951219512195122},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534}}}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.00967741935483871}}}}}}}}},"t":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"@":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"u":{"docs":{},".":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.013944223107569721},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}}}}}}},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.012903225806451613}},"i":{"docs":{},"d":{"docs":{"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.016129032258064516}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.05673758865248227},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.021621621621621623},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.021739130434782608},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.02247191011235955},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":5.124087591240876},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.014705882352941176},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.026881720430107527},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.04197530864197531},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.0425531914893617},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.0962962962962963},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0072992700729927005},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.05357142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.02127659574468085},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.005221932114882507},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.053763440860215055},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":5.014814814814815},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":5.008928571428571},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":5.016129032258065},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.0056179775280898875},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.015957446808510637},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}}}},"n":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0024330900243309003},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":5.029411764705882},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.01418439716312},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":5.01595744680851},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}},"/":{"docs":{},"v":{"1":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"@":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}},"docs":{}}},"#":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}}}}}}}}}}}},"'":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.01773049645390071},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.024691358024691357}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":5.007407407407407},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.07142857142857142},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":5.088888888888889},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":5.020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.025179856115107913},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.021103896103896104},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.11851851851851852},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.030010718113612004},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.016260162601626018},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}},"i":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.037037037037037035},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286}}}}}}},"t":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.032679738562091505},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03414634146341464},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.08536585365853659},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02364864864864865},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.05976095617529881},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.013071895424836602},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.014598540145985401},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.011695906432748537},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.022321428571428572},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.08294930875576037},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.021621621621621623},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0053590568060021436},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.012048192771084338},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.021739130434782608},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.012626262626262626},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.014450867052023121},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.016853932584269662},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.011111111111111112},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.032520325203252036},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.02127659574468085},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.011494252873563218},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.01694915254237288},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.014925373134328358}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.02702702702702703},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01364522417153996},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":5.0368663594470044},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03389830508474576}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.005780346820809248}}}}},"p":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.019464720194647202}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.02304147465437788},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.036101083032490974},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01598173515981735},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.04242424242424243},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02877697841726619},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.02702702702702703},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.06818181818181818},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.03165584415584415},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.058823529411764705},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.03460207612456748},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.022222222222222223},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.06341463414634146},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.036036036036036036},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.024390243902439025},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.01929260450160772},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.024096385542168676},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.013157894736842105},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.02903225806451613},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.03355704697986577},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.029411764705882353},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.044444444444444446},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.007832898172323759},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.02247191011235955},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.03333333333333333},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.056910569105691054},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.05555555555555555},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0413625304136253},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.11764705882352941},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.016129032258064516},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.027160493827160494},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.026595744680851064},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.05925925925925926},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.044444444444444446},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.022988505747126436},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.04975124378109453},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.004608294930875576}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}},".":{"docs":{},"t":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},":":{"1":{"3":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009}}},"8":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009}}},"docs":{}},"2":{"2":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009}}},"docs":{}},"5":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009}}},"9":{"docs":{"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.008130081300813009}}},"docs":{}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715}}}},"x":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.0064516129032258064}},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.008888888888888889}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.01384083044982699}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.008116883116883116},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.004287245444801715},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.005050505050505051},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}}}},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.004058441558441558}}}}}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0196078431372549},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00796812749003984},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.008992805755395683},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.019464720194647202},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.018018018018018018},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.007797270955165692},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.006493506493506494},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.013071895424836602},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.007502679528403001},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.020202020202020204},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.020887728459530026},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.017341040462427744},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.036036036036036036},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.032520325203252036},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.022222222222222223}},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.017316017316017316}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}},"r":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.05405405405405406},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.026143790849673203},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.019464720194647202},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.018404907975460124},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.027649769585253458},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.021660649819494584},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0273972602739726},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.1566265060240964},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.14473684210526316},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.04504504504504504},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.12222222222222222},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408},"interfaces/User.html":{"ref":"interfaces/User.html","tf":5.160919540229885},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"'":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0170316301703163},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.03571428571428571},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.010101010101010102},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.014450867052023121},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358}}},"i":{"docs":{},"d":{"docs":{"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.024330900243309004},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.015151515151515152},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.015665796344647518},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.017341040462427744}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.033707865168539325}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.001949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.027888446215139442},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.004866180048661801},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.04504504504504504},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.02729044834307992},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.008928571428571428},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.00228310502283105},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.005405405405405406},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.026143790849673203},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03902439024390244},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.0975609756097561},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.005434782608695652},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.0025252525252525255},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.004866180048661801},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.029411764705882353},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.005376344086021506},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0024691358024691358},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.005319148936170213},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.014814814814814815},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.005649717514124294},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.004975124378109453}}}},"n":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00398406374501992},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.003898635477582846}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.014598540145985401}},"l":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.00539568345323741},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.006430868167202572}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.02717391304347826},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}}},"p":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.027607361963190184},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.06912442396313365},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.005681818181818182},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.012165450121654502},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.037037037037037035}},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.007407407407407408}}}}}},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.009876543209876543}}}}}},"i":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}}},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.04316546762589928},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.007305194805194805}}}}}},"e":{"docs":{},"w":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.0033783783783783786},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.00199203187250996},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.01079136690647482},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.014598540145985401},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.04830917874396135},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.00510204081632653},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.03636363636363636},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02877697841726619},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.00974025974025974},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.006920415224913495},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.00975609756097561},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.010718113612004287},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.07352941176470588},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.008670520231213872},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1864406779661017}}},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}}},"r":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.006756756756756757}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.010135135135135136},"injectables/BaseService.html":{"ref":"injectables/BaseService.html","tf":0.035856573705179286},"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.012165450121654502},"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.012269938650306749},"injectables/SmartMirrorModuleConfig.html":{"ref":"injectables/SmartMirrorModuleConfig.html","tf":0.036036036036036036},"injectables/SmartMirrorService.html":{"ref":"injectables/SmartMirrorService.html","tf":0.01949317738791423},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.047337278106508875},"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.05314009661835749},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.013392857142857142},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0070921985815602835},"injectables/TicketService.html":{"ref":"injectables/TicketService.html","tf":0.01020408163265306},"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.018433179723502304},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.05776173285198556},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0273972602739726},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.024242424242424242},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.02877697841726619},"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.032432432432432434},"interfaces/ControlRequest.html":{"ref":"interfaces/ControlRequest.html","tf":0.13636363636363635},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.037337662337662336},"interfaces/EventAttachment.html":{"ref":"interfaces/EventAttachment.html","tf":0.06535947712418301},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.06920415224913495},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.07804878048780488},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.07207207207207207},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.057971014492753624},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.04878048780487805},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.03644158628081458},"interfaces/LoginRequest.html":{"ref":"interfaces/LoginRequest.html","tf":0.04819277108433735},"interfaces/LoginResponse.html":{"ref":"interfaces/LoginResponse.html","tf":0.02631578947368421},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.03260869565217391},"interfaces/Message.html":{"ref":"interfaces/Message.html","tf":0.04516129032258064},"interfaces/MessageAttachment.html":{"ref":"interfaces/MessageAttachment.html","tf":0.040268456375838924},"interfaces/MessageHeader.html":{"ref":"interfaces/MessageHeader.html","tf":0.058823529411764705},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.025252525252525252},"interfaces/MessagePayload.html":{"ref":"interfaces/MessagePayload.html","tf":0.02666666666666667},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.010443864229765013},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.011560693641618497},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.07207207207207207},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.02247191011235955},"interfaces/RegisterRequest.html":{"ref":"interfaces/RegisterRequest.html","tf":0.06666666666666667},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.06504065040650407},"interfaces/SmartMirrorModuleOptions.html":{"ref":"interfaces/SmartMirrorModuleOptions.html","tf":0.1111111111111111},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0535279805352798},"interfaces/TaskLink.html":{"ref":"interfaces/TaskLink.html","tf":0.08823529411764706},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.021505376344086023},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.04938271604938271},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.031914893617021274},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.07407407407407407},"interfaces/Ticket.html":{"ref":"interfaces/Ticket.html","tf":0.08888888888888889},"interfaces/User.html":{"ref":"interfaces/User.html","tf":0.04597701149425287},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.029850746268656716}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.003246753246753247},"interfaces/EventSource.html":{"ref":"interfaces/EventSource.html","tf":0.036585365853658534}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"a":{"docs":{},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.00980392156862745},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.004329004329004329}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"k":{"docs":{"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.022598870056497175},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":5.016949152542373},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.009950248756218905},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.006535947712418301},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.010638297872340425},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.01444043321299639},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0091324200913242},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.01461038961038961},"interfaces/EventAttendee.html":{"ref":"interfaces/EventAttendee.html","tf":0.02768166089965398},"interfaces/EventPerson.html":{"ref":"interfaces/EventPerson.html","tf":0.018018018018018018},"interfaces/EventReminder.html":{"ref":"interfaces/EventReminder.html","tf":0.02247191011235955},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.009732360097323601},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.014814814814814815}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.043243243243243246},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.043478260869565216},"interfaces/Mirror.html":{"ref":"interfaces/Mirror.html","tf":0.06306306306306306},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.05056179775280899},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.047872340425531915},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.05084745762711865},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":5.064676616915423},"coverage.html":{"ref":"coverage.html","tf":0.003289473684210526}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"interfaces/CalendarSettings.html":{"ref":"interfaces/CalendarSettings.html","tf":0.010810810810810811},"interfaces/MailSettings.html":{"ref":"interfaces/MailSettings.html","tf":0.010869565217391304},"interfaces/NewsSetting.html":{"ref":"interfaces/NewsSetting.html","tf":0.011235955056179775},"interfaces/TaskSetting.html":{"ref":"interfaces/TaskSetting.html","tf":0.010638297872340425},"interfaces/WeatherSetting.html":{"ref":"interfaces/WeatherSetting.html","tf":0.011299435028248588},"interfaces/Widget.html":{"ref":"interfaces/Widget.html","tf":0.01990049751243781},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.01694915254237288}}}}}}}},"t":{"docs":{},"h":{"docs":{"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.03414634146341464}}}}}},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}},"r":{"docs":{},"k":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"interfaces/CalendarNotifications.html":{"ref":"interfaces/CalendarNotifications.html","tf":0.012121212121212121},"interfaces/CalendarReminder.html":{"ref":"interfaces/CalendarReminder.html","tf":0.014388489208633094},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0021436227224008574}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976}},"r":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.0032679738562091504},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.010830324909747292},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.0045662100456621}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.02147239263803681},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.01775147928994083}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.003067484662576687}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MirrorService.html":{"ref":"injectables/MirrorService.html","tf":0.006134969325153374}}}}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.011834319526627219}}}}}}}}}}}},"y":{"docs":{"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.007407407407407408}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"modules/SmartMirrorModule.html":{"ref":"modules/SmartMirrorModule.html","tf":0.008658008658008658}}}},"n":{"docs":{},"e":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.0036101083032490976},"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.07407407407407407},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.00857449088960343}}}}}},"q":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0017985611510791368},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0024330900243309003},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.003215434083601286},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.007575757575757576},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.0026109660574412533},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.002890173410404624}},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/CalendarListService.html":{"ref":"injectables/CalendarListService.html","tf":0.013071895424836602},"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.007194244604316547},"injectables/MessagesService.html":{"ref":"injectables/MessagesService.html","tf":0.0170316301703163},"injectables/SocketService.html":{"ref":"injectables/SocketService.html","tf":0.005917159763313609},"injectables/TaskListService.html":{"ref":"injectables/TaskListService.html","tf":0.004464285714285714},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.0035460992907801418},"interfaces/CalendarListQueryOptions.html":{"ref":"interfaces/CalendarListQueryOptions.html","tf":0.01141552511415525},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.0016233766233766235},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0053590568060021436},"interfaces/MessageListQueryOptions.html":{"ref":"interfaces/MessageListQueryOptions.html","tf":0.020202020202020204},"interfaces/MessageQueryOptions.html":{"ref":"interfaces/MessageQueryOptions.html","tf":0.013054830287206266},"interfaces/MessagesListResponse.html":{"ref":"interfaces/MessagesListResponse.html","tf":0.014450867052023121},"interfaces/TaskListQueryOptions.html":{"ref":"interfaces/TaskListQueryOptions.html","tf":0.010752688172043012},"interfaces/TaskQueryOptions.html":{"ref":"interfaces/TaskQueryOptions.html","tf":0.0049382716049382715}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.12077294685990338},"interfaces/EventGadget.html":{"ref":"interfaces/EventGadget.html","tf":0.004878048780487805},"interfaces/EventProperties.html":{"ref":"interfaces/EventProperties.html","tf":0.028985507246376812}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/EventsService.html":{"ref":"injectables/EventsService.html","tf":0.0035971223021582736},"interfaces/EventsQueryOptions.html":{"ref":"interfaces/EventsQueryOptions.html","tf":0.0010718113612004287}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/StorageService.html":{"ref":"injectables/StorageService.html","tf":0.00966183574879227}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/CalendarList.html":{"ref":"interfaces/CalendarList.html","tf":0.005415162454873646},"interfaces/Event.html":{"ref":"interfaces/Event.html","tf":0.002435064935064935},"interfaces/ResponseType.html":{"ref":"interfaces/ResponseType.html","tf":0.024390243902439025},"interfaces/Task.html":{"ref":"interfaces/Task.html","tf":0.0072992700729927005},"interfaces/Tasklist.html":{"ref":"interfaces/Tasklist.html","tf":0.022222222222222223}}}}}},"j":{"docs":{},"w":{"docs":{"injectables/TokenService.html":{"ref":"injectables/TokenService.html","tf":0.009216589861751152}}}},"y":{"docs":{},"y":{"docs":{},"y":{"docs":{},"i":{"docs":{"interfaces/EventDate.html":{"ref":"interfaces/EventDate.html","tf":0.014814814814814815}}}}}}},"length":4660},"corpusTokens":["0","0088aa","03t10:00:00","03t10:00:00z","06","07:00","09.06.17","1","1/2","1/3","1/4","10.06.17","10/10","10/11","100","11/11","14","1521","16/16","18/18","19/19","2","2011","25","250","2500","2822","3","3/3","3/4","33","38/38","4","4/4","4/5","401","40320","41","410","5","5/5","5/6","50","6/6","7/7","75","80","83","9/10","9/9","90","abil","absenc","absolut","accept","access","accessrol","accesstoken","accord","account","accross","acl","action","actual","ad","add","addit","additionalguest","address","administr","agenda","allow","alternatelink","alway","alwaysincludeemail","angular","angular/common","angular/cor","angular/http","angular/ion","angular/platform","anoth","anyon","anyonecanaddself","api","apiurl","app","app.compon","appcompon","appear","appli","applic","appmodul","argument","array","ascend","associ","attach","attachment'","attachment.model","attachment.model.t","attachment.model.ts:11","attachment.model.ts:18","attachment.model.ts:7","attachmentid","attachments.model","attachments.model.t","attachments.model.ts:11","attachments.model.ts:15","attachments.model.ts:19","attachments.model.ts:24","attachments.model.ts:7","attende","attendee'","attendee.model","attendee.model.t","attendee.model.ts:13","attendee.model.ts:17","attendee.model.ts:21","attendee.model.ts:25","attendee.model.ts:29","attendee.model.ts:37","attendee.model.ts:41","attendee.model.ts:45","attendee.model.ts:5","attendee.model.ts:9","attendeesomit","attribut","auth","auth.token","authent","authenticatd","authenticationfailur","authservic","authtoken","authupdatetyp","avail","backgroundcolor","base","base64url","baseservic","basic","basoglu","bearer","befor","belong","between","block","bodi","boolean","bootstrap","both","bound","box","brows","browser","browsermodul","byte","calend","calendar","calendar#calendarlistentri","calendar#ev","calendar/v3/calendar","calendar/v3/users/me/calendarlist","calendarid","calendarlist","calendarlist.list","calendarlistqueryopt","calendarlistservic","calendarnotif","calendarremind","calendarset","call","caller","cancel","case","catch(r","cem","cemizm/smartmirror","cfg","chang","child","chip","citi","class","clear","click","client","cluster_smartmirrormodul","cluster_smartmirrormodule_import","cluster_smartmirrormodule_provid","code","collect","color","colorid","combin","comment","commonmodul","compat","complet","completedmax","completedmin","complianc","compon","confidenti","config","configr","configur","confirm","connect","connect(mirrorid","consist","console.log(\"authent","console.log(err","console.log(r","const","constraint","constructor","constructor(config","constructor(http","constructor(opt","constructor(priv","constructor(servic","constructor(storageservic","constructor(tokenservic","contain","content","control","controlrequest","copi","correspond","count","coverag","creat","createsmartmirrormoduleconfig","createsmartmirrormoduleconfig(opt","creation","creator","creator'","criteria","crud","current","custom","data","date","date.model","date.model.t","date.model.ts:10","date.model.ts:16","date.model.ts:5","date/tim","datetim","day","dd","declar","declin","default","defaultremind","defin","definit","delet","delete(url","deletebyid","deletebyid(id","deliv","dep","depend","describ","descript","detail","determin","differ","direct","discourag","display","displaynam","document","doesn't","draft","draft.messag","drafts.get","drive","dtend","dtstart","due","duemax","duemin","e.g","each","educ","effect","email","empti","encod","end","endpoint","endtimeunspecifi","enhanc","ensur","entir","entri","enum","enumer","epoch","equal","err","error","errorhandl","errorhandler(errorrespons","errorobserv","errorrespons","errorresponse.statu","estim","etag","even","event","event'","event.model","eventattach","eventattende","eventcancel","eventchang","eventcr","eventd","eventgadget","eventperson","eventproperti","eventremind","eventrespons","eventsourc","eventsqueryopt","eventsservic","everyth","exampl","except","exclus","exdat","exist","expand","expir","explicitli","export","exrul","extend","extendedproperti","extern","fals","feed","feedurl","ffffff","field","file","fileid","filenam","fileurl","filter","find","first","flag","follow","forecast","foreground","foregroundcolor","form","format","format=raw","forroot(opt","found","free","free/busi","freebusyread","from:someuser@example.com","frontend","full","function","further","g","gadget","gadget'","gadget.model","gadget.model.t","gadget.model.ts:12","gadget.model.ts:16","gadget.model.ts:20","gadget.model.ts:24","gadget.model.ts:28","gadget.model.ts:34","gadget.model.ts:38","gadget.model.ts:8","gener","geograph","get","get(authtoken","get(id","get(id:str","get(url","getal","getbyid","getbyid(id","getitem","getitem(key","github","given","gmail","gmail.metadata","gmail/v1/us","gone","googl","govern","greater","gsuite/calendar/calendar","gsuite/calendar/events.servic","gsuite/index","gsuite/mail/messages.servic","gsuite/shared/base.servic","gsuite/tasks/task.servic","gsuite/tasks/tasklist.servic","guest","guestscaninviteoth","guestscanmodifi","guestscanseeotherguest","guid","handl","hangout","hangoutlink","hash","head","head(url","header","header.model","header.model.t","header.model.ts:13","header.model.ts:9","height","here","hexadecim","hidden","histori","historyid","html","htmllink","http","httpmodul","https://sm","https://www.googleapis.com","i.","icalendar","icaluid","icon","iconlink","id","id).map","id).map(r","identifi","ignor","imag","immut","import","inact","inbox","includ","includespamtrash","inclus","index","indic","info","inform","inject","injectiontoken","injectiontoken(\"smartmirrormodule_opt","insert","insid","instal","instanc","integ","interact","interfac","intern","internald","internet","invalid","invit","io","io(this.config.rturl","is:unread","item","jw","key","key(index","keyword","kind","label","labelid","larger","last","later","left","legend","level","lexicograph","librari","licens","line","link","link.model","link.model.t","link.model.ts:13","link.model.ts:17","link.model.ts:9","list","list(authtoken","list.model","list.model.t","list.model.ts:10","list.model.ts:14","list.model.ts:18","list.model.ts:22","list.model.ts:26","list.model.ts:30","list.model.ts:34","list.model.ts:38","list.model.ts:42","list.model.ts:46","list.model.ts:50","list.model.ts:54","list.model.ts:58","list.model.ts:69","list.model.ts:73","list.model.ts:77","list.model.ts:81","list.model.ts:85","list.servic","list.service.t","list.service.ts:16","list.service.ts:26","list.service.ts:31","list.service.ts:36","list.service.ts:41","list.service.ts:53","list.service.ts:62","list.service.ts:77","listen","liter","local","localstorag","localstorage.clear","localstorage.getitem(key","localstorage.key(index","localstorage.removeitem(key","localstorage.setitem(key","locat","lock","log","login","login(email","loginr","loginrequest","loginres.accesstoken","loginrespons","loginsucess","lower","made","mail","mailbox","mailset","main","make","manag","mandatori","manipul","map(r","mark","match","maxattende","maxcount","maxim","maximum","maxresult","md5","md5password\").subscribe(r","media","mention","messag","message.model","messageattach","messagehead","messagelistqueryopt","messagepayload","messagequeryopt","messages.attachments.get","messages.get","messageslistrespons","messagesservic","met","metadata","metadatahead","method","migrat","millisecond","mime","mimetyp","minaccessrol","minim","minimum","minut","mirror","mirror).map","mirrorid","mirrorservic","miscellan","mit","mm","mode","models/control","models/index","models/mirror","models/ticket","models/us","modif","modifi","modul","module.opt","modulewithprovid","more","morn","move","ms","multipart","multipl","name","needsact","never","new","newsset","next","nextpagetoken","nextsynctoken","ngmodul","non","normal","note","notif","notifi","notifications.model","notifications.model.t","notifications.model.ts:13","notifications.model.ts:21","notificationset","notwithstand","npm","null","number","oauth","oauthtoken","obj","observ","observable(observ","observable.throw(errorrespons","observer.next(data","obtain","offset","omit","on","onc","opaqu","oper","option","options(url","order","orderbi","organ","origin","originalstarttim","other","otherwis","out","overrid","overview","owner","ownership","page","pagetoken","param","paramet","parent","pars","part","particip","participant'","partid","password","patch","patch(url","path","payload","payload.model","payload.model.t","payload.model.ts:12","payload.model.ts:16","payload.model.ts:21","payload.model.ts:25","payload.model.ts:31","payload.model.ts:8","peopl","per","perform","permiss","person.model","person.model.t","person.model.ts:13","person.model.ts:17","person.model.ts:5","person.model.ts:9","pipe","pixel","place","point","popup","posit","possibl","post","post(url","prefer","present","previou","primari","privat","privatecopi","privateextendedproperti","profil","project","properti","properties.model","properties.model.t","properties.model.ts:14","properties.model.ts:8","propertyname=valu","provid","public","put","put(url","q","queri","raw","rdate","re","read","reader","readm","real","realtim","reason","receiv","record","recur","recurr","recurringeventid","refer","reg","reg).map(r","regardless","regist","register(numb","register(reg","registerrequest","registr","rel","reliabl","remind","reminder.model","reminder.model.t","reminder.model.ts:11","reminder.model.ts:6","reminders.model","reminders.model.t","reminders.model.ts:12","reminders.model.ts:17","remot","remov","removeitem","removeitem(key","repeat","repli","repres","represent","request","request(object.assign(requestopt","request(requestopt","request.t","request.ts:2","request.ts:3","request.ts:4","requestmethod","requestmethod.delet","requestmethod.get","requestmethod.head","requestmethod.opt","requestmethod.patch","requestmethod.post","requestmethod.put","requestopt","requestoptions(requestoptionsarg","requestoptions.head","requestoptions.headers.set(\"author","requestoptions.headers.set('author","requestoptions.url","requestoptionsarg","requir","res.item","res.json","res.messag","reset","resourc","respond","respons","responsestatu","responsetyp","restrict","result","resultsizeestim","retriev","return","rfc","rfc3339","rfc5545","rfc822msgid","right","role","rrule","rss","rturl","run","rxj","rxjs/add/operator/catch","rxjs/add/operator/map","rxjs/observ","rxjs/observable/errorobserv","same","save","savedocument","schedul","scheme","scope","search","section","see","seen","select","self","selflink","send","send(messag","sendrequest","sendrequest(requestoptionsarg","sent","separ","sequenc","server","servic","services/auth.servic","services/index","services/mirror.servic","services/smartmirror.servic","services/socket.servic","services/storage.servic","services/ticket.servic","services/token.servic","set","setitem","setitem(key","share","shared/base.servic","shared/respons","sharedextendedproperti","short","show","showcomplet","showdelet","showhidden","showhiddeninvit","sibl","side","singl","singleev","size","sizeestim","sm","smart","smartmirror","smartmirror.servic","smartmirrormodul","smartmirrormodule.forroot({apiurl","smartmirrormodule_opt","smartmirrormoduleconfig","smartmirrormoduleconfig(opt","smartmirrormoduleopt","smartmirrorservic","smtp","snippet","socket","socket.io","socket.servic","socketservic","someuser@example.com","sourc","source.model","source.model.t","source.model.ts:13","source.model.ts:9","spam","speak","special","specif","specifi","src/gsuite/calendar/calendar","src/gsuite/calendar/ev","src/gsuite/calendar/event.model.t","src/gsuite/calendar/event.model.ts:101","src/gsuite/calendar/event.model.ts:107","src/gsuite/calendar/event.model.ts:115","src/gsuite/calendar/event.model.ts:120","src/gsuite/calendar/event.model.ts:124","src/gsuite/calendar/event.model.ts:130","src/gsuite/calendar/event.model.ts:137","src/gsuite/calendar/event.model.ts:141","src/gsuite/calendar/event.model.ts:145","src/gsuite/calendar/event.model.ts:149","src/gsuite/calendar/event.model.ts:153","src/gsuite/calendar/event.model.ts:157","src/gsuite/calendar/event.model.ts:161","src/gsuite/calendar/event.model.ts:165","src/gsuite/calendar/event.model.ts:17","src/gsuite/calendar/event.model.ts:170","src/gsuite/calendar/event.model.ts:175","src/gsuite/calendar/event.model.ts:179","src/gsuite/calendar/event.model.ts:184","src/gsuite/calendar/event.model.ts:190","src/gsuite/calendar/event.model.ts:21","src/gsuite/calendar/event.model.ts:25","src/gsuite/calendar/event.model.ts:32","src/gsuite/calendar/event.model.ts:36","src/gsuite/calendar/event.model.ts:40","src/gsuite/calendar/event.model.ts:44","src/gsuite/calendar/event.model.ts:48","src/gsuite/calendar/event.model.ts:52","src/gsuite/calendar/event.model.ts:56","src/gsuite/calendar/event.model.ts:61","src/gsuite/calendar/event.model.ts:65","src/gsuite/calendar/event.model.ts:71","src/gsuite/calendar/event.model.ts:76","src/gsuite/calendar/event.model.ts:80","src/gsuite/calendar/event.model.ts:85","src/gsuite/calendar/event.model.ts:92","src/gsuite/calendar/event.model.ts:96","src/gsuite/calendar/events.service.t","src/gsuite/calendar/events.service.ts:101","src/gsuite/calendar/events.service.ts:107","src/gsuite/calendar/events.service.ts:116","src/gsuite/calendar/events.service.ts:133","src/gsuite/calendar/events.service.ts:20","src/gsuite/calendar/events.service.ts:24","src/gsuite/calendar/events.service.ts:29","src/gsuite/calendar/events.service.ts:34","src/gsuite/calendar/events.service.ts:42","src/gsuite/calendar/events.service.ts:46","src/gsuite/calendar/events.service.ts:51","src/gsuite/calendar/events.service.ts:56","src/gsuite/calendar/events.service.ts:61","src/gsuite/calendar/events.service.ts:68","src/gsuite/calendar/events.service.ts:72","src/gsuite/calendar/events.service.ts:78","src/gsuite/calendar/events.service.ts:83","src/gsuite/calendar/events.service.ts:90","src/gsuite/calendar/events.service.ts:97","src/gsuite/mail/messag","src/gsuite/mail/message.model.t","src/gsuite/mail/message.model.ts:16","src/gsuite/mail/message.model.ts:20","src/gsuite/mail/message.model.ts:24","src/gsuite/mail/message.model.ts:28","src/gsuite/mail/message.model.ts:35","src/gsuite/mail/message.model.ts:39","src/gsuite/mail/message.model.ts:43","src/gsuite/mail/message.model.ts:48","src/gsuite/mail/message.model.ts:9","src/gsuite/mail/messages.service.t","src/gsuite/mail/messages.service.ts:108","src/gsuite/mail/messages.service.ts:15","src/gsuite/mail/messages.service.ts:19","src/gsuite/mail/messages.service.ts:23","src/gsuite/mail/messages.service.ts:27","src/gsuite/mail/messages.service.ts:33","src/gsuite/mail/messages.service.ts:47","src/gsuite/mail/messages.service.ts:51","src/gsuite/mail/messages.service.ts:61","src/gsuite/mail/messages.service.ts:65","src/gsuite/mail/messages.service.ts:69","src/gsuite/mail/messages.service.ts:78","src/gsuite/mail/messages.service.ts:94","src/gsuite/shared/base.service.t","src/gsuite/shared/base.service.ts:13","src/gsuite/shared/base.service.ts:27","src/gsuite/shared/base.service.ts:34","src/gsuite/shared/base.service.ts:41","src/gsuite/shared/base.service.ts:48","src/gsuite/shared/base.service.ts:55","src/gsuite/shared/base.service.ts:62","src/gsuite/shared/base.service.ts:69","src/gsuite/shared/base.service.ts:79","src/gsuite/shared/respons","src/gsuite/tasks/task","src/gsuite/tasks/task.model.t","src/gsuite/tasks/task.model.ts:11","src/gsuite/tasks/task.model.ts:15","src/gsuite/tasks/task.model.ts:19","src/gsuite/tasks/task.model.ts:23","src/gsuite/tasks/task.model.ts:27","src/gsuite/tasks/task.model.ts:32","src/gsuite/tasks/task.model.ts:39","src/gsuite/tasks/task.model.ts:43","src/gsuite/tasks/task.model.ts:47","src/gsuite/tasks/task.model.ts:51","src/gsuite/tasks/task.model.ts:55","src/gsuite/tasks/task.model.ts:59","src/gsuite/tasks/task.model.ts:64","src/gsuite/tasks/task.model.ts:68","src/gsuite/tasks/task.model.ts:7","src/gsuite/tasks/task.service.t","src/gsuite/tasks/task.service.ts:16","src/gsuite/tasks/task.service.ts:20","src/gsuite/tasks/task.service.ts:24","src/gsuite/tasks/task.service.ts:28","src/gsuite/tasks/task.service.ts:32","src/gsuite/tasks/task.service.ts:36","src/gsuite/tasks/task.service.ts:40","src/gsuite/tasks/task.service.ts:44","src/gsuite/tasks/task.service.ts:48","src/gsuite/tasks/task.service.ts:52","src/gsuite/tasks/task.service.ts:62","src/gsuite/tasks/task.service.ts:78","src/gsuite/tasks/tasklist.model.t","src/gsuite/tasks/tasklist.model.ts:13","src/gsuite/tasks/tasklist.model.ts:17","src/gsuite/tasks/tasklist.model.ts:21","src/gsuite/tasks/tasklist.model.ts:25","src/gsuite/tasks/tasklist.model.ts:29","src/gsuite/tasks/tasklist.model.ts:9","src/gsuite/tasks/tasklist.service.t","src/gsuite/tasks/tasklist.service.ts:16","src/gsuite/tasks/tasklist.service.ts:20","src/gsuite/tasks/tasklist.service.ts:29","src/gsuite/tasks/tasklist.service.ts:43","src/gsuite/tasks/tasklist.service.ts:55","src/index.t","src/models/control","src/models/enums.t","src/models/mirror.t","src/models/mirror.ts:17","src/models/mirror.ts:21","src/models/mirror.ts:25","src/models/mirror.ts:29","src/models/mirror.ts:33","src/models/ticket.t","src/models/ticket.ts:6","src/models/ticket.ts:7","src/models/user.t","src/models/user.ts:11","src/models/user.ts:12","src/models/user.ts:16","src/models/user.ts:20","src/models/user.ts:21","src/models/user.ts:22","src/models/user.ts:6","src/models/user.ts:7","src/models/widget.t","src/models/widget.ts:104","src/models/widget.ts:109","src/models/widget.ts:11","src/models/widget.ts:114","src/models/widget.ts:15","src/models/widget.ts:19","src/models/widget.ts:23","src/models/widget.ts:27","src/models/widget.ts:37","src/models/widget.ts:42","src/models/widget.ts:53","src/models/widget.ts:57","src/models/widget.ts:62","src/models/widget.ts:72","src/models/widget.ts:77","src/models/widget.ts:85","src/models/widget.ts:90","src/models/widget.ts:95","src/services/auth.service.t","src/services/auth.service.ts:34","src/services/auth.service.ts:48","src/services/auth.service.ts:58","src/services/auth.service.ts:76","src/services/mirror.service.t","src/services/mirror.service.ts:23","src/services/mirror.service.ts:25","src/services/mirror.service.ts:39","src/services/mirror.service.ts:52","src/services/mirror.service.ts:65","src/services/mirror.service.ts:74","src/services/mirror.service.ts:83","src/services/mirror.service.ts:93","src/services/smartmirror.service.t","src/services/smartmirror.service.ts:113","src/services/smartmirror.service.ts:19","src/services/smartmirror.service.ts:35","src/services/smartmirror.service.ts:42","src/services/smartmirror.service.ts:49","src/services/smartmirror.service.ts:56","src/services/smartmirror.service.ts:63","src/services/smartmirror.service.ts:70","src/services/smartmirror.service.ts:77","src/services/smartmirror.service.ts:87","src/services/socket.service.t","src/services/socket.service.ts:16","src/services/socket.service.ts:28","src/services/socket.service.ts:40","src/services/socket.service.ts:56","src/services/storage.service.t","src/services/storage.service.ts:16","src/services/storage.service.ts:25","src/services/storage.service.ts:34","src/services/storage.service.ts:42","src/services/storage.service.ts:51","src/services/ticket.service.t","src/services/ticket.service.ts:24","src/services/ticket.service.ts:38","src/services/ticket.service.ts:47","src/services/token.service.t","src/services/token.service.ts:39","src/services/token.service.ts:54","src/services/token.service.ts:62","src/services/token.service.ts:84","src/utils/module.config.t","src/utils/module.config.ts:12","src/utils/module.config.ts:26","src/utils/module.config.ts:34","src/utils/module.options.t","src/utils/module.options.ts:6","src/utils/module.options.ts:7","stabl","standard","start","start/end","starttim","state","statement","static","statu","still","storag","storage.servic","storageservic","store","string","structur","stuff","subject","subscrib","subsequ","such","suit","summari","summaryoverrid","supersed","suppli","support","supportsattach","svg","synchron","synctoken","system","t","task","task'","task.model","tasklink","tasklist","tasklist.model","tasklistid","tasklistqueryopt","tasklistservic","taskqueryopt","tasks#task","tasks#tasklist","tasks/v1/list","tasks/v1/users/@me/list","taskservic","taskset","tent","term","text","text/plain","theid","themselv","this.api","this.authservice.login(\"cem@basoglu.d","this.config.apiurl","this.errorhandler(r","this.http.request(request","this.invalid","this.mirror","this.mirrorservice.getall().subscribe(mirror","this.options.apiurl","this.options.rturl","this.sendrequest({method","this.service.delete(this.api","this.service.get(this.api","this.service.get(this.api).map(r","this.service.post(this.api","this.service.put(this.api","this.socket","this.socket.connect(id","this.socket.disconnect","this.socket.emit(messag","this.socket.on(messag","this.socket.watch(\"act","this.socket.watch(\"upd","this.storageservice.getitem(tokenkey","this.storageservice.removeitem(tokenkey","this.storageservice.setitem(tokenkey","this.token","this.tokenservice.invalid","this.tokenservice.token","this.upd","this.updates.next(authupdatetype.authenticationfailur","this.updates.next(authupdatetype.loginsucess","this.watch","thread","threadid","ticket","ticketservic","time","timemax","timemin","timestamp","timezon","titl","togeth","token","token(token","token.servic","tokenkey","tokenservic","tokenservice.updates.subscribe(typ","top","total","transpar","trash","trigger","true","type","type.model","type.model.t","type.model.ts:13","type.model.ts:18","type.model.ts:22","type.model.ts:5","type.model.ts:9","typescript","ui","unauthor","undefin","under","underli","uniqu","unless","unread","unspecifi","up","updat","update(mirror","updatedmin","upper","url","us","usag","usedefault","usefactori","user","user'","userid","usevalu","utils/index","utils/module.config","utils/module.opt","valid","valu","var","variabl","verifi","via","view","visibl","void","want","watch","watch(messag","watchcontrolrequest","watchcontrolrequest(id","watchupd","watchupdates(id","way","weather","weatherset","web","webapi.azurewebsites.net/api","week","whether","whole","widget","widgetsid","widgettyp","width","without","won't","work","wrapper","write","writer","yyyi","zone","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nShared library of the smart mirror project\nContains all shared components, directives, pipes and services, used by the smart mirror project.\nInstallation\nTo install this library, run:\n$ npm install @cemizm/smartmirror-shared --saveDocumentation\nA generated documentation of this project can be found here:\nGitHub Pages\nUsage\nAfter the Installation of the library via npm, you can import it into your Angular/Ionic application by adding the SmartMirrorModule to the AppModule:\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {NgModule} from \"@angular/core\";\nimport {AppComponent} from \"./app.component\";\nimport {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Once the shared library is imported, you can use its components, directives, pipes and services in your Angular application:\nimport {MirrorService} from \"@cemizm/smartmirror-shared\";\n\n... \n\n  constructor(private mirrorService: MirrorService) {\n\n  }\n\n  getAll() {\n    this.mirrorService.getAll().subscribe(mirrors => {\n      this.mirrors = mirrors;\n    }, err => {\n      console.log(err);\n    });\n  }License\nMIT © Cem Basoglu\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        41 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    SmartMirrorModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmartMirrorModule.html":{"url":"modules/SmartMirrorModule.html","title":"module - SmartMirrorModule","body":"\n                   \n\n\n  Modules\n  SmartMirrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartMirrorModule\n\n\n\ncluster_SmartMirrorModule_imports\n\n\n\ncluster_SmartMirrorModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nSmartMirrorModule\n\nSmartMirrorModule\n\nSmartMirrorModule -->\n\nCommonModule->SmartMirrorModule\n\n\n\n\n\nHttpModule\n\nHttpModule\n\nSmartMirrorModule -->\n\nHttpModule->SmartMirrorModule\n\n\n\n\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }\n\nSmartMirrorModule -->\n\n{ provide: SmartMirrorModuleConfig, useFactory: createSmartMirrorModuleConfig, deps: [SMARTMIRRORMODULE_OPTIONS] }->SmartMirrorModule\n\n\n\n\n\nSmartMirrorService\n\nSmartMirrorService\n\nSmartMirrorModule -->\n\nSmartMirrorService->SmartMirrorModule\n\n\n\n\n\nSocketService\n\nSocketService\n\nSmartMirrorModule -->\n\nSocketService->SmartMirrorModule\n\n\n\n\n\nBaseService\n\nBaseService\n\nSmartMirrorModule -->\n\nBaseService->SmartMirrorModule\n\n\n\n\n\n\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/index.ts\n        \n\n            \n                Description\n            \n            \n                The shared Angular module for Smart Mirror project\n\n            \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                SmartMirrorService\n                            \n                            \n                                SocketService\n                            \n                            \n                                BaseService\n                            \n                    \n                \n            \n        \n    \n    \n        import {NgModule, ModuleWithProviders, InjectionToken} from \"@angular/core\";\nimport {HttpModule} from \"@angular/http\";\nimport {CommonModule} from \"@angular/common\";\nimport {MirrorService} from \"./services/mirror.service\";\nimport {StorageService} from \"./services/storage.service\";\nimport {TokenService} from \"./services/token.service\";\nimport {SmartMirrorModuleConfig} from \"./utils/module.config\";\nimport {SmartMirrorModuleOptions} from \"./utils/module.options\";\nimport {SmartMirrorService} from \"./services/smartmirror.service\";\nimport {AuthService} from \"./services/auth.service\";\nimport {TicketService} from \"./services/ticket.service\";\nimport {BaseService} from \"./gsuite/shared/base.service\";\nimport {TaskService} from \"./gsuite/tasks/task.service\";\nimport {TaskListService} from \"./gsuite/tasks/tasklist.service\";\nimport {CalendarListService} from \"./gsuite/calendar/calendar-list.service\";\nimport {EventsService} from \"./gsuite/calendar/events.service\";\nimport {MessagesService} from \"./gsuite/mail/messages.service\";\nimport {SocketService} from \"./services/socket.service\";\n\nexport * from './models/index';\nexport * from './services/index';\nexport * from './utils/index'\nexport * from './gsuite/index'\n\nexport const SMARTMIRRORMODULE_OPTIONS = new InjectionToken(\"SMARTMIRRORMODULE_OPTIONS\");\n\n/**\n * The shared Angular module for Smart Mirror project\n *\n * @example\n *\n * import {SmartMirrorModule} from \"@cemizm/smartmirror-shared\";\n *\n * @NgModule({\n *   declarations: [\n *     AppComponent\n *   ],\n *   imports: [\n *     BrowserModule,\n *     SmartMirrorModule.forRoot({apiUrl: 'https://sm-webapi.azurewebsites.net/api'})\n *   ],\n *   providers: [],\n *   bootstrap: [AppComponent]\n * })\n * export class AppModule { }\n *\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpModule\n    ],\n    declarations: [],\n    providers: [\n        {\n            provide: SmartMirrorModuleConfig,\n            useFactory: createSmartMirrorModuleConfig,\n            deps: [\n                SMARTMIRRORMODULE_OPTIONS\n            ]\n        },\n        SmartMirrorService,\n        SocketService,\n        BaseService\n    ]\n})\nexport class SmartMirrorModule {\n    static forRoot(options: SmartMirrorModuleOptions): ModuleWithProviders {\n        return {\n            ngModule: SmartMirrorModule,\n            providers: [\n                {provide: SMARTMIRRORMODULE_OPTIONS, useValue: options},\n                StorageService,\n                TokenService,\n                AuthService,\n                MirrorService,\n                TicketService,\n\n\n                //G-Suite stuff\n                //Tasks\n                TaskService,\n                TaskListService,\n                //Calendars\n                CalendarListService,\n                EventsService,\n                //Gmail\n                MessagesService,\n            ]\n        };\n    }\n}\n\nexport function createSmartMirrorModuleConfig(options: SmartMirrorModuleOptions): SmartMirrorModuleConfig {\n    return new SmartMirrorModuleConfig(options);\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                AuthService class for authenticating and registering users on smart mirror api\nExample Authentication:\nimport {AuthService} from \"@cemizm/smartmirror-shared\";\n...\nlogin() {\n   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n     console.log(res);\n   }, err=> {\n     console.log(err);\n   })\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(tokenService: TokenService, service: SmartMirrorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected TokenService for storing authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        Verifies the authentication token and returns the linked user\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public login\n                                \n                            \n                            \n                                \n                                        \n                                    login(email: void, password: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:58\n                                        \n                                    \n            \n                            \n                                \n                                        Perform the login request and saves the authentication token in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                The Email of the user to login\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                password\n                                                            \n                                                            \n                                                                The Password of the user to login\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(reg: RegisterRequest)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:76\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new User with the given registration details on the smart mirror api\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                reg\n                                                            \n                                                            \n                                                                The registration details of the new user to register.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /auth\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/auth.service.ts:34\n                                        \n                                    \n                            \n                                \n                                    relative url for the authentication api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {User, LoginResponse, RegisterRequest} from \"../models/user\";\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {TokenService} from \"./token.service\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * AuthService class for authenticating and registering users on smart mirror api\n *\n * Example Authentication:\n * ```typescript\n * import {AuthService} from \"@cemizm/smartmirror-shared\";\n * ...\n * login() {\n *   this.authService.login(\"cem@basoglu.de\", \"md5password\").subscribe(res => {\n *     console.log(res);\n *   }, err=> {\n *     console.log(err);\n *   })\n * }\n * ```\n */\n@Injectable()\nexport class AuthService {\n    /**\n     * relative url for the authentication api\n     * @type {string}\n     */\n    private api = \"/auth\";\n\n    /**\n     * Creates the AuthService\n     * @param tokenService Injected TokenService for storing authentication token\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private tokenService: TokenService, private service: SmartMirrorService) {\n    }\n\n    /**\n     * Verifies the authentication token and returns the linked user\n     * @return {Observable} The user linked with the authentication token.\n     */\n    public get(): Observable {\n        return this.service.get(this.api).map(res => res.json());\n    }\n\n    /**\n     * Perform the login request and saves the authentication token in the localStorage\n     * @param email The Email of the user to login\n     * @param password The Password of the user to login\n     * @return {Observable} Login response with the user profile\n     */\n    public login(email: string, password: string): Observable {\n        return this.service.post(this.api + '/', {\n            user: email,\n            password: password\n        }).map(res => {\n            let loginRes: LoginResponse = res.json();\n\n            this.tokenService.Token = loginRes.accessToken;\n\n            return loginRes;\n        });\n    }\n\n    /**\n     * Registers a new User with the given registration details on the smart mirror api\n     * @param reg The registration details of the new user to register.\n     * @return {Observable} void\n     */\n    public register(reg: RegisterRequest): Observable {\n        return this.service.post(this.api + '/register', reg).map(res => {\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/shared/base.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: Http)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:13\n                                        \n                                    \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:27\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public post\n                                \n                            \n                            \n                                \n                                        \n                                    post(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public put\n                                \n                            \n                            \n                                \n                                        \n                                    put(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:41\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public delete\n                                \n                            \n                            \n                                \n                                        \n                                    delete(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public patch\n                                \n                            \n                            \n                                \n                                        \n                                    patch(url: void, token: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:55\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public head\n                                \n                            \n                            \n                                \n                                        \n                                    head(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public options\n                                \n                            \n                            \n                                \n                                        \n                                    options(url: void, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:69\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                    sendRequest(requestOptionsArgs: RequestOptionsArgs, token: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:79\n                                        \n                                    \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : https://www.googleapis.com\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/shared/base.service.ts:13\n                                        \n                                    \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from \"@angular/http\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class BaseService {\n\n    private api = 'https://www.googleapis.com';\n\n    /**\n     * creates the internal smart mirror api service\n     * @param config Injected configuration for remote service\n     * @param tokenService Injected token service for invalidating the authentication token\n     * @param http Injected angular http client used for the remote requests\n     */\n    constructor(private http: Http) {\n    }\n\n    /**\n     * Performs a request with `get` http method.\n     */\n    public get(url: string, token: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, token, options);\n    }\n\n    /**\n     * Performs a request with `post` http method.\n     */\n    public post(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, token, options);\n    }\n\n    /**\n     * Performs a request with `put` http method.\n     */\n    public put(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, token, options);\n    }\n\n    /**\n     * Performs a request with `delete` http method.\n     */\n    public delete(url: string, token: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, token, options);\n    }\n\n    /**\n     * Performs a request with `patch` http method.\n     */\n    public patch(url: string, token: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, token, options);\n    }\n\n    /**\n     * Performs a request with `head` http method.\n     */\n    public head(url: string, token: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, token, options);\n    }\n\n    /**\n     * Performs a request with `options` http method.\n     */\n    public options(url: string, token: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, token, options);\n    }\n\n    /**\n     * extends the request options with stored authentication token and sends the request to the remove service\n     * @param requestOptionsArgs The basic request options arguments\n     * @param options Enhanced request options arguments\n     * @return {Observable} Observable to listen on http response\n     */\n    private sendRequest(requestOptionsArgs: RequestOptionsArgs, token: string, options?: RequestOptionsArgs): Observable {\n\n        const requestOptions = new RequestOptions(requestOptionsArgs);\n\n        requestOptions.url = this.api + requestOptions.url;\n\n        if (!requestOptions.headers) {\n            requestOptions.headers = new Headers();\n        }\n\n        requestOptions.headers.set('Authorization', 'Bearer ' + token);\n\n        const request = new Request(Object.assign(requestOptions, options));\n        return this.http.request(request)\n            .map(res => res);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CalendarListService.html":{"url":"injectables/CalendarListService.html","title":"injectable - CalendarListService","body":"\n                   \n\n\n\n\n\n  Injectables\n  CalendarListService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/calendar-list.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the CalendarListService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, options: CalendarListQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        Returns entries on the user's calendar list.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The users authentication token.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Optional Query Parameters.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /calendar/v3/users/me/calendarList\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasklists api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {CalendarList} from \"./calendar-list.model\";\n\n/**\n * Optional query options for calendarlist.\n */\nexport interface  CalendarListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * The minimum access role for the user in the returned entries. Optional. The default is no restriction.\n     *\n     * Acceptable values are:\n     * \"freeBusyReader\": The user can read free/busy information.\n     * \"owner\": The user can read and modify events and access control lists.\n     * \"reader\": The user can read events that are not private.\n     * \"writer\": The user can read and modify events.\n     */\n    minAccessRole?: string;\n\n    /**\n     *    Token specifying which result page to return. Optional.\n     */\n    pageToken?: string;\n\n    /**\n     * Whether to include deleted calendar list entries in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n\n    /**\n     * Whether to show hidden entries. Optional. The default is False.\n     */\n    showHidden?: boolean;\n\n    /**\n     * Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\n     * It makes the result of this list request contain only entries that have changed since then.\n     * If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned.\n     * All entries deleted and hidden since the previous list request will always be in the result set and\n     * it is not allowed to set showDeleted neither showHidden to False.\n     * To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\n     * If the syncToken expires, the server will respond with a 410 GONE response code and the client\n     * should clear its storage and perform a full synchronization without any syncToken.\n     */\n    syncToken?: string;\n}\n\n@Injectable()\nexport class CalendarListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/calendar/v3/users/me/calendarList';\n\n    /**\n     * Creates the CalendarListService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns entries on the user's calendar list.\n     * @param authToken The users authentication token.\n     * @param options Optional Query Parameters.\n     * @return {Observable} List of calendars for authenticated user.\n     */\n    public list(authToken: string, options?: CalendarListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/events.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:116\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the EventsService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, calendar: void, options: EventsQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:133\n                                        \n                                    \n            \n                            \n                                \n                                        Returns events on the specified calendar.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                token of the authenticated user\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                calendar\n                                                            \n                                                            \n                                                                Calendar identifier. To retrieve calendar IDs call the calendarList.list method.\n            If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Optional query parameters\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /calendar/v3/calendars/\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:116\n                                        \n                                    \n                            \n                                \n                                    relative url to the calendars api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Event} from \"./event.model\";\n\n\n/**\n * Optional query options for events.\n */\nexport interface  EventsQueryOptions {\n    /**\n     * Whether to always include a value in the email field for the organizer, creator and attendees,\n     * even if no real email is available (i.e. a generated, non-working value will be provided).\n     * The use of this option is discouraged and should only be used by clients which cannot handle the\n     * absence of an email address value in the mentioned places. Optional. The default is False.\n     */\n    alwaysIncludeEmail?: boolean;\n    /**\n     * Specifies event ID in the iCalendar format to be included in the response. Optional.\n     */\n    iCalUID?: string;\n    /**\n     * The maximum number of attendees to include in the response.\n     * If there are more than the specified number of attendees, only the participant is returned. Optional.\n     */\n    maxAttendees?: number;\n    /**\n     * Maximum number of events returned on one result page.\n     * By default the value is 250 events. The page size can never be larger than 2500 events. Optional.\n     */\n    maxResults?: number;\n    /**\n     * The order of the events returned in the result. Optional. The default is an unspecified, stable order. \n     * Acceptable values are:\n     * - \"startTime\": Order by the start date/time (ascending).\n     * This is only available when querying single events (i.e. the parameter singleEvents is True) \n     * - \"updated\": Order by last modification time (ascending).\n     */\n    orderBy?: string;\n    /**\n     * Token specifying which result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Extended properties constraint specified as propertyName=value. Matches only private properties.\n     * This parameter might be repeated multiple times to return events that match all given constraints.\n     */\n    privateExtendedProperty?: string;\n    /**\n     * Free text search terms to find events that match these terms in any\n     * field, except for extended properties. Optional.\n     */\n    q?: string;\n    /**\n     * Extended properties constraint specified as propertyName=value. Matches only shared properties.\n     * This parameter might be repeated multiple times to return events that match all given constraints.\n     */\n    sharedExtendedProperty?: string;\n    /**\n     * Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances\n     * of recurring events (but not the underlying recurring event) will still be included if showDeleted and\n     * singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of\n     * deleted events (but not the underlying recurring events) are returned. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Whether to include hidden invitations in the result. Optional. The default is False.\n     */\n    showHiddenInvitations?: boolean;\n    /**\n     * Whether to expand recurring events into instances and only return single one-off events and\n     * instances of recurring events, but not the underlying recurring events themselves. Optional.\n     * The default is False.\n     */\n    singleEvents?: boolean;\n    /**\n     * Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\n     * It makes the result of this list request contain only entries that have changed since then.\n     */\n    syncToken?: string;\n    /**\n     * Upper bound (exclusive) for an event's start time to filter by. Optional.\n     * The default is not to filter by start time. Must be an RFC3339 timestamp with\n     * mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\n     * Milliseconds may be provided but will be ignored.\n     */\n    timeMax?: string;\n    /**\n     * Lower bound (inclusive) for an event's end time to filter by. Optional.\n     * The default is not to filter by end time. Must be an RFC3339 timestamp\n     * with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\n     * Milliseconds may be provided but will be ignored.\n     */\n    timeMin?: string;\n    /**\n     * Time zone used in the response. Optional. The default is the time zone of the calendar.\n     */\n    timeZone?: string;\n    /**\n     * Lower bound for an event's last modification time (as a RFC3339 timestamp) to\n     * filter by. When specified, entries deleted since this time will always be included\n     * regardless of showDeleted. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: string;\n}\n\n@Injectable()\nexport class EventsService {\n    /**\n     * relative url to the calendars api\n     * @type {string}\n     */\n    private api = '/calendar/v3/calendars/';\n\n    /**\n     * Creates the EventsService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns events on the specified calendar.\n     * @param authToken token of the authenticated user\n     * @param calendar Calendar identifier. To retrieve calendar IDs call the calendarList.list method.\n     * If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.\n     * @param options Optional query parameters\n     * @return {Observable} Events on the specified calendar\n     */\n    public list(authToken: string, calendar: string, options?: EventsQueryOptions): Observable> {\n        return this.service.get(this.api + calendar + '/events', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/messages.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:78\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the MessagesService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, userId: void, options: MessageListQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:94\n                                        \n                                    \n            \n                            \n                                \n                                        Lists the messages in the user's mailbox.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                token of the authenticated user\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                The user's email address. The special value me can be used to indicate the authenticated user.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Optional query parameters\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(authToken: void, userId: void, id: void, options: MessageQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:108\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the specified message.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                token of the authenticated user\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                The user's email address. The special value me can be used to indicate the authenticated user.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The ID of the message to retrieve.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Optional query parameters\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /gmail/v1/users/\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:78\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasklists api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {Message} from \"./message.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  MessageListQueryOptions {\n    /**\n     * Include messages from SPAM and TRASH in the results. (Default: false)\n     */\n    includeSpamTrash?: boolean;\n    /**\n     * Only return messages with labels that match all of the specified label IDs.\n     */\n    labelIds?: string;\n    /**\n     * Maximum number of messages to return.\n     */\n    maxResults?: boolean;\n    /**\n     * Page token to retrieve a specific page of results in the list.\n     */\n    pageToken?: string;\n    /**\n     * Only return messages matching the specified query. Supports the same query format as the Gmail search box.\n     * For example, \"from:someuser@example.com rfc822msgid: is:unread\". Parameter cannot be\n     * used when accessing the api using the gmail.metadata scope.\n     */\n    q?: string;\n}\n\nexport interface MessageQueryOptions {\n    /**\n     * The format to return the message in.\n     * Acceptable values are: \n     * - \"full\": Returns the full email message data with body content parsed in the payload field;\n     * the raw field is not used. (default) \n     * - \"metadata\": Returns only email message ID, labels, and email headers. \n     * - \"minimal\": Returns only email message ID and labels; does not return the email headers, body, or payload. \n     * - \"raw\": Returns the full email message data with body content in the raw field as a base64url\n     * encoded string; the payload field is not used.\n     */\n    format?: string;\n    /**\n     * When given and format is METADATA, only include headers specified.\n     */\n    metadataHeaders?: string;\n}\n\n/**\n * Lists the messages in the user's mailbox.\n */\ninterface MessagesListResponse {\n    /**\n     * List of messages.\n     */\n    messages: Array;\n    /**\n     * Token to retrieve the next page of results in the list.\n     */\n    nextPageToken: string;\n    /**\n     * Estimated total number of results.\n     */\n    resultSizeEstimate: number;\n}\n\n@Injectable()\nexport class MessagesService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/gmail/v1/users/';\n\n    /**\n     * Creates the MessagesService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Lists the messages in the user's mailbox.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public list(authToken: string, userId: string, options?: MessageListQueryOptions): Observable> {\n        return this.service.get(this.api + userId + '/messages', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.messages);\n    }\n\n    /**\n     * Gets the specified message.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param id The ID of the message to retrieve.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public get(authToken: string, userId: string, id: string, options?: MessageQueryOptions): Observable {\n        return this.service.get(this.api + userId + '/messages/' + id, authToken, {params: options})\n            .map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorService.html":{"url":"injectables/MirrorService.html","title":"injectable - MirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/mirror.service.ts\n        \n\n            \n                Description\n            \n            \n                MirrorService class for interacting with the remote mirror collection.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService, socket: SocketService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the MirrorService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public watchUpdates\n                                \n                            \n                            \n                                \n                                        \n                                    watchUpdates(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        Watches for Mirror setting updates\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                of the mirror to listen for mirror updates\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public watchControlRequest\n                                \n                            \n                            \n                                \n                                        \n                                    watchControlRequest(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:52\n                                        \n                                    \n            \n                            \n                                \n                                        Watches for control request\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                of the mirror to listen for control request\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getAll\n                                \n                            \n                            \n                                \n                                        \n                                    getAll()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:65\n                                        \n                                    \n            \n                            \n                                \n                                        Gets all Mirrors for authenticated User\n            \n            \n                                        \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getById\n                                \n                            \n                            \n                                \n                                        \n                                    getById(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:74\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the mirror with the given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to request\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public update\n                                \n                            \n                            \n                                \n                                        \n                                    update(mirror: Mirror)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:83\n                                        \n                                    \n            \n                            \n                                \n                                        Updates the given mirror of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mirror\n                                                            \n                                                            \n                                                                The mirror to update\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public deleteById\n                                \n                            \n                            \n                                \n                                        \n                                    deleteById(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:93\n                                        \n                                    \n            \n                            \n                                \n                                        Deletes the mirror with the given id of the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The mirror id to delete\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /mirrors\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:23\n                                        \n                                    \n                            \n                                \n                                    relative url to the mirrors api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private watching\n                                \n                            \n                            \n                                \n                                    watching:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : false\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mirror.service.ts:25\n                                        \n                                    \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {Mirror} from \"../models/mirror\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {SocketService} from \"./socket.service\";\nimport {ControlRequest} from \"../models/control-request\";\n\n/**\n * MirrorService class for interacting with the remote mirror collection.\n */\n@Injectable()\nexport class MirrorService {\n    /**\n     * relative url to the mirrors api\n     * @type {string}\n     */\n    private api = '/mirrors';\n\n    private watching = false;\n\n    /**\n     * Creates the MirrorService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService,\n                private socket: SocketService) {\n    }\n\n    /**\n     * Watches for Mirror setting updates\n     * @param id of the mirror to listen for mirror updates\n     */\n    public watchUpdates(id: string): Observable {\n        if (!this.watching) {\n            this.socket.connect(id);\n            this.watching = true;\n        }\n\n        return this.socket.watch(\"update\");\n    }\n\n    /**\n     * Watches for control request\n     * @param id of the mirror to listen for control request\n     */\n    public watchControlRequest(id: string): Observable {\n        if (!this.watching) {\n            this.socket.connect(id);\n            this.watching = true;\n        }\n\n        return this.socket.watch(\"action\");\n    }\n\n    /**\n     * Gets all Mirrors for authenticated User\n     * @return {Observable}\n     */\n    public getAll(): Observable> {\n        return this.service.get(this.api).map(res => >res.json());\n    }\n\n    /**\n     * Gets the mirror with the given id\n     * @param id The id of the mirror to request\n     * @return {Observable}\n     */\n    public getById(id: string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Updates the given mirror of the authenticated user\n     * @param mirror The mirror to update\n     * @return {Observable}\n     */\n    public update(mirror: Mirror): Observable {\n        return this.service.put(this.api, mirror).map(()=> {\n        });\n    }\n\n    /**\n     * Deletes the mirror with the given id of the authenticated user\n     * @param id The mirror id to delete\n     * @return {Observable}\n     */\n    public deleteById(id: string): Observable {\n        return this.service.delete(this.api + '/' + id).map(()=> {\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartMirrorModuleConfig.html":{"url":"injectables/SmartMirrorModuleConfig.html","title":"injectable - SmartMirrorModuleConfig","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorModuleConfig\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration class for the smart mirror module\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(options: SmartMirrorModuleOptions)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                        creates the configration class with the given options\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                The options to use for configuration\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     ApiUrl\n                                \n                            \n                            \n                                \n                                    ApiUrl:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:26\n                                        \n                                    \n                            \n                                \n                                    The smart mirror api url for the http requests\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     RTUrl\n                                \n                            \n                            \n                                \n                                    RTUrl:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/utils/module.config.ts:34\n                                        \n                                    \n                            \n                                \n                                    The smart mirror realtime service url.\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {SmartMirrorModuleOptions} from \"./module.options\";\n\n/**\n * Configuration class for the smart mirror module\n */\n@Injectable()\nexport class SmartMirrorModuleConfig {\n\n    /**\n     * creates the configration class with the given options\n     * @param options The options to use for configuration\n     */\n    constructor(private options: SmartMirrorModuleOptions) {\n\n    }\n\n    /**\n     * The smart mirror api url for the http requests\n     * @return {string} The Smart Mirror Api url\n     */\n    get ApiUrl(): string {\n        return this.options.apiUrl;\n    }\n\n    /**\n     * The smart mirror realtime service url.\n     * @constructor\n     */\n    get RTUrl(): string {\n        return this.options.rtUrl;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartMirrorService.html":{"url":"injectables/SmartMirrorService.html","title":"injectable - SmartMirrorService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SmartMirrorService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/smartmirror.service.ts\n        \n\n            \n                Description\n            \n            \n                Internal service used by the module to add headers on each http-request and handle unauthorized response\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: SmartMirrorModuleConfig, tokenService: TokenService, http: Http)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        creates the internal smart mirror api service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                config\n                                                            \n                                                            \n                                                                Injected configuration for remote service\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tokenService\n                                                            \n                                                            \n                                                                Injected token service for invalidating the authentication token\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                Injected angular http client used for the remote requests\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:35\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with get http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public post\n                                \n                            \n                            \n                                \n                                        \n                                    post(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with post http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public put\n                                \n                            \n                            \n                                \n                                        \n                                    put(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:49\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with put http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public delete\n                                \n                            \n                            \n                                \n                                        \n                                    delete(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with delete http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public patch\n                                \n                            \n                            \n                                \n                                        \n                                    patch(url: void, body: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:63\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with patch http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public head\n                                \n                            \n                            \n                                \n                                        \n                                    head(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:70\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with head http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public options\n                                \n                            \n                            \n                                \n                                        \n                                    options(url: void, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a request with options http method.\n            \n            \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private sendRequest\n                                \n                            \n                            \n                                \n                                        \n                                    sendRequest(requestOptionsArgs: RequestOptionsArgs, options: RequestOptionsArgs)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:87\n                                        \n                                    \n            \n                            \n                                \n                                        extends the request options with stored authentication token and sends the request to the remove service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                requestOptionsArgs\n                                                            \n                                                            \n                                                                The basic request options arguments\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                options\n                                                            \n                                                            \n                                                                Enhanced request options arguments\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private errorHandler\n                                \n                            \n                            \n                                \n                                        \n                                    errorHandler(errorResponse: Response)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/smartmirror.service.ts:113\n                                        \n                                    \n            \n                            \n                                \n                                        Handles authentication errors and returns errors to the caller\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                errorResponse\n                                                            \n                                                            \n                                                                The errorResponse to handle\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     |\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Http, RequestOptionsArgs, Response, Request, RequestOptions, Headers, RequestMethod} from \"@angular/http\";\nimport {Observable} from \"rxjs\";\nimport {ErrorObservable} from \"rxjs/observable/ErrorObservable\";\n\nimport {TokenService} from \"./token.service\";\nimport {SmartMirrorModuleConfig} from \"../utils/module.config\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Internal service used by the module to add headers on each http-request and handle unauthorized response\n */\n@Injectable()\nexport class SmartMirrorService {\n\n    /**\n     * creates the internal smart mirror api service\n     * @param config Injected configuration for remote service\n     * @param tokenService Injected token service for invalidating the authentication token\n     * @param http Injected angular http client used for the remote requests\n     */\n    constructor(private config: SmartMirrorModuleConfig,\n                private tokenService: TokenService,\n                private http: Http) {\n    }\n\n    /**\n     * Performs a request with `get` http method.\n     */\n    public get(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Get, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `post` http method.\n     */\n    public post(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Post, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `put` http method.\n     */\n    public put(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Put, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `delete` http method.\n     */\n    public delete(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Delete, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `patch` http method.\n     */\n    public patch(url: string, body: any, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Patch, url: url, body: body}, options);\n    }\n\n    /**\n     * Performs a request with `head` http method.\n     */\n    public head(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Head, url: url, body: ''}, options);\n    }\n\n    /**\n     * Performs a request with `options` http method.\n     */\n    public options(url: string, options?: RequestOptionsArgs): Observable {\n        return this.sendRequest({method: RequestMethod.Options, url: url, body: ''}, options);\n    }\n\n    /**\n     * extends the request options with stored authentication token and sends the request to the remove service\n     * @param requestOptionsArgs The basic request options arguments\n     * @param options Enhanced request options arguments\n     * @return {Observable} Observable to listen on http response\n     */\n    private sendRequest(requestOptionsArgs: RequestOptionsArgs, options?: RequestOptionsArgs): Observable {\n\n        let requestOptions = new RequestOptions(requestOptionsArgs);\n\n        requestOptions.url = this.config.ApiUrl + requestOptions.url;\n\n        if (!requestOptions.headers)\n            requestOptions.headers = new Headers();\n\n\n\n        if (this.tokenService.Token)\n            requestOptions.headers.set(\"Authorization\", \"Bearer \" + this.tokenService.Token);\n\n        let request = new Request(requestOptions);\n\n        return this.http.request(request, options)\n            .map(res => res)\n            .catch(res => this.errorHandler(res));\n    }\n\n    /**\n     * Handles authentication errors and returns errors to the caller\n     * @param errorResponse The errorResponse to handle\n     * @return {ErrorObservable} The ErrorObservable to notify the caller\n     */\n    private errorHandler(errorResponse: Response): Observable | ErrorObservable {\n\n        if (errorResponse.status === 401) {\n            this.tokenService.invalidate();\n        }\n\n        return Observable.throw(errorResponse);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketService.html":{"url":"injectables/SocketService.html","title":"injectable - SocketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SocketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/socket.service.ts\n        \n\n            \n                Description\n            \n            \n                MirrorService class for interacting with the remote mirror collection.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: SmartMirrorModuleConfig)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/socket.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the SocketService\n            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public connect\n                                \n                            \n                            \n                                \n                                        \n                                    connect(mirrorId: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/socket.service.ts:28\n                                        \n                                    \n            \n                            \n                                \n                                        connects to the given socket.io service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                mirrorId\n                                                            \n                                                            \n                                                                optional mirror id to subscribe to\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public watch\n                                \n                            \n                            \n                                \n                                        \n                                    watch(message: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/socket.service.ts:40\n                                        \n                                    \n            \n                            \n                                \n                                        Watch to given message\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                message\n                                                            \n                                                            \n                                                                \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public send\n                                \n                            \n                            \n                                \n                                        \n                                    send(message: void, obj: T)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/socket.service.ts:56\n                                        \n                                    \n            \n                            \n                                \n                                        Send message\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                message\n                                                            \n                                                            \n                                                                to send\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                obj\n                                                            \n                                                            \n                                                                to send\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private socket\n                                \n                            \n                            \n                                \n                                    socket:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/socket.service.ts:16\n                                        \n                                    \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {SmartMirrorModuleConfig} from \"../utils/module.config\";\nimport io from \"socket.io-client\";\nimport {Observable} from \"rxjs\";\n\n\n/**\n * MirrorService class for interacting with the remote mirror collection.\n */\n@Injectable()\nexport class SocketService {\n    private socket: any;\n\n    /**\n     * Creates the SocketService\n     */\n    constructor(private config: SmartMirrorModuleConfig) {\n    }\n\n    /**\n     * connects to the given socket.io service\n     * @param mirrorId optional mirror id to subscribe to\n     */\n    public connect(mirrorId?: string) {\n        var cfg = null;\n        if (mirrorId)\n            cfg = {query: 'mirrorId=' + mirrorId};\n\n        this.socket = io(this.config.RTUrl, cfg);\n    }\n\n    /**\n     * Watch to given message\n     * @param message\n     */\n    public watch(message: string): Observable {\n        return new Observable(observer => {\n            this.socket.on(message, (data) => {\n                observer.next(data);\n            });\n            return () => {\n                this.socket.disconnect();\n            };\n        });\n    }\n\n    /**\n     * Send message\n     * @param message to send\n     * @param obj to send\n     */\n    public send(message: string, obj: T): void {\n        this.socket.emit(message, obj);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Wrapper service for crud operations on the local Storage\n\n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     clear\n                                \n                            \n                            \n                                \n            clear()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n                                        Clears the whole localStorage for the application\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getItem\n                                \n                            \n                            \n                                \n            getItem(key: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:25\n                                        \n                                    \n            \n                            \n                                \n                                        Gets an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key to get the value from the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     key\n                                \n                            \n                            \n                                \n            key(index: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:34\n                                        \n                                    \n            \n                            \n                                \n                                        Gets the literal key on the given index in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                index\n                                                            \n                                                            \n                                                                The index in the localStorage to retrieve the literal key for\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeItem\n                                \n                            \n                            \n                                \n            removeItem(key: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Removes an item with the given key from the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to remove\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setItem\n                                \n                            \n                            \n                                \n            setItem(key: void, value: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/storage.service.ts:51\n                                        \n                                    \n            \n                            \n                                \n                                        Sets an item for the given key in the localStorage\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                key\n                                                            \n                                                            \n                                                                The key of the item to set\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                value\n                                                            \n                                                            \n                                                                The value of the item to in the localStorage\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\n\n/**\n * Wrapper service for crud operations on the local Storage\n */\n@Injectable()\nexport class StorageService {\n\n    /**\n     * Clears the whole localStorage for the application\n     */\n    clear(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * Gets an item with the given key from the localStorage\n     * @param key The key to get the value from the localStorage\n     * @return {any} The value for the given key if exists, otherwise null\n     */\n    getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Gets the literal key on the given index in the localStorage\n     * @param index The index in the localStorage to retrieve the literal key for\n     * @return {string} The literal key for the given index\n     */\n    key(index: number): string {\n        return localStorage.key(index);\n    }\n\n    /**\n     * Removes an item with the given key from the localStorage\n     * @param key The key of the item to remove\n     */\n    removeItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    /**\n     * Sets an item for the given key in the localStorage\n     * @param key The key of the item to set\n     * @param value The value of the item to in the localStorage\n     */\n    setItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskListService.html":{"url":"injectables/TaskListService.html","title":"injectable - TaskListService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskListService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the TaskService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, options: TaskListQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:43\n                                        \n                                    \n            \n                            \n                                \n                                        Returns all the authenticated user's task lists\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(authToken: void, tasklist: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:55\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the authenticated user's specified task list.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tasklist\n                                                            \n                                                            \n                                                                Task list identifier.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tasks/v1/users/@me/lists\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:29\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasklists api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Tasklist} from \"./tasklist.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  TaskListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n}\n\n@Injectable()\nexport class TaskListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/tasks/v1/users/@me/lists';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all the authenticated user's task lists\n     * @param authToken The authenticated user's token.\n     * @return {Observable} Tasklists of the authenticated user.\n     */\n    public list(authToken: string, options?: TaskListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n    /**\n     * Returns the authenticated user's specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Specified Tasklist for the authenticated user.\n     */\n    public get(authToken: string, tasklist: string): Observable {\n        return this.service.get(this.api, authToken, {\n            params: {\n                tasklist: tasklist\n            }\n        }).map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: BaseService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the TaskService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with google apis\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public list\n                                \n                            \n                            \n                                \n                                        \n                                    list(authToken: void, tasklist: void, options: TaskQueryOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:78\n                                        \n                                    \n            \n                            \n                                \n                                        Returns all tasks in the specified task list.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                authToken\n                                                            \n                                                            \n                                                                The authenticated user's token.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                tasklist\n                                                            \n                                                            \n                                                                Task list identifier.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tasks/v1/lists/\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    relative url to the tasks api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Task} from \"./task.model\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Optional query parameters for tasks\n */\nexport interface TaskQueryOptions {\n    /**\n     * Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMax?: string;\n    /**\n     * Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMin?: string;\n    /**\n     * Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMax?: string;\n    /**\n     * Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMin?: string;\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n     */\n    showCompleted?: boolean;\n    /**\n     * Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n     */\n    showHidden?: boolean;\n    /**\n     * Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: string;\n\n}\n\n@Injectable()\nexport class TaskService {\n    /**\n     * relative url to the tasks api\n     * @type {string}\n     */\n    private api = '/tasks/v1/lists/';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all tasks in the specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Tasks for specified Tasklist of the authenticated user.\n     */\n\n    public list(authToken: string, tasklist: string, options?: TaskQueryOptions): Observable> {\n        return this.service.get(this.api + tasklist + \"/tasks\", authToken)\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ticket.service.ts\n        \n\n            \n                Description\n            \n            \n                TicketService class for registration of new mirrors\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(service: SmartMirrorService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                service\n                                                            \n                                                            \n                                                                Injected internal http service for interacting with SmartMirror Api\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n                            \n                                \n                                        \n                                    get(id: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n                                        Gets a registration ticket for a new mirror with given id\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                The id of the mirror to create a new registration ticket\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public register\n                                \n                            \n                            \n                                \n                                        \n                                    register(number: void)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:47\n                                        \n                                    \n            \n                            \n                                \n                                        Registers a new mirror with the given ticket number for the authenticated user\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                number\n                                                            \n                                                            \n                                                                The ticket number of the mirror to register with\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns :     Observable<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    Private api\n                                \n                            \n                            \n                                \n                                    api:     \n            \n                                \n                            \n                                \n                                    \n                                        Default value : /tickets\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/ticket.service.ts:24\n                                        \n                                    \n                            \n                                \n                                    relative url to the tickets api\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {SmartMirrorService} from \"./smartmirror.service\";\nimport {Mirror} from \"../models/mirror\";\nimport {Ticket} from \"../models/ticket\";\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n/**\n * TicketService class for registration of new mirrors\n */\n@Injectable()\nexport class TicketService  {\n    /**\n     * relative url to the tickets api\n     * @type {string}\n     */\n    private api = '/tickets';\n\n    /**\n     * Creates the AuthService\n     * @param service Injected internal http service for interacting with SmartMirror Api\n     */\n    constructor(private service: SmartMirrorService) {\n    }\n\n    /**\n     * Gets a registration ticket for a new mirror with given id\n     * @param id The id of the mirror to create a new registration ticket\n     * @return {Observable} ticket for registration\n     */\n    public get(id:string): Observable {\n        return this.service.get(this.api + '/' + id).map(res => res.json());\n    }\n\n    /**\n     * Registers a new mirror with the given ticket number for the authenticated user\n     * @param number The ticket number of the mirror to register with\n     * @return {Observable} the created mirror with default settings\n     */\n    public register(number: string): Observable {\n        return this.service.post(this.api + '/' + number, {}).map(res => res.json());\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/token.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\nExample authentication notifications:\nimport {TokenService} from \"@cemizm/smartmirror-shared\";\n\n...\n\nconstructor(private tokenService: TokenService) {\n   tokenService.Updates.subscribe(type => {\n     console.log(\"Authentication updates: \" + type);\n   });\n}\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(storageService: StorageService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n            \n                            \n                                \n                                        Creates the AuthService\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                storageService\n                                                            \n                                                            \n                                                                Injected StorageService for storing authentication token\n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                     invalidate\n                                \n                            \n                            \n                                \n            invalidate()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:84\n                                        \n                                    \n            \n                            \n                                \n                                        Invalidates the stored token\n            \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                     Token\n                                \n                            \n                            \n                                \n                                    Token:     void\n            \n                                \n                            \n                                \n                                    \n                                        Type :     void\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:62\n                                        \n                                    \n                            \n                                \n                                    Gets the Token of the authenticated user\n            Sets the token of the authenticated user\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updates\n                                \n                            \n                            \n                                \n                                    updates:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:39\n                                        \n                                    \n                            \n                                \n                                    Observable subject for authentication updates\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     Updates\n                                \n                            \n                            \n                                \n                                    Updates:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/token.service.ts:54\n                                        \n                                    \n                            \n                                \n                                    Observable to listen on authentication updates\n            \n                                \n                            \n                            \n                                \n                                  \n                                  \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {StorageService} from \"./storage.service\";\nimport {Subject, Observable} from \"rxjs\";\n\nconst tokenKey = 'auth.token';\n\nexport enum AuthUpdateType {\n    LoginSucess = 1,\n    AuthenticationFailure = 2,\n}\n\n/**\n * Service to access and store the JW-Token in the localStorage and to get notifications on authentication updates\n *\n * Example authentication notifications:\n * ```typescript\n * import {TokenService} from \"@cemizm/smartmirror-shared\";\n *\n * ...\n *\n * constructor(private tokenService: TokenService) {\n *   tokenService.Updates.subscribe(type => {\n *     console.log(\"Authentication updates: \" + type);\n *   });\n * }\n * ```\n */\n@Injectable()\nexport class TokenService {\n\n    /**\n     * Observable subject for authentication updates\n     * @type {Subject}\n     */\n    private updates = new Subject();\n\n\n    /**\n     * Creates the AuthService\n     * @param storageService Injected StorageService for storing authentication token\n     */\n    constructor(private storageService: StorageService) {\n\n    }\n\n    /**\n     * Observable to listen on authentication updates\n     * @return {Observable} The observable to subscribe authentication updates\n     */\n    get Updates(): Observable {\n        return this.updates;\n    }\n\n    /**\n     * Gets the Token of the authenticated user\n     * @return {string} Token of the authenticatd user\n     */\n    get Token(): string {\n        return this.storageService.getItem(tokenKey);\n    }\n\n    /**\n     * Sets the token of the authenticated user\n     * @param token The Token of the authenticated user\n     */\n    set Token(token: string) {\n        if (!token) {\n            this.invalidate();\n            return;\n        }\n\n        this.updates.next(AuthUpdateType.LoginSucess);\n\n        this.storageService.setItem(tokenKey, token);\n    }\n\n    /**\n     * Invalidates the stored token\n     */\n    invalidate(): void {\n        if (this.Token) {\n            this.updates.next(AuthUpdateType.AuthenticationFailure);\n        }\n\n        this.storageService.removeItem(tokenKey);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarList.html":{"url":"interfaces/CalendarList.html","title":"interface - CalendarList","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarList\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/calendar-list.model.ts\n        \n\n            \n                Description\n            \n            \n                The collection of calendars in the user's calendar list.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessRole\n                                    \n                                \n                                \n                                    \n                                        accessRole:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:69\n                                        \n                                    \n\n                            \n                                \n                                    The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \n\n\"freeBusyReader\" - Provides read access to free/busy information. \n\"reader\" - Provides read access to the calendar. Private events will appear to users with reader access,\nbut event details will be hidden. \n\"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer\naccess, and event details will be visible. \n\"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with\nthe additional ability to see and manipulate ACLs.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        backgroundColor\n                                    \n                                \n                                \n                                    \n                                        backgroundColor:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:46\n                                        \n                                    \n\n                            \n                                \n                                    The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        colorId\n                                    \n                                \n                                \n                                    \n                                        colorId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:42\n                                        \n                                    \n\n                            \n                                \n                                    The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        defaultReminders\n                                    \n                                \n                                \n                                    \n                                        defaultReminders:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:73\n                                        \n                                    \n\n                            \n                                \n                                    The default reminders that the authenticated user has for this calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        deleted\n                                    \n                                \n                                \n                                    \n                                        deleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:26\n                                        \n                                    \n\n                            \n                                \n                                    Description of the calendar. Optional. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        foregroundColor\n                                    \n                                \n                                \n                                    \n                                        foregroundColor:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:50\n                                        \n                                    \n\n                            \n                                \n                                    The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:54\n                                        \n                                    \n\n                            \n                                \n                                    Whether the calendar has been hidden from the list. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    Identifier of the calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource (\"calendar#calendarListEntry\").\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:30\n                                        \n                                    \n\n                            \n                                \n                                    Geographic location of the calendar as free-form text. Optional. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        notificationSettings\n                                    \n                                \n                                \n                                    \n                                        notificationSettings:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    The list of notifications set for this calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        primary\n                                    \n                                \n                                \n                                    \n                                        primary:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:81\n                                        \n                                    \n\n                            \n                                \n                                    Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:58\n                                        \n                                    \n\n                            \n                                \n                                    Whether the calendar content shows up in the calendar UI. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        summary\n                                    \n                                \n                                \n                                    \n                                        summary:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:22\n                                        \n                                    \n\n                            \n                                \n                                    Title of the calendar. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        summaryOverride\n                                    \n                                \n                                \n                                    \n                                        summaryOverride:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:38\n                                        \n                                    \n\n                            \n                                \n                                    The summary that the authenticated user has set for this calendar. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.model.ts:34\n                                        \n                                    \n\n                            \n                                \n                                    The time zone of the calendar. Optional. Read-only.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {CalendarReminder} from \"./calendar-reminders.model\";\nimport {CalendarNotifications} from \"./calendar-notifications.model\";\n/**\n * The collection of calendars in the user's calendar list.\n */\nexport interface CalendarList {\n    /**\n     * Type of the resource (\"calendar#calendarListEntry\").\n     */\n    kind: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Identifier of the calendar.\n     */\n    id: string;\n    /**\n     * Title of the calendar. Read-only.\n     */\n    summary: string;\n    /**\n     * Description of the calendar. Optional. Read-only.\n     */\n    description: string;\n    /**\n     * Geographic location of the calendar as free-form text. Optional. Read-only.\n     */\n    location: string;\n    /**\n     * The time zone of the calendar. Optional. Read-only.\n     */\n    timeZone: string;\n    /**\n     * The summary that the authenticated user has set for this calendar. Optional.\n     */\n    summaryOverride: string;\n    /**\n     * The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition.\n     */\n    colorId: string;\n    /**\n     * The main color of the calendar in the hexadecimal format \"#0088aa\". This property supersedes the index-based colorId property.\n     */\n    backgroundColor: string;\n    /**\n     * The foreground color of the calendar in the hexadecimal format \"#ffffff\". This property supersedes the index-based colorId property.\n     */\n    foregroundColor: string;\n    /**\n     * Whether the calendar has been hidden from the list. Optional. The default is False.\n     */\n    hidden: boolean;\n    /**\n     * Whether the calendar content shows up in the calendar UI. Optional. The default is False.\n     */\n    selected: boolean;\n    /**\n     * The effective access role that the authenticated user has on the calendar. Read-only. Possible values are: \n     * - \"freeBusyReader\" - Provides read access to free/busy information. \n     * - \"reader\" - Provides read access to the calendar. Private events will appear to users with reader access,\n     * but event details will be hidden. \n     * - \"writer\" - Provides read and write access to the calendar. Private events will appear to users with writer\n     * access, and event details will be visible. \n     * - \"owner\" - Provides ownership of the calendar. This role has all of the permissions of the writer role with\n     * the additional ability to see and manipulate ACLs.\n     */\n    accessRole: string;\n    /**\n     * The default reminders that the authenticated user has for this calendar.\n     */\n    defaultReminders: Array;\n    /**\n     * The list of notifications set for this calendar.\n     */\n    notificationSettings: Array;\n    /**\n     * Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.\n     */\n    primary: boolean;\n    /**\n     * Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.\n     */\n    deleted: boolean\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarListQueryOptions.html":{"url":"interfaces/CalendarListQueryOptions.html","title":"interface - CalendarListQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarListQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/calendar-list.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query options for calendarlist.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of task lists returned on one page. Optional. The default is 100.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        minAccessRole\n                                    \n                                \n                                \n                                    \n                                        minAccessRole:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:26\n                                        \n                                    \n\n                            \n                                \n                                    The minimum access role for the user in the returned entries. Optional. The default is no restriction.\nAcceptable values are:\n\"freeBusyReader\": The user can read free/busy information.\n\"owner\": The user can read and modify events and access control lists.\n\"reader\": The user can read events that are not private.\n\"writer\": The user can read and modify events.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:31\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying which result page to return. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showDeleted\n                                    \n                                \n                                \n                                    \n                                        showDeleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:36\n                                        \n                                    \n\n                            \n                                \n                                    Whether to include deleted calendar list entries in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showHidden\n                                    \n                                \n                                \n                                    \n                                        showHidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:41\n                                        \n                                    \n\n                            \n                                \n                                    Whether to show hidden entries. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        syncToken\n                                    \n                                \n                                \n                                    \n                                        syncToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-list.service.ts:53\n                                        \n                                    \n\n                            \n                                \n                                    Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\nIt makes the result of this list request contain only entries that have changed since then.\nIf only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned.\nAll entries deleted and hidden since the previous list request will always be in the result set and\nit is not allowed to set showDeleted neither showHidden to False.\nTo ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\nIf the syncToken expires, the server will respond with a 410 GONE response code and the client\nshould clear its storage and perform a full synchronization without any syncToken.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {CalendarList} from \"./calendar-list.model\";\n\n/**\n * Optional query options for calendarlist.\n */\nexport interface  CalendarListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * The minimum access role for the user in the returned entries. Optional. The default is no restriction.\n     *\n     * Acceptable values are:\n     * \"freeBusyReader\": The user can read free/busy information.\n     * \"owner\": The user can read and modify events and access control lists.\n     * \"reader\": The user can read events that are not private.\n     * \"writer\": The user can read and modify events.\n     */\n    minAccessRole?: string;\n\n    /**\n     *    Token specifying which result page to return. Optional.\n     */\n    pageToken?: string;\n\n    /**\n     * Whether to include deleted calendar list entries in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n\n    /**\n     * Whether to show hidden entries. Optional. The default is False.\n     */\n    showHidden?: boolean;\n\n    /**\n     * Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\n     * It makes the result of this list request contain only entries that have changed since then.\n     * If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned.\n     * All entries deleted and hidden since the previous list request will always be in the result set and\n     * it is not allowed to set showDeleted neither showHidden to False.\n     * To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.\n     * If the syncToken expires, the server will respond with a 410 GONE response code and the client\n     * should clear its storage and perform a full synchronization without any syncToken.\n     */\n    syncToken?: string;\n}\n\n@Injectable()\nexport class CalendarListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/calendar/v3/users/me/calendarList';\n\n    /**\n     * Creates the CalendarListService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns entries on the user's calendar list.\n     * @param authToken The users authentication token.\n     * @param options Optional Query Parameters.\n     * @return {Observable} List of calendars for authenticated user.\n     */\n    public list(authToken: string, options?: CalendarListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarNotifications.html":{"url":"interfaces/CalendarNotifications.html","title":"interface - CalendarNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarNotifications\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/calendar-notifications.model.ts\n        \n\n            \n                Description\n            \n            \n                Notification Settings for a calendar.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-notifications.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    The method used to deliver the notification. Possible values are:\n\n\"email\" - Reminders are sent via email.\n\"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.\nSMS reminders are only available for Google Apps for Work, Education, and Government customers.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-notifications.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The type of notification. Possible values are:\n\n\"eventCreation\" - Notification sent when a new event is put on the calendar. \n\"eventChange\" - Notification sent when an event is changed.  \n\"eventCancellation\" - Notification sent when an event is cancelled.  \n\"eventResponse\" - Notification sent when an event is changed.  \n\"agenda\" - An agenda with the events of the day (sent out in the morning).\n\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface CalendarNotifications {\n    /**\n     * The type of notification. Possible values are:\n     * - \"eventCreation\" - Notification sent when a new event is put on the calendar. \n     * - \"eventChange\" - Notification sent when an event is changed.  \n     * - \"eventCancellation\" - Notification sent when an event is cancelled.  \n     * - \"eventResponse\" - Notification sent when an event is changed.  \n     * - \"agenda\" - An agenda with the events of the day (sent out in the morning).\n     */\n        type: string;\n\n    /**\n     *The method used to deliver the notification. Possible values are:\n     * - \"email\" - Reminders are sent via email.\n     * - \"sms\" - Reminders are sent via SMS. This value is read-only and is ignored on inserts and updates.\n     * SMS reminders are only available for Google Apps for Work, Education, and Government customers.\n     */\n    method: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarReminder.html":{"url":"interfaces/CalendarReminder.html","title":"interface - CalendarReminder","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarReminder\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/calendar-reminders.model.ts\n        \n\n            \n                Description\n            \n            \n                Reminder settings for a calendar.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-reminders.model.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    The method used by this reminder. Possible values are: \n\n\"email\" - Reminders are sent via email. \n\"sms\" - Reminders are sent via SMS. These are only available for Google Apps for Work,\nEducation, and Government customers. Requests to set SMS reminders for other account types are ignored. \n\"popup\" - Reminders are sent via a UI popup.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        minutes\n                                    \n                                \n                                \n                                    \n                                        minutes:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/calendar-reminders.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Number of minutes before the start of the event when the reminder should trigger.\nValid values are between 0 and 40320 (4 weeks in minutes).\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface CalendarReminder {\n    /**\n     * The method used by this reminder. Possible values are: \n     * - \"email\" - Reminders are sent via email. \n     * - \"sms\" - Reminders are sent via SMS. These are only available for Google Apps for Work,\n     * Education, and Government customers. Requests to set SMS reminders for other account types are ignored. \n     * - \"popup\" - Reminders are sent via a UI popup.\n     */\n    method: string;\n    /**\n     * Number of minutes before the start of the event when the reminder should trigger.\n     * Valid values are between 0 and 40320 (4 weeks in minutes).\n     */\n    minutes: number\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CalendarSettings.html":{"url":"interfaces/CalendarSettings.html","title":"interface - CalendarSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CalendarSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        calendarId\n                                    \n                                \n                                \n                                    \n                                        calendarId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:114\n                                        \n                                    \n\n                            \n                                \n                                    the google calendar id to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:104\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:109\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControlRequest.html":{"url":"interfaces/ControlRequest.html","title":"interface - ControlRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ControlRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/control-request.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/control-request.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        mirrorId\n                                    \n                                \n                                \n                                    \n                                        mirrorId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/control-request.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/control-request.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface ControlRequest {\n    mirrorId: string;\n    action: string;\n    payload: any;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Event.html":{"url":"interfaces/Event.html","title":"interface - Event","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Event\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event.model.ts\n        \n\n            \n                Description\n            \n            \n                An event in a calendar.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        anyoneCanAddSelf\n                                    \n                                \n                                \n                                    \n                                        anyoneCanAddSelf:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:153\n                                        \n                                    \n\n                            \n                                \n                                    Whether anyone can invite themselves to the event (currently works for Google+ events only). Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        attachments\n                                    \n                                \n                                \n                                    \n                                        attachments:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:190\n                                        \n                                    \n\n                            \n                                \n                                    File attachments for the event. Currently only Google Drive attachments are supported.\nIn order to modify attachments the supportsAttachments request parameter should be set to true.\nThere can be at most 25 attachments per event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        attendees\n                                    \n                                \n                                \n                                    \n                                        attendees:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:130\n                                        \n                                    \n\n                            \n                                \n                                    The attendees of the event. See the Events with attendees guide\nfor more information on scheduling events with other calendar users.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        attendeesOmitted\n                                    \n                                \n                                \n                                    \n                                        attendeesOmitted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:137\n                                        \n                                    \n\n                            \n                                \n                                    Whether attendees may have been omitted from the event's representation. When retrieving an event,\nthis may be due to a restriction specified by the maxAttendee query parameter.\nWhen updating an event, this can be used to only update the participant's response.\nOptional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        colorId\n                                    \n                                \n                                \n                                    \n                                        colorId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:61\n                                        \n                                    \n\n                            \n                                \n                                    The color of the event. This is an ID referring to an entry in the event section\nof the colors definition (see the colors endpoint). Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:40\n                                        \n                                    \n\n                            \n                                \n                                    Creation time of the event. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:     EventPerson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventPerson\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:65\n                                        \n                                    \n\n                            \n                                \n                                    The creator of the event. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:52\n                                        \n                                    \n\n                            \n                                \n                                    Description of the event. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:     EventDate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventDate\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:80\n                                        \n                                    \n\n                            \n                                \n                                    The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        endTimeUnspecified\n                                    \n                                \n                                \n                                    \n                                        endTimeUnspecified:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Whether the end time is actually unspecified. An end time is still provided for compatibility reasons,\neven if this attribute is set to True. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        extendedProperties\n                                    \n                                \n                                \n                                    \n                                        extendedProperties:     EventProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventProperties\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:141\n                                        \n                                    \n\n                            \n                                \n                                    Extended properties of the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        gadget\n                                    \n                                \n                                \n                                    \n                                        gadget:     EventGadget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventGadget\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:149\n                                        \n                                    \n\n                            \n                                \n                                    A gadget that extends this event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        guestsCanInviteOthers\n                                    \n                                \n                                \n                                    \n                                        guestsCanInviteOthers:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:157\n                                        \n                                    \n\n                            \n                                \n                                    Whether attendees other than the organizer can invite others to the event. Optional. The default is True.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        guestsCanModify\n                                    \n                                \n                                \n                                    \n                                        guestsCanModify:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:161\n                                        \n                                    \n\n                            \n                                \n                                    Whether attendees can modify the event. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        guestsCanSeeOtherGuests\n                                    \n                                \n                                \n                                    \n                                        guestsCanSeeOtherGuests:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:165\n                                        \n                                    \n\n                            \n                                \n                                    Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        hangoutLink\n                                    \n                                \n                                \n                                    \n                                        hangoutLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:145\n                                        \n                                    \n\n                            \n                                \n                                    An absolute link to the Google+ hangout associated with this event. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        htmlLink\n                                    \n                                \n                                \n                                    \n                                        htmlLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:36\n                                        \n                                    \n\n                            \n                                \n                                    An absolute link to this event in the Google Calendar Web UI. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iCalUID\n                                    \n                                \n                                \n                                    \n                                        iCalUID:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:120\n                                        \n                                    \n\n                            \n                                \n                                    Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring\nsystems and must be supplied when importing events via the import method.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource (\"calendar#event\").\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:56\n                                        \n                                    \n\n                            \n                                \n                                    Geographic location of the event as free-form text. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        locked\n                                    \n                                \n                                \n                                    \n                                        locked:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:175\n                                        \n                                    \n\n                            \n                                \n                                    Whether this is a locked event copy where no changes can be made to the main event fields\n\"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        organizer\n                                    \n                                \n                                \n                                    \n                                        organizer:     EventPerson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventPerson\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:71\n                                        \n                                    \n\n                            \n                                \n                                    The organizer of the event. If the organizer is also an attendee,\nthis is indicated with a separate entry in attendees with the organizer field set to True.\nTo change the organizer, use the move operation. Read-only, except when importing an event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        originalStartTime\n                                    \n                                \n                                \n                                    \n                                        originalStartTime:     EventDate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventDate\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:101\n                                        \n                                    \n\n                            \n                                \n                                    For an instance of a recurring event, this is the time at which this event would start according to\nthe recurrence data in the recurring event identified by recurringEventId. Immutable.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        privateCopy\n                                    \n                                \n                                \n                                    \n                                        privateCopy:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:170\n                                        \n                                    \n\n                            \n                                \n                                    Whether this is a private event copy where changes are not shared with other copies\non other calendars. Optional. Immutable. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        recurrence\n                                    \n                                \n                                \n                                    \n                                        recurrence:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:92\n                                        \n                                    \n\n                            \n                                \n                                    List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545.\nNote that DTSTART and DTEND lines are not allowed in this field; event start and end times are\nspecified in the start and end fields. This field is omitted for single events or instances of recurring events.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        recurringEventId\n                                    \n                                \n                                \n                                    \n                                        recurringEventId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:96\n                                        \n                                    \n\n                            \n                                \n                                    For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        reminders\n                                    \n                                \n                                \n                                    \n                                        reminders:     EventReminder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventReminder\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:179\n                                        \n                                    \n\n                            \n                                \n                                    Information about the event's reminders for the authenticated user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sequence\n                                    \n                                \n                                \n                                    \n                                        sequence:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:124\n                                        \n                                    \n\n                            \n                                \n                                    Sequence number as per iCalendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     EventSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventSource\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:184\n                                        \n                                    \n\n                            \n                                \n                                    Source from which the event was created. For example, a web page, an email message or any document\nidentifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     EventDate\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventDate\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:76\n                                        \n                                    \n\n                            \n                                \n                                    The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    Status of the event. Optional. Possible values are: \n\n\"confirmed\" - The event is confirmed. This is the default status.  \n\"tentative\" - The event is tentatively confirmed.  \n\"cancelled\" - The event is cancelled. \n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        summary\n                                    \n                                \n                                \n                                    \n                                        summary:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:48\n                                        \n                                    \n\n                            \n                                \n                                    Title of the event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        transparency\n                                    \n                                \n                                \n                                    \n                                        transparency:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:107\n                                        \n                                    \n\n                            \n                                \n                                    Whether the event blocks time on the calendar. Optional. Possible values are: \n\n\"opaque\" - The event blocks time on the calendar. This is the default value. \n\"transparent\" - The event does not block time on the calendar. \n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:44\n                                        \n                                    \n\n                            \n                                \n                                    Last modification time of the event. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event.model.ts:115\n                                        \n                                    \n\n                            \n                                \n                                    Visibility of the event. Optional. Possible values are: \n\n\"default\" - Uses the default visibility for events on the calendar. This is the default value. \n\"public\" - The event is public and event details are visible to all readers of the calendar. \n\"private\" - The event is private and only event attendees may view event details. \n\"confidential\" - The event is private. This value is provided for compatibility reasons.\n\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {EventPerson} from \"./event-person.model\";\nimport {EventDate} from \"./event-date.model\";\nimport {EventAttendee} from \"./event-attendee.model\";\nimport {EventProperties} from \"./event-properties.model\";\nimport {EventGadget} from \"./event-gadget.model\";\nimport {EventReminder} from \"./event-reminder.model\";\nimport {EventSource} from \"./event-source.model\";\nimport {EventAttachment} from \"./event-attachments.model\";\n\n/**\n * An event in a calendar.\n */\nexport interface Event {\n    /**\n     * Type of the resource (\"calendar#event\").\n     */\n    kind: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Opaque identifier of the event. When creating new single or recurring events, you can specify their IDs.\n     */\n    id: string;\n    /**\n     * Status of the event. Optional. Possible values are: \n     * - \"confirmed\" - The event is confirmed. This is the default status.  \n     * - \"tentative\" - The event is tentatively confirmed.  \n     * - \"cancelled\" - The event is cancelled. \n     */\n    status: string;\n    /**\n     * An absolute link to this event in the Google Calendar Web UI. Read-only.\n     */\n    htmlLink: string;\n    /**\n     * Creation time of the event. Read-only.\n     */\n    created: Date;\n    /**\n     * Last modification time of the event. Read-only.\n     */\n    updated: Date;\n    /**\n     * Title of the event.\n     */\n    summary: string;\n    /**\n     * Description of the event. Optional.\n     */\n    description: string;\n    /**\n     * Geographic location of the event as free-form text. Optional.\n     */\n    location: string;\n    /**\n     * The color of the event. This is an ID referring to an entry in the event section\n     * of the colors definition (see the colors endpoint). Optional.\n     */\n    colorId: string;\n    /**\n     * The creator of the event. Read-only.\n     */\n    creator: EventPerson;\n    /**\n     * The organizer of the event. If the organizer is also an attendee,\n     * this is indicated with a separate entry in attendees with the organizer field set to True.\n     * To change the organizer, use the move operation. Read-only, except when importing an event.\n     */\n    organizer: EventPerson;\n\n    /**\n     * The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.\n     */\n    start: EventDate;\n    /**\n     * The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.\n     */\n    end: EventDate;\n    /**\n     * Whether the end time is actually unspecified. An end time is still provided for compatibility reasons,\n     * even if this attribute is set to True. The default is False.\n     */\n    endTimeUnspecified: boolean;\n\n    /**\n     * List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545.\n     * Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are\n     * specified in the start and end fields. This field is omitted for single events or instances of recurring events.\n     */\n    recurrence: Array;\n    /**\n     * For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable.\n     */\n    recurringEventId: string;\n    /**\n     * For an instance of a recurring event, this is the time at which this event would start according to\n     * the recurrence data in the recurring event identified by recurringEventId. Immutable.\n     */\n    originalStartTime: EventDate;\n    /**\n     * Whether the event blocks time on the calendar. Optional. Possible values are: \n     * - \"opaque\" - The event blocks time on the calendar. This is the default value. \n     * - \"transparent\" - The event does not block time on the calendar. \n     */\n    transparency: string;\n    /**\n     * Visibility of the event. Optional. Possible values are: \n     * - \"default\" - Uses the default visibility for events on the calendar. This is the default value. \n     * - \"public\" - The event is public and event details are visible to all readers of the calendar. \n     * - \"private\" - The event is private and only event attendees may view event details. \n     * - \"confidential\" - The event is private. This value is provided for compatibility reasons.\n     */\n    visibility: string;\n    /**\n     * Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring\n     * systems and must be supplied when importing events via the import method.\n     */\n    iCalUID: string;\n    /**\n     * Sequence number as per iCalendar.\n     */\n    sequence: number;\n\n    /**\n     * The attendees of the event. See the Events with attendees guide\n     * for more information on scheduling events with other calendar users.\n     */\n    attendees: Array\n    /**\n     * Whether attendees may have been omitted from the event's representation. When retrieving an event,\n     * this may be due to a restriction specified by the maxAttendee query parameter.\n     * When updating an event, this can be used to only update the participant's response.\n     * Optional. The default is False.\n     */\n    attendeesOmitted: boolean;\n    /**\n     * Extended properties of the event.\n     */\n    extendedProperties: EventProperties;\n    /**\n     * An absolute link to the Google+ hangout associated with this event. Read-only.\n     */\n    hangoutLink: string;\n    /**\n     * A gadget that extends this event.\n     */\n    gadget: EventGadget;\n    /**\n     * Whether anyone can invite themselves to the event (currently works for Google+ events only). Optional. The default is False.\n     */\n    anyoneCanAddSelf: boolean;\n    /**\n     * Whether attendees other than the organizer can invite others to the event. Optional. The default is True.\n     */\n    guestsCanInviteOthers: boolean;\n    /**\n     * Whether attendees can modify the event. Optional. The default is False.\n     */\n    guestsCanModify: boolean;\n    /**\n     * Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.\n     */\n    guestsCanSeeOtherGuests: boolean;\n    /**\n     * Whether this is a private event copy where changes are not shared with other copies\n     * on other calendars. Optional. Immutable. The default is False.\n     */\n    privateCopy: boolean;\n    /**\n     * Whether this is a locked event copy where no changes can be made to the main event fields\n     * \"summary\", \"description\", \"location\", \"start\", \"end\" or \"recurrence\". The default is False. Read-Only.\n     */\n    locked: boolean;\n    /**\n     * Information about the event's reminders for the authenticated user.\n     */\n    reminders: EventReminder;\n    /**\n     * Source from which the event was created. For example, a web page, an email message or any document\n     * identifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.\n     */\n    source: EventSource;\n    /**\n     * File attachments for the event. Currently only Google Drive attachments are supported.\n     * In order to modify attachments the supportsAttachments request parameter should be set to true.\n     * There can be at most 25 attachments per event.\n     */\n    attachments: Array;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventAttachment.html":{"url":"interfaces/EventAttachment.html","title":"interface - EventAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventAttachment\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-attachments.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        fileId\n                                    \n                                \n                                \n                                    \n                                        fileId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attachments.model.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    ID of the attached file. Read-only.\nFor Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        fileUrl\n                                    \n                                \n                                \n                                    \n                                        fileUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attachments.model.ts:7\n                                        \n                                    \n\n                            \n                                \n                                    URL link to the attachment.\nFor adding Google Drive file attachments use the same format as\nin alternateLink property of the Files resource in the Drive API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iconLink\n                                    \n                                \n                                \n                                    \n                                        iconLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attachments.model.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    URL link to the attachment's icon. Read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        mimeType\n                                    \n                                \n                                \n                                    \n                                        mimeType:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attachments.model.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    Internet media type (MIME type) of the attachment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attachments.model.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Attachment title.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventAttachment {\n    /**\n     * URL link to the attachment.\n     * For adding Google Drive file attachments use the same format as\n     * in alternateLink property of the Files resource in the Drive API.\n     */\n    fileUrl: string;\n    /**\n     * Attachment title.\n     */\n    title: string;\n    /**\n     * Internet media type (MIME type) of the attachment.\n     */\n    mimeType: string;\n    /**\n     * URL link to the attachment's icon. Read-only.\n     */\n    iconLink: string;\n    /**\n     * ID of the attached file. Read-only.\n     * For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.\n     */\n    fileId: string\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventAttendee.html":{"url":"interfaces/EventAttendee.html","title":"interface - EventAttendee","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventAttendee\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-attendee.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        additionalGuests\n                                    \n                                \n                                \n                                    \n                                        additionalGuests:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:45\n                                        \n                                    \n\n                            \n                                \n                                    Number of additional guests. Optional. The default is 0.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:41\n                                        \n                                    \n\n                            \n                                \n                                    The attendee's response comment. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The attendee's name, if available. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    The attendee's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    The attendee's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        optional\n                                    \n                                \n                                \n                                    \n                                        optional:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    Whether this is an optional attendee. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        organizer\n                                    \n                                \n                                \n                                    \n                                        organizer:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Whether the attendee is the organizer of the event. Read-only. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Whether the attendee is a resource. Read-only. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        responseStatus\n                                    \n                                \n                                \n                                    \n                                        responseStatus:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    The attendee's response status. Possible values are: \n\n\"needsAction\" - The attendee has not responded to the invitation. \n\"declined\" - The attendee has declined the invitation. \n\"tentative\" - The attendee has tentatively accepted the invitation. \n\"accepted\" - The attendee has accepted the invitation.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        self\n                                    \n                                \n                                \n                                    \n                                        self:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-attendee.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventAttendee {\n    /**\n     * The attendee's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API\n     */\n    id: string;\n    /**\n     * The attendee's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API\n     */\n    email: string;\n    /**\n     * The attendee's name, if available. Optional.\n     */\n    displayName: string;\n    /**\n     * Whether the attendee is the organizer of the event. Read-only. The default is False.\n     */\n    organizer: boolean;\n    /**\n     * Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.\n     */\n    self: boolean;\n    /**\n     * Whether the attendee is a resource. Read-only. The default is False.\n     */\n    resource: boolean;\n    /**\n     * Whether this is an optional attendee. Optional. The default is False.\n     */\n    optional: boolean;\n    /**\n     * The attendee's response status. Possible values are: \n     * - \"needsAction\" - The attendee has not responded to the invitation. \n     * - \"declined\" - The attendee has declined the invitation. \n     * - \"tentative\" - The attendee has tentatively accepted the invitation. \n     * - \"accepted\" - The attendee has accepted the invitation.\n     */\n    responseStatus: string;\n    /**\n     * The attendee's response comment. Optional.\n     */\n    comment: string;\n    /**\n     * Number of additional guests. Optional. The default is 0.\n     */\n    additionalGuests: number;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventDate.html":{"url":"interfaces/EventDate.html","title":"interface - EventDate","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventDate\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-date.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-date.model.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    The date, in the format \"yyyy-mm-dd\", if this is an all-day event.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dateTime\n                                    \n                                \n                                \n                                    \n                                        dateTime:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-date.model.ts:10\n                                        \n                                    \n\n                            \n                                \n                                    The time, as a combined date-time value.\nA time zone offset is required unless a time zone is explicitly specified in timeZone.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-date.model.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    The time zone in which the time is specified.\nFor recurring events this field is required and specifies the time zone in which the recurrence is expanded.\nFor single events this field is optional and indicates a custom time zone for the event start/end.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventDate {\n    /**\n     * The date, in the format \"yyyy-mm-dd\", if this is an all-day event.\n     */\n    date: Date;\n    /**\n     * The time, as a combined date-time value.\n     * A time zone offset is required unless a time zone is explicitly specified in timeZone.\n     */\n    dateTime: Date;\n    /**\n     * The time zone in which the time is specified.\n     * For recurring events this field is required and specifies the time zone in which the recurrence is expanded.\n     * For single events this field is optional and indicates a custom time zone for the event start/end.\n     */\n    timeZone: string\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventGadget.html":{"url":"interfaces/EventGadget.html","title":"interface - EventGadget","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventGadget\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-gadget.model.ts\n        \n\n            \n                Description\n            \n            \n                A gadget that extends an event.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:34\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's display mode. Optional. Possible values are: \n\n\"icon\" - The gadget displays next to the event's title in the calendar view. \n\"chip\" - The gadget displays when the event is clicked. \n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's height in pixels. The height must be an integer greater than 0. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iconLink\n                                    \n                                \n                                \n                                    \n                                        iconLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's icon URL. The URL scheme must be HTTPS.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's URL. The URL scheme must be HTTPS.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        preferences\n                                    \n                                \n                                \n                                    \n                                        preferences:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:38\n                                        \n                                    \n\n                            \n                                \n                                    Preferences of the gadget.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-gadget.model.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    The gadget's width in pixels. The width must be an integer greater than 0. Optional.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventGadget {\n    /**\n     * The gadget's type.\n     */\n        type: string;\n    /**\n     * The gadget's title.\n     */\n    title: string;\n    /**\n     * The gadget's URL. The URL scheme must be HTTPS.\n     */\n    link: string;\n    /**\n     * The gadget's icon URL. The URL scheme must be HTTPS.\n     */\n    iconLink: string;\n    /**\n     * The gadget's width in pixels. The width must be an integer greater than 0. Optional.\n     */\n    width: number;\n    /**\n     * The gadget's height in pixels. The height must be an integer greater than 0. Optional.\n     */\n    height: number;\n    /**\n     * The gadget's display mode. Optional. Possible values are: \n     * - \"icon\" - The gadget displays next to the event's title in the calendar view. \n     * - \"chip\" - The gadget displays when the event is clicked. \n     */\n    display: string;\n    /**\n     * Preferences of the gadget.\n     */\n    preferences: { [key: string]: string};\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventPerson.html":{"url":"interfaces/EventPerson.html","title":"interface - EventPerson","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventPerson\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-person.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-person.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The creator's name, if available.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-person.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    The creator's email address, if available.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-person.model.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    The creator's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        self\n                                    \n                                \n                                \n                                    \n                                        self:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-person.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventPerson {\n    /**\n     * The creator's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API.\n     */\n    id: string;\n    /**\n     * The creator's email address, if available.\n     */\n    email: string;\n    /**\n     * The creator's name, if available.\n     */\n    displayName: string;\n    /**\n     * Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.\n     */\n    self: boolean\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventProperties.html":{"url":"interfaces/EventProperties.html","title":"interface - EventProperties","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventProperties\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-properties.model.ts\n        \n\n            \n                Description\n            \n            \n                Extended properties of the event.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        private\n                                    \n                                \n                                \n                                    \n                                        private:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-properties.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    Properties that are private to the copy of the event that appears on this calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        shared\n                                    \n                                \n                                \n                                    \n                                        shared:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-properties.model.ts:14\n                                        \n                                    \n\n                            \n                                \n                                    Properties that are shared between copies of the event on other attendees' calendars.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventProperties {\n    /**\n     * Properties that are private to the copy of the event that appears on this calendar.\n     */\n    private: {\n        [key: string]: string;\n    };\n    /**\n     * Properties that are shared between copies of the event on other attendees' calendars.\n     */\n    shared: {\n        [key: string]: string;\n    };\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventReminder.html":{"url":"interfaces/EventReminder.html","title":"interface - EventReminder","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventReminder\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-reminder.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        overrides\n                                    \n                                \n                                \n                                    \n                                        overrides:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-reminder.model.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set,\nindicates that no reminders are set for this event. The maximum number of override reminders is 5.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        useDefault\n                                    \n                                \n                                \n                                    \n                                        useDefault:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-reminder.model.ts:6\n                                        \n                                    \n\n                            \n                                \n                                    Whether the default reminders of the calendar apply to the event.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {CalendarReminder} from \"./calendar-reminders.model\";\nexport interface EventReminder {\n    /**\n     * Whether the default reminders of the calendar apply to the event.\n     */\n    useDefault: boolean;\n    /**\n     * If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set,\n     * indicates that no reminders are set for this event. The maximum number of override reminders is 5.\n     */\n    overrides: Array;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventSource.html":{"url":"interfaces/EventSource.html","title":"interface - EventSource","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventSource\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/event-source.model.ts\n        \n\n            \n                Description\n            \n            \n                Source from which an event was created. For example, a web page, an email\nmessage or any document identifiable by an URL with HTTP or HTTPS scheme.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-source.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Title of the source; for example a title of a web page or an email subject.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/event-source.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface EventSource {\n    /**\n     * URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.\n     */\n    url: string;\n    /**\n     * Title of the source; for example a title of a web page or an email subject.\n     */\n    title: string\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventsQueryOptions.html":{"url":"interfaces/EventsQueryOptions.html","title":"interface - EventsQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  EventsQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/calendar/events.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query options for events.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        alwaysIncludeEmail\n                                    \n                                \n                                \n                                    \n                                        alwaysIncludeEmail:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Whether to always include a value in the email field for the organizer, creator and attendees,\neven if no real email is available (i.e. a generated, non-working value will be provided).\nThe use of this option is discouraged and should only be used by clients which cannot handle the\nabsence of an email address value in the mentioned places. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iCalUID\n                                    \n                                \n                                \n                                    \n                                        iCalUID:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    Specifies event ID in the iCalendar format to be included in the response. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxAttendees\n                                    \n                                \n                                \n                                    \n                                        maxAttendees:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    The maximum number of attendees to include in the response.\nIf there are more than the specified number of attendees, only the participant is returned. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:34\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of events returned on one result page.\nBy default the value is 250 events. The page size can never be larger than 2500 events. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        orderBy\n                                    \n                                \n                                \n                                    \n                                        orderBy:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:42\n                                        \n                                    \n\n                            \n                                \n                                    The order of the events returned in the result. Optional. The default is an unspecified, stable order. \nAcceptable values are:\n\n\"startTime\": Order by the start date/time (ascending).\nThis is only available when querying single events (i.e. the parameter singleEvents is True) \n\"updated\": Order by last modification time (ascending).\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:46\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying which result page to return. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        privateExtendedProperty\n                                    \n                                \n                                \n                                    \n                                        privateExtendedProperty:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:51\n                                        \n                                    \n\n                            \n                                \n                                    Extended properties constraint specified as propertyName=value. Matches only private properties.\nThis parameter might be repeated multiple times to return events that match all given constraints.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        q\n                                    \n                                \n                                \n                                    \n                                        q:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:56\n                                        \n                                    \n\n                            \n                                \n                                    Free text search terms to find events that match these terms in any\nfield, except for extended properties. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sharedExtendedProperty\n                                    \n                                \n                                \n                                    \n                                        sharedExtendedProperty:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:61\n                                        \n                                    \n\n                            \n                                \n                                    Extended properties constraint specified as propertyName=value. Matches only shared properties.\nThis parameter might be repeated multiple times to return events that match all given constraints.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showDeleted\n                                    \n                                \n                                \n                                    \n                                        showDeleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:68\n                                        \n                                    \n\n                            \n                                \n                                    Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances\nof recurring events (but not the underlying recurring event) will still be included if showDeleted and\nsingleEvents are both False. If showDeleted and singleEvents are both True, only single instances of\ndeleted events (but not the underlying recurring events) are returned. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showHiddenInvitations\n                                    \n                                \n                                \n                                    \n                                        showHiddenInvitations:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:72\n                                        \n                                    \n\n                            \n                                \n                                    Whether to include hidden invitations in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        singleEvents\n                                    \n                                \n                                \n                                    \n                                        singleEvents:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:78\n                                        \n                                    \n\n                            \n                                \n                                    Whether to expand recurring events into instances and only return single one-off events and\ninstances of recurring events, but not the underlying recurring events themselves. Optional.\nThe default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        syncToken\n                                    \n                                \n                                \n                                    \n                                        syncToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:83\n                                        \n                                    \n\n                            \n                                \n                                    Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\nIt makes the result of this list request contain only entries that have changed since then.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timeMax\n                                    \n                                \n                                \n                                    \n                                        timeMax:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    Upper bound (exclusive) for an event's start time to filter by. Optional.\nThe default is not to filter by start time. Must be an RFC3339 timestamp with\nmandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\nMilliseconds may be provided but will be ignored.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timeMin\n                                    \n                                \n                                \n                                    \n                                        timeMin:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:97\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound (inclusive) for an event's end time to filter by. Optional.\nThe default is not to filter by end time. Must be an RFC3339 timestamp\nwith mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\nMilliseconds may be provided but will be ignored.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        timeZone\n                                    \n                                \n                                \n                                    \n                                        timeZone:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:101\n                                        \n                                    \n\n                            \n                                \n                                    Time zone used in the response. Optional. The default is the time zone of the calendar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedMin\n                                    \n                                \n                                \n                                    \n                                        updatedMin:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/calendar/events.service.ts:107\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for an event's last modification time (as a RFC3339 timestamp) to\nfilter by. When specified, entries deleted since this time will always be included\nregardless of showDeleted. Optional. The default is not to filter by last modification time.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Event} from \"./event.model\";\n\n\n/**\n * Optional query options for events.\n */\nexport interface  EventsQueryOptions {\n    /**\n     * Whether to always include a value in the email field for the organizer, creator and attendees,\n     * even if no real email is available (i.e. a generated, non-working value will be provided).\n     * The use of this option is discouraged and should only be used by clients which cannot handle the\n     * absence of an email address value in the mentioned places. Optional. The default is False.\n     */\n    alwaysIncludeEmail?: boolean;\n    /**\n     * Specifies event ID in the iCalendar format to be included in the response. Optional.\n     */\n    iCalUID?: string;\n    /**\n     * The maximum number of attendees to include in the response.\n     * If there are more than the specified number of attendees, only the participant is returned. Optional.\n     */\n    maxAttendees?: number;\n    /**\n     * Maximum number of events returned on one result page.\n     * By default the value is 250 events. The page size can never be larger than 2500 events. Optional.\n     */\n    maxResults?: number;\n    /**\n     * The order of the events returned in the result. Optional. The default is an unspecified, stable order. \n     * Acceptable values are:\n     * - \"startTime\": Order by the start date/time (ascending).\n     * This is only available when querying single events (i.e. the parameter singleEvents is True) \n     * - \"updated\": Order by last modification time (ascending).\n     */\n    orderBy?: string;\n    /**\n     * Token specifying which result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Extended properties constraint specified as propertyName=value. Matches only private properties.\n     * This parameter might be repeated multiple times to return events that match all given constraints.\n     */\n    privateExtendedProperty?: string;\n    /**\n     * Free text search terms to find events that match these terms in any\n     * field, except for extended properties. Optional.\n     */\n    q?: string;\n    /**\n     * Extended properties constraint specified as propertyName=value. Matches only shared properties.\n     * This parameter might be repeated multiple times to return events that match all given constraints.\n     */\n    sharedExtendedProperty?: string;\n    /**\n     * Whether to include deleted events (with status equals \"cancelled\") in the result. Cancelled instances\n     * of recurring events (but not the underlying recurring event) will still be included if showDeleted and\n     * singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of\n     * deleted events (but not the underlying recurring events) are returned. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Whether to include hidden invitations in the result. Optional. The default is False.\n     */\n    showHiddenInvitations?: boolean;\n    /**\n     * Whether to expand recurring events into instances and only return single one-off events and\n     * instances of recurring events, but not the underlying recurring events themselves. Optional.\n     * The default is False.\n     */\n    singleEvents?: boolean;\n    /**\n     * Token obtained from the nextSyncToken field returned on the last page of results from the previous list request.\n     * It makes the result of this list request contain only entries that have changed since then.\n     */\n    syncToken?: string;\n    /**\n     * Upper bound (exclusive) for an event's start time to filter by. Optional.\n     * The default is not to filter by start time. Must be an RFC3339 timestamp with\n     * mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\n     * Milliseconds may be provided but will be ignored.\n     */\n    timeMax?: string;\n    /**\n     * Lower bound (inclusive) for an event's end time to filter by. Optional.\n     * The default is not to filter by end time. Must be an RFC3339 timestamp\n     * with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z.\n     * Milliseconds may be provided but will be ignored.\n     */\n    timeMin?: string;\n    /**\n     * Time zone used in the response. Optional. The default is the time zone of the calendar.\n     */\n    timeZone?: string;\n    /**\n     * Lower bound for an event's last modification time (as a RFC3339 timestamp) to\n     * filter by. When specified, entries deleted since this time will always be included\n     * regardless of showDeleted. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: string;\n}\n\n@Injectable()\nexport class EventsService {\n    /**\n     * relative url to the calendars api\n     * @type {string}\n     */\n    private api = '/calendar/v3/calendars/';\n\n    /**\n     * Creates the EventsService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns events on the specified calendar.\n     * @param authToken token of the authenticated user\n     * @param calendar Calendar identifier. To retrieve calendar IDs call the calendarList.list method.\n     * If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.\n     * @param options Optional query parameters\n     * @return {Observable} Events on the specified calendar\n     */\n    public list(authToken: string, calendar: string, options?: EventsQueryOptions): Observable> {\n        return this.service.get(this.api + calendar + '/events', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:12\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:11\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:16\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailSettings.html":{"url":"interfaces/MailSettings.html","title":"interface - MailSettings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MailSettings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of email items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:95\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google mail\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        unread\n                                    \n                                \n                                \n                                    \n                                        unread:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    show only unread email\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/message.model.ts\n        \n\n            \n                Description\n            \n            \n                An email message.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        historyId\n                                    \n                                \n                                \n                                    \n                                        historyId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    The ID of the last history record that modified this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    The immutable ID of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        internalDate\n                                    \n                                \n                                \n                                    \n                                        internalDate:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:35\n                                        \n                                    \n\n                            \n                                \n                                    The internal message creation timestamp (epoch ms), which determines ordering in the inbox.\nFor normal SMTP-received email, this represents the time the message was originally accepted by Google,\nwhich is more reliable than the Date header. However, for API-migrated mail,\nit can be configured by client to be based on the Date header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        labelIds\n                                    \n                                \n                                \n                                    \n                                        labelIds:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    List of IDs of labels applied to this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     MessagePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MessagePayload\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:39\n                                        \n                                    \n\n                            \n                                \n                                    The parsed email structure in the message parts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        raw\n                                    \n                                \n                                \n                                    \n                                        raw:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:48\n                                        \n                                    \n\n                            \n                                \n                                    The entire email message in an RFC 2822 formatted and base64url encoded string.\nReturned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sizeEstimate\n                                    \n                                \n                                \n                                    \n                                        sizeEstimate:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:43\n                                        \n                                    \n\n                            \n                                \n                                    Estimated size in bytes of the message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        snippet\n                                    \n                                \n                                \n                                    \n                                        snippet:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    A short part of the message text.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        threadId\n                                    \n                                \n                                \n                                    \n                                        threadId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message.model.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    The ID of the thread the message belongs to. To add a message or draft to a thread; the following criteria must be met:\n\nThe requested threadId must be specified on the Message or Draft.Message you supply with your request.\nThe References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.\nThe Subject headers must match.\n\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {MessagePayload} from \"./message-payload.model\";\n/**\n * An email message.\n */\nexport interface Message {\n    /**\n     * The immutable ID of the message.\n     */\n    id: string;\n    /**\n     * The ID of the thread the message belongs to. To add a message or draft to a thread; the following criteria must be met:\n     * - The requested threadId must be specified on the Message or Draft.Message you supply with your request.\n     * - The References and In-Reply-To headers must be set in compliance with the RFC 2822 standard.\n     * - The Subject headers must match.\n     */\n    threadId: string;\n    /**\n     * List of IDs of labels applied to this message.\n     */\n    labelIds: Array;\n    /**\n     * A short part of the message text.\n     */\n    snippet: string;\n    /**\n     * The ID of the last history record that modified this message.\n     */\n    historyId: number;\n    /**\n     * The internal message creation timestamp (epoch ms), which determines ordering in the inbox.\n     * For normal SMTP-received email, this represents the time the message was originally accepted by Google,\n     * which is more reliable than the Date header. However, for API-migrated mail,\n     * it can be configured by client to be based on the Date header.\n     */\n    internalDate: number;\n    /**\n     * The parsed email structure in the message parts.\n     */\n    payload: MessagePayload;\n    /**\n     * Estimated size in bytes of the message.\n     */\n    sizeEstimate: number;\n    /**\n     * The entire email message in an RFC 2822 formatted and base64url encoded string.\n     * Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.\n     */\n    raw: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageAttachment.html":{"url":"interfaces/MessageAttachment.html","title":"interface - MessageAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessageAttachment\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/message-attachment.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        attachmentId\n                                    \n                                \n                                \n                                    \n                                        attachmentId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-attachment.model.ts:7\n                                        \n                                    \n\n                            \n                                \n                                    When present, contains the ID of an external attachment that can be retrieved in a\nseparate messages.attachments.get request.\nWhen not present, the entire content of the message part body is contained in the data field.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-attachment.model.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    The body data of a MIME message part as a base64url encoded string.\nMay be empty for MIME container types that have no message body or when the\nbody data is sent as a separate attachment. An attachment ID is present if the\nbody data is contained in a separate attachment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-attachment.model.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Number of bytes for the message part data (encoding notwithstanding).\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface MessageAttachment {\n    /**\n     * When present, contains the ID of an external attachment that can be retrieved in a\n     * separate messages.attachments.get request.\n     * When not present, the entire content of the message part body is contained in the data field.\n     */\n    attachmentId: string;\n    /**\n     * Number of bytes for the message part data (encoding notwithstanding).\n     */\n    size: number;\n    /**\n     * The body data of a MIME message part as a base64url encoded string.\n     * May be empty for MIME container types that have no message body or when the\n     * body data is sent as a separate attachment. An attachment ID is present if the\n     * body data is contained in a separate attachment.\n     */\n    data: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageHeader.html":{"url":"interfaces/MessageHeader.html","title":"interface - MessageHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessageHeader\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/message-header.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the entire message payload, it will contain the standard\nRFC 2822 email headers such as To, From, and Subject.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-header.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    The name of the header before the : separator. For example, To.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-header.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The value of the header after the : separator. For example, someuser@example.com.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface MessageHeader {\n    /**\n     * The name of the header before the : separator. For example, To.\n     */\n    name: string;\n    /**\n     * The value of the header after the : separator. For example, someuser@example.com.\n     */\n    value: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageListQueryOptions.html":{"url":"interfaces/MessageListQueryOptions.html","title":"interface - MessageListQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessageListQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/messages.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query options for tasklist.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        includeSpamTrash\n                                    \n                                \n                                \n                                    \n                                        includeSpamTrash:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    Include messages from SPAM and TRASH in the results. (Default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        labelIds\n                                    \n                                \n                                \n                                    \n                                        labelIds:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Only return messages with labels that match all of the specified label IDs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of messages to return.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Page token to retrieve a specific page of results in the list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        q\n                                    \n                                \n                                \n                                    \n                                        q:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:33\n                                        \n                                    \n\n                            \n                                \n                                    Only return messages matching the specified query. Supports the same query format as the Gmail search box.\nFor example, \"from:someuser@example.com rfc822msgid: is:unread\". Parameter cannot be\nused when accessing the api using the gmail.metadata scope.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {Message} from \"./message.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  MessageListQueryOptions {\n    /**\n     * Include messages from SPAM and TRASH in the results. (Default: false)\n     */\n    includeSpamTrash?: boolean;\n    /**\n     * Only return messages with labels that match all of the specified label IDs.\n     */\n    labelIds?: string;\n    /**\n     * Maximum number of messages to return.\n     */\n    maxResults?: boolean;\n    /**\n     * Page token to retrieve a specific page of results in the list.\n     */\n    pageToken?: string;\n    /**\n     * Only return messages matching the specified query. Supports the same query format as the Gmail search box.\n     * For example, \"from:someuser@example.com rfc822msgid: is:unread\". Parameter cannot be\n     * used when accessing the api using the gmail.metadata scope.\n     */\n    q?: string;\n}\n\nexport interface MessageQueryOptions {\n    /**\n     * The format to return the message in.\n     * Acceptable values are: \n     * - \"full\": Returns the full email message data with body content parsed in the payload field;\n     * the raw field is not used. (default) \n     * - \"metadata\": Returns only email message ID, labels, and email headers. \n     * - \"minimal\": Returns only email message ID and labels; does not return the email headers, body, or payload. \n     * - \"raw\": Returns the full email message data with body content in the raw field as a base64url\n     * encoded string; the payload field is not used.\n     */\n    format?: string;\n    /**\n     * When given and format is METADATA, only include headers specified.\n     */\n    metadataHeaders?: string;\n}\n\n/**\n * Lists the messages in the user's mailbox.\n */\ninterface MessagesListResponse {\n    /**\n     * List of messages.\n     */\n    messages: Array;\n    /**\n     * Token to retrieve the next page of results in the list.\n     */\n    nextPageToken: string;\n    /**\n     * Estimated total number of results.\n     */\n    resultSizeEstimate: number;\n}\n\n@Injectable()\nexport class MessagesService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/gmail/v1/users/';\n\n    /**\n     * Creates the MessagesService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Lists the messages in the user's mailbox.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public list(authToken: string, userId: string, options?: MessageListQueryOptions): Observable> {\n        return this.service.get(this.api + userId + '/messages', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.messages);\n    }\n\n    /**\n     * Gets the specified message.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param id The ID of the message to retrieve.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public get(authToken: string, userId: string, id: string, options?: MessageQueryOptions): Observable {\n        return this.service.get(this.api + userId + '/messages/' + id, authToken, {params: options})\n            .map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagePayload.html":{"url":"interfaces/MessagePayload.html","title":"interface - MessagePayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessagePayload\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/message-payload.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     MessageAttachment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MessageAttachment\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    The message part body for this part, which may be empty for container MIME message parts.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    The filename of the attachment. Only present if this message part represents an attachment.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    List of headers on this message part. For the top-level message part, representing the entire\nmessage payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        mimeType\n                                    \n                                \n                                \n                                    \n                                        mimeType:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    The MIME type of the message part.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        partId\n                                    \n                                \n                                \n                                    \n                                        partId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:8\n                                        \n                                    \n\n                            \n                                \n                                    The immutable ID of the message part.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        parts\n                                    \n                                \n                                \n                                    \n                                        parts:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/message-payload.model.ts:31\n                                        \n                                    \n\n                            \n                                \n                                    The child MIME message parts of this part. This only applies to container MIME message parts,\nfor example multipart/*. For non- container MIME message part types, such as text/plain,\nthis field is empty. For more information, see RFC 1521.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {MessageAttachment} from \"./message-attachment.model\";\nimport {MessageHeader} from \"./message-header.model\";\n\nexport interface MessagePayload {\n    /**\n     * The immutable ID of the message part.\n     */\n    partId: string;\n    /**\n     * The MIME type of the message part.\n     */\n    mimeType: string;\n    /**\n     * The filename of the attachment. Only present if this message part represents an attachment.\n     */\n    filename: string;\n    /**\n     * List of headers on this message part. For the top-level message part, representing the entire\n     * message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.\n     */\n    headers: Array;\n    /**\n     * The message part body for this part, which may be empty for container MIME message parts.\n     */\n    body: MessageAttachment;\n    /**\n     * The child MIME message parts of this part. This only applies to container MIME message parts,\n     * for example multipart/*. For non- container MIME message part types, such as text/plain,\n     * this field is empty. For more information, see RFC 1521.\n     */\n    parts: Array;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageQueryOptions.html":{"url":"interfaces/MessageQueryOptions.html","title":"interface - MessageQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessageQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/messages.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:47\n                                        \n                                    \n\n                            \n                                \n                                    The format to return the message in.\nAcceptable values are: \n\n\"full\": Returns the full email message data with body content parsed in the payload field;\nthe raw field is not used. (default) \n\"metadata\": Returns only email message ID, labels, and email headers. \n\"minimal\": Returns only email message ID and labels; does not return the email headers, body, or payload. \n\"raw\": Returns the full email message data with body content in the raw field as a base64url\nencoded string; the payload field is not used.\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        metadataHeaders\n                                    \n                                \n                                \n                                    \n                                        metadataHeaders:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:51\n                                        \n                                    \n\n                            \n                                \n                                    When given and format is METADATA, only include headers specified.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {Message} from \"./message.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  MessageListQueryOptions {\n    /**\n     * Include messages from SPAM and TRASH in the results. (Default: false)\n     */\n    includeSpamTrash?: boolean;\n    /**\n     * Only return messages with labels that match all of the specified label IDs.\n     */\n    labelIds?: string;\n    /**\n     * Maximum number of messages to return.\n     */\n    maxResults?: boolean;\n    /**\n     * Page token to retrieve a specific page of results in the list.\n     */\n    pageToken?: string;\n    /**\n     * Only return messages matching the specified query. Supports the same query format as the Gmail search box.\n     * For example, \"from:someuser@example.com rfc822msgid: is:unread\". Parameter cannot be\n     * used when accessing the api using the gmail.metadata scope.\n     */\n    q?: string;\n}\n\nexport interface MessageQueryOptions {\n    /**\n     * The format to return the message in.\n     * Acceptable values are: \n     * - \"full\": Returns the full email message data with body content parsed in the payload field;\n     * the raw field is not used. (default) \n     * - \"metadata\": Returns only email message ID, labels, and email headers. \n     * - \"minimal\": Returns only email message ID and labels; does not return the email headers, body, or payload. \n     * - \"raw\": Returns the full email message data with body content in the raw field as a base64url\n     * encoded string; the payload field is not used.\n     */\n    format?: string;\n    /**\n     * When given and format is METADATA, only include headers specified.\n     */\n    metadataHeaders?: string;\n}\n\n/**\n * Lists the messages in the user's mailbox.\n */\ninterface MessagesListResponse {\n    /**\n     * List of messages.\n     */\n    messages: Array;\n    /**\n     * Token to retrieve the next page of results in the list.\n     */\n    nextPageToken: string;\n    /**\n     * Estimated total number of results.\n     */\n    resultSizeEstimate: number;\n}\n\n@Injectable()\nexport class MessagesService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/gmail/v1/users/';\n\n    /**\n     * Creates the MessagesService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Lists the messages in the user's mailbox.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public list(authToken: string, userId: string, options?: MessageListQueryOptions): Observable> {\n        return this.service.get(this.api + userId + '/messages', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.messages);\n    }\n\n    /**\n     * Gets the specified message.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param id The ID of the message to retrieve.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public get(authToken: string, userId: string, id: string, options?: MessageQueryOptions): Observable {\n        return this.service.get(this.api + userId + '/messages/' + id, authToken, {params: options})\n            .map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesListResponse.html":{"url":"interfaces/MessagesListResponse.html","title":"interface - MessagesListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MessagesListResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/mail/messages.service.ts\n        \n\n            \n                Description\n            \n            \n                Lists the messages in the user's mailbox.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        messages\n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:61\n                                        \n                                    \n\n                            \n                                \n                                    List of messages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nextPageToken\n                                    \n                                \n                                \n                                    \n                                        nextPageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:65\n                                        \n                                    \n\n                            \n                                \n                                    Token to retrieve the next page of results in the list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        resultSizeEstimate\n                                    \n                                \n                                \n                                    \n                                        resultSizeEstimate:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/mail/messages.service.ts:69\n                                        \n                                    \n\n                            \n                                \n                                    Estimated total number of results.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {Message} from \"./message.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  MessageListQueryOptions {\n    /**\n     * Include messages from SPAM and TRASH in the results. (Default: false)\n     */\n    includeSpamTrash?: boolean;\n    /**\n     * Only return messages with labels that match all of the specified label IDs.\n     */\n    labelIds?: string;\n    /**\n     * Maximum number of messages to return.\n     */\n    maxResults?: boolean;\n    /**\n     * Page token to retrieve a specific page of results in the list.\n     */\n    pageToken?: string;\n    /**\n     * Only return messages matching the specified query. Supports the same query format as the Gmail search box.\n     * For example, \"from:someuser@example.com rfc822msgid: is:unread\". Parameter cannot be\n     * used when accessing the api using the gmail.metadata scope.\n     */\n    q?: string;\n}\n\nexport interface MessageQueryOptions {\n    /**\n     * The format to return the message in.\n     * Acceptable values are: \n     * - \"full\": Returns the full email message data with body content parsed in the payload field;\n     * the raw field is not used. (default) \n     * - \"metadata\": Returns only email message ID, labels, and email headers. \n     * - \"minimal\": Returns only email message ID and labels; does not return the email headers, body, or payload. \n     * - \"raw\": Returns the full email message data with body content in the raw field as a base64url\n     * encoded string; the payload field is not used.\n     */\n    format?: string;\n    /**\n     * When given and format is METADATA, only include headers specified.\n     */\n    metadataHeaders?: string;\n}\n\n/**\n * Lists the messages in the user's mailbox.\n */\ninterface MessagesListResponse {\n    /**\n     * List of messages.\n     */\n    messages: Array;\n    /**\n     * Token to retrieve the next page of results in the list.\n     */\n    nextPageToken: string;\n    /**\n     * Estimated total number of results.\n     */\n    resultSizeEstimate: number;\n}\n\n@Injectable()\nexport class MessagesService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/gmail/v1/users/';\n\n    /**\n     * Creates the MessagesService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Lists the messages in the user's mailbox.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public list(authToken: string, userId: string, options?: MessageListQueryOptions): Observable> {\n        return this.service.get(this.api + userId + '/messages', authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.messages);\n    }\n\n    /**\n     * Gets the specified message.\n     * @param authToken token of the authenticated user\n     * @param userId The user's email address. The special value me can be used to indicate the authenticated user.\n     * @param id The ID of the message to retrieve.\n     * @param options Optional query parameters\n     * @return {Observable}\n     */\n    public get(authToken: string, userId: string, id: string, options?: MessageQueryOptions): Observable {\n        return this.service.get(this.api + userId + '/messages/' + id, authToken, {params: options})\n            .map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mirror.html":{"url":"interfaces/Mirror.html","title":"interface - Mirror","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Mirror\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/mirror.ts\n        \n\n            \n                Description\n            \n            \n                The Mirror interface\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    The Id of the Mirror\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    The Path to the Image used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    The Name of the Mirror used to display on administration operations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    The User to which the Mirror belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        widgets\n                                    \n                                \n                                \n                                    \n                                        widgets:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/mirror.ts:33\n                                        \n                                    \n\n                            \n                                \n                                    The Widgets to Display in the Mirror frontend\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Widget} from './widget';\n\n/**\n * The Mirror interface\n *\n * @interface Mirror\n */\nexport interface Mirror {\n\n    /**\n     * The Id of the Mirror\n     */\n    id: string;\n    /**\n     * The User to which the Mirror belongs to\n     */\n    user: string;\n    /**\n     * The Name of the Mirror used to display on administration operations.\n     */\n    name: string;\n    /**\n     * The Path to the Image used to display on administration operations.\n     */\n    image: string;\n    /**\n     * The Widgets to Display in the Mirror frontend\n     */\n    widgets: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsSetting.html":{"url":"interfaces/NewsSetting.html","title":"interface - NewsSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  NewsSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the News Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        feedUrl\n                                    \n                                \n                                \n                                    \n                                        feedUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:72\n                                        \n                                    \n\n                            \n                                \n                                    Url of the RSS News Feed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of news items to display\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequest.html":{"url":"interfaces/RegisterRequest.html","title":"interface - RegisterRequest","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterRequest\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:20\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:21\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:22\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseType.html":{"url":"interfaces/ResponseType.html","title":"interface - ResponseType","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseType\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/shared/response-type.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:22\n                                        \n                                    \n\n                            \n                                \n                                    Collection of Items.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:5\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nextPageToken\n                                    \n                                \n                                \n                                    \n                                        nextPageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Token that can be used to request the next page of this result.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nextSyncToken\n                                    \n                                \n                                \n                                    \n                                        nextSyncToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/shared/response-type.model.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    Token used at a later point in time to retrieve only the entries that have changed since this result was returned.\nOmitted if further results are available, in which case nextPageToken is provided.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface ResponseType {\n    /**\n     * Type of the resource.\n     */\n    kind: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Token that can be used to request the next page of this result.\n     */\n    nextPageToken: string;\n    /**\n     * Token used at a later point in time to retrieve only the entries that have changed since this result was returned.\n     * Omitted if further results are available, in which case nextPageToken is provided.\n     */\n    nextSyncToken: string;\n    /**\n     * Collection of Items.\n     */\n    items: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmartMirrorModuleOptions.html":{"url":"interfaces/SmartMirrorModuleOptions.html","title":"interface - SmartMirrorModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SmartMirrorModuleOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/module.options.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 10.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        apiUrl\n                                    \n                                \n                                \n                                    \n                                        apiUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/module.options.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        rtUrl\n                                    \n                                \n                                \n                                    \n                                        rtUrl:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/utils/module.options.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface SmartMirrorModuleOptions {\n    apiUrl: string;\n    rtUrl: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Task\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        completed\n                                    \n                                \n                                \n                                    \n                                        completed:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:55\n                                        \n                                    \n\n                            \n                                \n                                    Completion date of the task. This field is omitted if the task has not been completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        deleted\n                                    \n                                \n                                \n                                    \n                                        deleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:59\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether the task has been deleted. The default if False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        due\n                                    \n                                \n                                \n                                    \n                                        due:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:51\n                                        \n                                    \n\n                            \n                                \n                                    Due date of the task. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:64\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task\nlist was last cleared. The default is False. This field is read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Task identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:7\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource. This is always \"tasks#task\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:68\n                                        \n                                    \n\n                            \n                                \n                                    Collection of links. This collection is read-only.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        notes\n                                    \n                                \n                                \n                                    \n                                        notes:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:43\n                                        \n                                    \n\n                            \n                                \n                                    Notes describing the task. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    Parent task identifier. This field is omitted if it is a top-level task. This field is read-only.\nUse the \"move\" method to move the task under a different parent or to the top level.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:39\n                                        \n                                    \n\n                            \n                                \n                                    String indicating the position of the task among its sibling tasks under the same parent task or at the top\nlevel. If this string is greater than another task's corresponding position string according to lexicographical\nordering, the task is positioned after the other task under the same parent task (or at the top level).\nThis field is read-only. Use the \"move\" method to move the task to another position.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selfLink\n                                    \n                                \n                                \n                                    \n                                        selfLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    URL pointing to this task. Used to retrieve, update, or delete this task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:47\n                                        \n                                    \n\n                            \n                                \n                                    Status of the task. This is either \"needsAction\" or \"completed\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    Title of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.model.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    Last modification time of the task.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {TaskLink} from \"./task-link.model\";\n\nexport interface Task {\n    /**\n     * Type of the resource. This is always \"tasks#task\".\n     */\n    kind: string;\n    /**\n     * Task identifier.\n     */\n    id: string;\n    /**\n     * ETag of the resource.\n     */\n    etag: string;\n    /**\n     *    Title of the task.\n     */\n    title: string;\n    /**\n     * Last modification time of the task.\n     */\n    updated: Date;\n    /**\n     * URL pointing to this task. Used to retrieve, update, or delete this task.\n     */\n    selfLink: string;\n    /**\n     * Parent task identifier. This field is omitted if it is a top-level task. This field is read-only.\n     * Use the \"move\" method to move the task under a different parent or to the top level.\n     */\n    parent: string;\n    /**\n     * String indicating the position of the task among its sibling tasks under the same parent task or at the top\n     * level. If this string is greater than another task's corresponding position string according to lexicographical\n     * ordering, the task is positioned after the other task under the same parent task (or at the top level).\n     * This field is read-only. Use the \"move\" method to move the task to another position.\n     */\n    position: string;\n    /**\n     * Notes describing the task. Optional.\n     */\n    notes: string;\n    /**\n     * Status of the task. This is either \"needsAction\" or \"completed\".\n     */\n    status: string;\n    /**\n     * Due date of the task. Optional.\n     */\n    due: Date;\n    /**\n     * Completion date of the task. This field is omitted if the task has not been completed.\n     */\n    completed: Date;\n    /**\n     * Flag indicating whether the task has been deleted. The default if False.\n     */\n    deleted: boolean;\n    /**\n     * Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task\n     * list was last cleared. The default is False. This field is read-only.\n     */\n    hidden: boolean;\n    /**\n     * Collection of links. This collection is read-only.\n     */\n    links: Array;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskLink.html":{"url":"interfaces/TaskLink.html","title":"interface - TaskLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskLink\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task-link.model.ts\n        \n\n            \n                Description\n            \n            \n                A link of a Task.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    The description. In HTML speak: Everything between  and .\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    The URL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task-link.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Type of the link, e.g. \"email\".\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface TaskLink {\n    /**\n     * Type of the link, e.g. \"email\".\n     */\n        type: string;\n    /**\n     * The description. In HTML speak: Everything between  and .\n     */\n    description: string;\n    /**\n     * The URL.\n     */\n    link: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskListQueryOptions.html":{"url":"interfaces/TaskListQueryOptions.html","title":"interface - TaskListQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskListQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query options for tasklist.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of task lists returned on one page. Optional. The default is 100.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying the result page to return. Optional.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Tasklist} from \"./tasklist.model\";\n\n/**\n * Optional query options for tasklist.\n */\nexport interface  TaskListQueryOptions {\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n}\n\n@Injectable()\nexport class TaskListService {\n    /**\n     * relative url to the tasklists api\n     * @type {string}\n     */\n    private api = '/tasks/v1/users/@me/lists';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all the authenticated user's task lists\n     * @param authToken The authenticated user's token.\n     * @return {Observable} Tasklists of the authenticated user.\n     */\n    public list(authToken: string, options?: TaskListQueryOptions): Observable> {\n        return this.service.get(this.api, authToken, {params: options})\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n\n    /**\n     * Returns the authenticated user's specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Specified Tasklist for the authenticated user.\n     */\n    public get(authToken: string, tasklist: string): Observable {\n        return this.service.get(this.api, authToken, {\n            params: {\n                tasklist: tasklist\n            }\n        }).map(res => res.json());\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskQueryOptions.html":{"url":"interfaces/TaskQueryOptions.html","title":"interface - TaskQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskQueryOptions\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/task.service.ts\n        \n\n            \n                Description\n            \n            \n                Optional query parameters for tasks\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        completedMax\n                                    \n                                \n                                \n                                    \n                                        completedMax:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:16\n                                        \n                                    \n\n                            \n                                \n                                    Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        completedMin\n                                    \n                                \n                                \n                                    \n                                        completedMin:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:20\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dueMax\n                                    \n                                \n                                \n                                    \n                                        dueMax:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dueMin\n                                    \n                                \n                                \n                                    \n                                        dueMin:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:28\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxResults\n                                    \n                                \n                                \n                                    \n                                        maxResults:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:32\n                                        \n                                    \n\n                            \n                                \n                                    Maximum number of task lists returned on one page. Optional. The default is 100.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pageToken\n                                    \n                                \n                                \n                                    \n                                        pageToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:36\n                                        \n                                    \n\n                            \n                                \n                                    Token specifying the result page to return. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showCompleted\n                                    \n                                \n                                \n                                    \n                                        showCompleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:40\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showDeleted\n                                    \n                                \n                                \n                                    \n                                        showDeleted:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:44\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showHidden\n                                    \n                                \n                                \n                                    \n                                        showHidden:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:48\n                                        \n                                    \n\n                            \n                                \n                                    Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedMin\n                                    \n                                \n                                \n                                    \n                                        updatedMin:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/task.service.ts:52\n                                        \n                                    \n\n                            \n                                \n                                    Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs/Observable\";\nimport {BaseService} from \"../shared/base.service\";\nimport {ResponseType} from \"../shared/response-type.model\";\nimport {Task} from \"./task.model\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/map\";\n\n/**\n * Optional query parameters for tasks\n */\nexport interface TaskQueryOptions {\n    /**\n     * Upper bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMax?: string;\n    /**\n     * Lower bound for a task's completion date to filter by. Optional. The default is not to filter by completion date.\n     */\n    completedMin?: string;\n    /**\n     * Upper bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMax?: string;\n    /**\n     * Lower bound for a task's due date to filter by. Optional. The default is not to filter by due date.\n     */\n    dueMin?: string;\n    /**\n     * Maximum number of task lists returned on one page. Optional. The default is 100.\n     */\n    maxResults?: number;\n    /**\n     * Token specifying the result page to return. Optional.\n     */\n    pageToken?: string;\n    /**\n     * Flag indicating whether completed tasks are returned in the result. Optional. The default is True.\n     */\n    showCompleted?: boolean;\n    /**\n     * Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.\n     */\n    showDeleted?: boolean;\n    /**\n     * Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.\n     */\n    showHidden?: boolean;\n    /**\n     * Lower bound for a task's last modification time to filter by. Optional. The default is not to filter by last modification time.\n     */\n    updatedMin?: string;\n\n}\n\n@Injectable()\nexport class TaskService {\n    /**\n     * relative url to the tasks api\n     * @type {string}\n     */\n    private api = '/tasks/v1/lists/';\n\n    /**\n     * Creates the TaskService\n     * @param service Injected internal http service for interacting with google apis\n     */\n    constructor(private service: BaseService) {\n    }\n\n    /**\n     * Returns all tasks in the specified task list.\n     * @param authToken The authenticated user's token.\n     * @param tasklist Task list identifier.\n     * @return {Observable} Tasks for specified Tasklist of the authenticated user.\n     */\n\n    public list(authToken: string, tasklist: string, options?: TaskQueryOptions): Observable> {\n        return this.service.get(this.api + tasklist + \"/tasks\", authToken)\n            .map(res => res.json())\n            .map(res => >res.items);\n    }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskSetting.html":{"url":"interfaces/TaskSetting.html","title":"interface - TaskSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Setting for the Task Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:53\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of task items to display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        oAuthToken\n                                    \n                                \n                                \n                                    \n                                        oAuthToken:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:57\n                                        \n                                    \n\n                            \n                                \n                                    OAuth token for google tasks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        taskListId\n                                    \n                                \n                                \n                                    \n                                        taskListId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:62\n                                        \n                                    \n\n                            \n                                \n                                    Task List to display.\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tasklist.html":{"url":"interfaces/Tasklist.html","title":"interface - Tasklist","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Tasklist\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/gsuite/tasks/tasklist.model.ts\n        \n\n            \n                Description\n            \n            \n                A list containing tasks. Users can have more than one task list to manage their tasks the way they want.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        etag\n                                    \n                                \n                                \n                                    \n                                        etag:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:17\n                                        \n                                    \n\n                            \n                                \n                                    ETag of the resource.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:13\n                                        \n                                    \n\n                            \n                                \n                                    Task list identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        kind\n                                    \n                                \n                                \n                                    \n                                        kind:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:9\n                                        \n                                    \n\n                            \n                                \n                                    Type of the resource. This is always \"tasks#taskList\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        selfLink\n                                    \n                                \n                                \n                                    \n                                        selfLink:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    URL pointing to this task list. Used to retrieve, update, or delete this task list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:21\n                                        \n                                    \n\n                            \n                                \n                                    Title of the task list.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updated\n                                    \n                                \n                                \n                                    \n                                        updated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/gsuite/tasks/tasklist.model.ts:25\n                                        \n                                    \n\n                            \n                                \n                                    Last modification time of the task list\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        export interface Tasklist {\n    /**\n     * Type of the resource. This is always \"tasks#taskList\".\n     */\n    kind: string;\n    /**\n     * Task list identifier.\n     */\n    id: string;\n    /**\n     *    ETag of the resource.\n     */\n    etag: string;\n    /**\n     * Title of the task list.\n     */\n    title: string;\n    /**\n     * Last modification time of the task list\n     */\n    updated: Date;\n    /**\n     * URL pointing to this task list. Used to retrieve, update, or delete this task list.\n     */\n    selfLink: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ticket.html":{"url":"interfaces/Ticket.html","title":"interface - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Ticket\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ticket.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        mirrorId\n                                    \n                                \n                                \n                                    \n                                        mirrorId:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/ticket.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface Ticket {\n    number: string;         // The Ticket number used to register a mirror\n    mirrorId: string;       // The Id of the Mirror which has requested the ticket\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n            \n                Description\n            \n            \n                Created by cem on 09.06.17.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/user.ts:6\n                                        \n                                    \n\n                        \n                    \n            \n\n    \n    \n        export interface User {\n    user: string;           // email of user\n    name: string;           // name of user\n}\n\nexport interface LoginRequest {\n    user: string;           // email of user\n    password: string;       // md5 hashed password of user\n}\n\nexport interface LoginResponse extends User {\n    accessToken: string;    // access token for authenticating subsequent smartmirror api requests\n}\n\nexport interface RegisterRequest {\n    email: string;          // email of new user\n    name: string;           // name of new user\n    password: string;       // md5 hashed password of new user\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherSetting.html":{"url":"interfaces/WeatherSetting.html","title":"interface - WeatherSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n            \n                Description\n            \n            \n                Settings of the Weather Widget\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:37\n                                        \n                                    \n\n                            \n                                \n                                    The City for Weather retrieval\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        maxCount\n                                    \n                                \n                                \n                                    \n                                        maxCount:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:42\n                                        \n                                    \n\n                            \n                                \n                                    Maximal count of forecast days to display\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Widget.html":{"url":"interfaces/Widget.html","title":"interface - Widget","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Widget\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/models/widget.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:11\n                                        \n                                    \n\n                            \n                                \n                                    Name of the widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:23\n                                        \n                                    \n\n                            \n                                \n                                    The Order Position inside the Mirror Side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        setting\n                                    \n                                \n                                \n                                    \n                                        setting:     void\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     void\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:27\n                                        \n                                    \n\n                            \n                                \n                                    Settings of the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        side\n                                    \n                                \n                                \n                                    \n                                        side:     WidgetSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WidgetSide\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:19\n                                        \n                                    \n\n                            \n                                \n                                    The Side of the Mirror to Display the Widget\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     WidgetType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WidgetType\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/models/widget.ts:15\n                                        \n                                    \n\n                            \n                                \n                                    Type of the Widget\n\n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import {WidgetType, WidgetSide} from \"./enums\";\n\nexport interface Widget {\n    /**\n     * Name of the widget\n     */\n    name: string;\n    /**\n     * Type of the Widget\n     */\n        type: WidgetType;\n    /**\n     * The Side of the Mirror to Display the Widget\n     */\n    side: WidgetSide;\n    /**\n     * The Order Position inside the Mirror Side\n     */\n    order: number;\n    /**\n     * Settings of the Widget\n     */\n    setting: WeatherSetting | TaskSetting | NewsSetting | MailSettings | CalendarSettings;\n}\n\n/**\n * Settings of the Weather Widget\n */\nexport interface WeatherSetting {\n    /**\n     * The City for Weather retrieval\n     */\n    city: string;\n\n    /**\n     * Maximal count of forecast days to display\n     */\n    maxCount: number;\n}\n\n/**\n * Setting for the Task Widget\n */\nexport interface TaskSetting {\n\n    /**\n     * Maximal count of task items to display\n     */\n    maxCount: number;\n    /**\n     * OAuth token for google tasks\n     */\n    oAuthToken: string;\n\n    /**\n     * Task List to display.\n     */\n    taskListId: string;\n}\n\n/**\n * Setting for the News Widget\n */\nexport interface NewsSetting {\n    /**\n     * Url of the RSS News Feed\n     */\n    feedUrl: string;\n\n    /**\n     * Maximal count of news items to display\n     */\n    maxCount: number;\n}\n\nexport interface MailSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * show only unread email\n     */\n    unread: boolean;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n}\n\nexport interface CalendarSettings {\n\n    /**\n     * Maximal count of email items to display\n     */\n    maxCount: number;\n\n    /**\n     * OAuth token for google mail\n     */\n    oAuthToken: string;\n\n    /**\n     * the google calendar id to display\n     */\n    calendarId: string;\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    Variables\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 SMARTMIRRORMODULE_OPTIONS\n                            \n                        \n                        \n                            \n                                SMARTMIRRORMODULE_OPTIONS:     \n        \n                            \n                        \n                    \n                \n        \n        src/services/token.service.ts\n        \n                    \n                    \n                        \n                            \n                                 tokenKey\n                            \n                        \n                        \n                            \n                                tokenKey:     \n        \n                            \n                        \n                            \n                                \n                                    Default value : auth.token\n                                \n                            \n                    \n                \n        \n\n    Functions\n        src/index.ts\n        \n                    \n                    \n                        \n                            \n                                 createSmartMirrorModuleConfig\n                            \n                        \n                        \n                            \n        createSmartMirrorModuleConfig(options: undefined)\n                            \n                        \n        \n        \n        \n                    \n                \n        \n\n    Enumerations\n        src/models/enums.ts\n        \n                \n                    \n                        \n                            \n                                WidgetType\n                            \n                        \n                            \n                                \n                                    Created by cem on 09.06.17.\n        \n                                \n                            \n                                \n                                    \n                                        Weather\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Calender\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                                \n                                    \n                                        News\n                                    \n                                \n                                \n                                    \n                                        Value: 3\n                                    \n                                \n                                \n                                    \n                                        Mails\n                                    \n                                \n                                \n                                    \n                                        Value: 4\n                                    \n                                \n                                \n                                    \n                                        Notes\n                                    \n                                \n                                \n                                    \n                                        Value: 5\n                                    \n                                \n                    \n                \n                \n                    \n                        \n                            \n                                WidgetSide\n                            \n                        \n                                \n                                    \n                                        Inactive\n                                    \n                                \n                                \n                                    \n                                        Value: 0\n                                    \n                                \n                                \n                                    \n                                        Left\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        Right\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n        src/services/token.service.ts\n        \n                \n                    \n                        \n                            \n                                AuthUpdateType\n                            \n                        \n                                \n                                    \n                                        LoginSucess\n                                    \n                                \n                                \n                                    \n                                        Value: 1\n                                    \n                                \n                                \n                                    \n                                        AuthenticationFailure\n                                    \n                                \n                                \n                                    \n                                        Value: 2\n                                    \n                                \n                    \n                \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/gsuite/calendar/calendar-list.model.ts\n            \n            \n                interface\n            \n            \n                CalendarList\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                src/gsuite/calendar/calendar-list.service.ts\n            \n            \n                injectable\n            \n            \n                CalendarListService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                src/gsuite/calendar/calendar-list.service.ts\n            \n            \n                interface\n            \n            \n                CalendarListQueryOptions\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/gsuite/calendar/calendar-notifications.model.ts\n            \n            \n                interface\n            \n            \n                CalendarNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/calendar/calendar-reminders.model.ts\n            \n            \n                interface\n            \n            \n                CalendarReminder\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/calendar/event-attachments.model.ts\n            \n            \n                interface\n            \n            \n                EventAttachment\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/gsuite/calendar/event-attendee.model.ts\n            \n            \n                interface\n            \n            \n                EventAttendee\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/gsuite/calendar/event-date.model.ts\n            \n            \n                interface\n            \n            \n                EventDate\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/gsuite/calendar/event-gadget.model.ts\n            \n            \n                interface\n            \n            \n                EventGadget\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                src/gsuite/calendar/event-person.model.ts\n            \n            \n                interface\n            \n            \n                EventPerson\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/gsuite/calendar/event-properties.model.ts\n            \n            \n                interface\n            \n            \n                EventProperties\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/calendar/event-reminder.model.ts\n            \n            \n                interface\n            \n            \n                EventReminder\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/calendar/event-source.model.ts\n            \n            \n                interface\n            \n            \n                EventSource\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/calendar/event.model.ts\n            \n            \n                interface\n            \n            \n                Event\n            \n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                src/gsuite/calendar/events.service.ts\n            \n            \n                injectable\n            \n            \n                EventsService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                src/gsuite/calendar/events.service.ts\n            \n            \n                interface\n            \n            \n                EventsQueryOptions\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                src/gsuite/mail/message-attachment.model.ts\n            \n            \n                interface\n            \n            \n                MessageAttachment\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/gsuite/mail/message-header.model.ts\n            \n            \n                interface\n            \n            \n                MessageHeader\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/mail/message-payload.model.ts\n            \n            \n                interface\n            \n            \n                MessagePayload\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/gsuite/mail/message.model.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                src/gsuite/mail/messages.service.ts\n            \n            \n                injectable\n            \n            \n                MessagesService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                src/gsuite/mail/messages.service.ts\n            \n            \n                interface\n            \n            \n                MessageListQueryOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/gsuite/mail/messages.service.ts\n            \n            \n                interface\n            \n            \n                MessageQueryOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/gsuite/mail/messages.service.ts\n            \n            \n                interface\n            \n            \n                MessagesListResponse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/gsuite/shared/base.service.ts\n            \n            \n                injectable\n            \n            \n                BaseService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                src/gsuite/shared/response-type.model.ts\n            \n            \n                interface\n            \n            \n                ResponseType\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/gsuite/tasks/task-link.model.ts\n            \n            \n                interface\n            \n            \n                TaskLink\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/gsuite/tasks/task.model.ts\n            \n            \n                interface\n            \n            \n                Task\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                src/gsuite/tasks/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                src/gsuite/tasks/task.service.ts\n            \n            \n                interface\n            \n            \n                TaskQueryOptions\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.model.ts\n            \n            \n                interface\n            \n            \n                Tasklist\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.service.ts\n            \n            \n                injectable\n            \n            \n                TaskListService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                src/gsuite/tasks/tasklist.service.ts\n            \n            \n                interface\n            \n            \n                TaskListQueryOptions\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/control-request.ts\n            \n            \n                interface\n            \n            \n                ControlRequest\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/models/mirror.ts\n            \n            \n                interface\n            \n            \n                Mirror\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/models/ticket.ts\n            \n            \n                interface\n            \n            \n                Ticket\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginRequest\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                LoginResponse\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                RegisterRequest\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                src/models/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                CalendarSettings\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                MailSettings\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                NewsSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                TaskSetting\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                WeatherSetting\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                src/models/widget.ts\n            \n            \n                interface\n            \n            \n                Widget\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/mirror.service.ts\n            \n            \n                injectable\n            \n            \n                MirrorService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                src/services/smartmirror.service.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                src/services/socket.service.ts\n            \n            \n                injectable\n            \n            \n                SocketService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                src/services/storage.service.ts\n            \n            \n                injectable\n            \n            \n                StorageService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/services/ticket.service.ts\n            \n            \n                injectable\n            \n            \n                TicketService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                src/services/token.service.ts\n            \n            \n                injectable\n            \n            \n                TokenService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/utils/module.config.ts\n            \n            \n                injectable\n            \n            \n                SmartMirrorModuleConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                src/utils/module.options.ts\n            \n            \n                interface\n            \n            \n                SmartMirrorModuleOptions\n            \n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
